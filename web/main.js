(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{"+88x":function(t,e,n){"use strict";n.r(e),e.default=""},"+A87":function(t,e,n){"use strict";n.r(e),e.default=""},"+OpE":function(t,e,n){"use strict";n.r(e),e.default=""},"+j3E":function(t,e,n){"use strict";n.r(e),e.default=""},"/a1x":function(t,e,n){"use strict";n.r(e),e.default=""},"/oyo":function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="border">\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h5 class="mb-30">Inflow/Outflow</h5>\n                </div>\n            </div>\n            <div class="row pb-10 ml-0 mr-0 border-bottom">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">Prepared by:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                    <p class="mb-0 fs-14">Date:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <div class="row mb-30 ml-0 mr-0 mt-10">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                    <p>Total Eggs Inflow</p>\n                    <h3>{{ item ? (item.total_egg_inflow | number) : 0 }}</h3>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p>Total Eggs Outflow</p>\n                    <h3>{{ item ? (item.total_egg_outflow | number) : 0 }}</h3>\n                </div>\n            </div>\n            <div class="row mb-30 ml-0 mr-0 break-now" *ngIf="isLoaded && items.length > 0">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                    <canvas baseChart \n                        [datasets]="barChartData"\n                        [labels]="barChartLabels"\n                        [options]="barChartOptions"\n                        [plugins]="barChartPlugins"\n                        [legend]="barChartLegend"\n                        [chartType]="barChartType">\n                    </canvas>\n                </div>\n                <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>All Dates</p>\n                </div>\n                <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <ng-container *ngIf="visible_columns.length > 0">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                  <table>\n                    <thead>\n                      <tr>\n                        <ng-container *ngFor="let th of ths; let i = index">\n                          <th *ngIf="th.isVisible && th.canToggle">\n                            {{ th.label }}\n                          </th>\n                        </ng-container>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <ng-container *ngIf="isLoaded && items.length > 0">\n                        <tr *ngFor="let item of items; let i = index">\n                          <td *ngIf="ths[0].isVisible" class="w-25-per">{{ item.created_at | date: \'MM/dd/yyyy\' }}</td>\n                          <td *ngIf="ths[1].isVisible" class="w-25-per">{{ item.egg_in | number }}</td>\n                          <td *ngIf="ths[2].isVisible" class="w-25-per">{{ item.egg_out | number }}</td>\n                        </tr>\n                      </ng-container>\n                      <ng-container *ngIf="!isLoaded">\n                        <tr>\n                          <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                            <ngx-skeleton-loader [theme]="{\n                              \'border-radius\' : \'5px\',\n                              \'margin-bottom\' : \'0px\',\n                              \'height\' : \'20px\'\n                            }"></ngx-skeleton-loader>\n                          </td>\n                        </tr>\n                      </ng-container>\n                      <ng-container *ngIf="isLoaded && items.length == 0">\n                        <tr>\n                          <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                        </tr>\n                      </ng-container>\n                    </tbody>\n                  </table>\n                </div>\n              </ng-container>\n              <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n                <div class="row">\n                  <div class="col-12 text-center">\n                    <p class="mb-0">Please choose column visibility</p>\n                  </div>\n                </div>\n              </ng-container>\n            \n            <div class="row ml-0 mr-0 mt-20 border-bottom">\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Prepared By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Approved By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 h-22"></p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},"/psW":function(t,e,n){"use strict";n.r(e),e.default=""},0:function(t,e){},"05oP":function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="border">\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h5 class="mb-30">Price Trend Report</h5>\n                </div>\n            </div>\n            <div class="row pb-10 ml-0 mr-0 border-bottom">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">Prepared by:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                    <p class="mb-0 fs-14">Date:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            \n            <div class="container-card mb-25 mt-10 break-now">\n                <div class="row mb-30 ml-0 mr-0">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                        \x3c!-- <p class="mb-10">Overall Harvested Eggs</p> --\x3e\n                        <h1 class="heading"><span class="sub-heading">Egg Size: </span>{{ type_name }}</h1>\n                    </div>\n                </div>\n                <div class="row mb-30 ml-0 mr-0" *ngIf="isLoaded && items.length > 0">\n                    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                        <canvas baseChart \n                            [datasets]="lineChartData"\n                            [labels]="lineChartLabels"\n                            [options]="lineChartOptions"\n                            [plugins]="lineChartPlugins"\n                            [legend]="lineChartLegend"\n                            [chartType]="lineChartType">\n                        </canvas>\n                    </div>\n                    <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                        <p>All Dates</p>\n                    </div>\n                    <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                        <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="container-card">\n                <div class="row mb-30 ml-0 mr-0">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                        <p class="mb-0">Price Table</p>\n                    </div>\n                </div>\n                <ng-container *ngIf="visible_columns.length > 1">\n                    <div class="data-table p-relative table-listing" style="overflow: auto;">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <ng-container *ngFor="let th of ths; let i = index">\n                                        <th *ngIf="th.isVisible">\n                                            {{ th.label }}\n                                        </th>\n                                    </ng-container>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            <ng-container *ngIf="isLoaded && items.length > 0">\n                                <tr *ngFor="let item of items; let i = index">\n                                    <td *ngIf="ths[0].isVisible">{{ item.updated_at | date: \'MM/dd/yyyy\' }}</td>\n                                    <td *ngIf="ths[1].isVisible">₱ {{ item.price | number : \'1.2-2\' }}</td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="!isLoaded">\n                                <tr>\n                                    <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                        <ngx-skeleton-loader [theme]="{\n                                            \'border-radius\' : \'5px\',\n                                            \'margin-bottom\' : \'0px\',\n                                            \'height\' : \'20px\'\n                                        }"></ngx-skeleton-loader>\n                                    </td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="isLoaded && items.length == 0">\n                                <tr>\n                                    <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                </tr>\n                            </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </ng-container>\n                <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n                    <div class="row">\n                        <div class="col-12 text-center">\n                            <p class="mb-0">Please choose column visibility</p>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            \n            <div class="row ml-0 mr-0 mt-20 border-bottom">\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Prepared By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Approved By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 h-22"></p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},"0PFK":function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="row">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <h5 class="mb-30">Trays Inventory/Stocks</h5>\n            </div>\n        </div>\n        <div class="row pb-10 ml-0 mr-0 border-bottom">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14">Prepared by:</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14 fw-500">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                <p class="mb-0 fs-14">Date:</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14 fw-500">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n            </div>\n        </div>\n        \n        <ng-container *ngIf="visible_columns.length > 0">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <table>\n                    <thead>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible && th.canToggle" class="p-10 fs-12">\n                                    {{ th.label }}\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <ng-container *ngIf="isLoaded && items.length > 0">\n                            <tr *ngFor="let item of items; let i = index" [ngClass]="{\'break-now\' : (i + 1) % 11 == 0}">\n                            <td *ngIf="ths[0].isVisible" class="p-10 fs-12">{{ item.created_at | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                            <td *ngIf="ths[1].isVisible" class="p-10 fs-12">{{ item.beginning | number }}</td>\n                            <td *ngIf="ths[2].isVisible" class="p-10 fs-12">{{ item.returned | number }}</td>\n                            <td *ngIf="ths[3].isVisible" class="p-10 fs-12">{{ item.number_of_out_sales | number }}</td>\n                            <td *ngIf="ths[4].isVisible" class="p-10 fs-12">{{ item.total_remaining | number }}</td>\n                            <td *ngIf="ths[5].isVisible" class="p-10 fs-12">{{ item.name }}</td>\n                            </tr>\n                        </ng-container>\n                        <ng-container *ngIf="!isLoaded">\n                            <tr>\n                            <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                <ngx-skeleton-loader [theme]="{\n                                \'border-radius\' : \'5px\',\n                                \'margin-bottom\' : \'0px\',\n                                \'height\' : \'20px\'\n                                }"></ngx-skeleton-loader>\n                            </td>\n                            </tr>\n                        </ng-container>\n                        <ng-container *ngIf="isLoaded && items.length == 0">\n                            <tr>\n                            <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                            </tr>\n                        </ng-container>\n                    </tbody>\n                </table>\n            </div>\n        </ng-container>\n        <div class="row ml-0 mr-0 mt-20">\n            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                        <p class="fw-500 fs-14">Prepared By:</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                        <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                        <hr class="m-0">\n                        <p class="fs-12">Signature over Printed Name</p>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                        <p class="fw-500 fs-14">Approved By:</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                        <p class="mb-0 h-22"></p>\n                        <hr class="m-0">\n                        <p class="fs-12">Signature over Printed Name</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},"0nEt":function(t,e,n){"use strict";n.r(e),e.default=""},"0nnc":function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container pl-35 pt-35 pr-35">\n  <div class="row mb-20">\n      <div class="col-xl-9 col-lg-8 col-md-7 col-sm-6 col-12">\n          <h1 class="heading">View Staff Profile</h1>\n      </div>\n      <div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12">\n          <button type="button" mat-flat-button class="btn btn-sm btn-secondary btn-block" (click)="goBack()">\n              <i class="icon-back"></i>\n              <span class="ml-15">Go back to list</span>\n          </button>\n      </div>\n  </div>\n  <div class="row">\n    <div class="col-xl-9 col-lg-8 col-md-7 col-sm-6 col-12">\n      <div class="container-card view-record p-30">\n        <div class="row">\n          <div class="col-xl-2 offset-xl-0 col-lg-3 offset-lg-0 col-md-6 offset-md-3 col-sm-6 offset-sm-3 col-6 offset-3">\n            <img *ngIf="!isLoaded || !user_profile.profile_picture" src="../../../../../assets/images/profile.svg" class="avatar img-responsive">\n            <img *ngIf="isLoaded && user_profile.profile_picture" [src]="user_profile.profile_picture" class="avatar img-responsive">\n          </div>\n          <div class="col-xl-10 col-lg-9 col-md-12 col-sm-12 col-12 pl-0 mt-11">\n            <div class="row ml-0 mr-0">\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-5 fs-12">First Name</p>\n                <h1 class="mini-heading fw-500" *ngIf="isLoaded">{{ user_profile.profile_first_name }}</h1>\n                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                              \'border-radius\': \'5px\',\n                                              \'margin-bottom\': \'0px\',\n                                              \'height\': \'20px\',\n                                              \'width\': \'50%\'\n                                          }"></ngx-skeleton-loader>\n              </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-5 fs-12">Last Name</p>\n                <h1 class="mini-heading fw-500" *ngIf="isLoaded">{{ user_profile.profile_last_name }}</h1>\n                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                              \'border-radius\': \'5px\',\n                                              \'margin-bottom\': \'0px\',\n                                              \'height\': \'20px\',\n                                              \'width\': \'50%\'\n                                          }"></ngx-skeleton-loader>\n              </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n              </div>\n            </div>\n            <div class="row mt-19 ml-0 mr-0">\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">User Role</p>\n                <h1 class="fs-16" *ngIf="isLoaded">{{ user_profile.user_role_label }}</h1>\n                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                              \'border-radius\': \'5px\',\n                                              \'margin-bottom\': \'0px\',\n                                              \'height\': \'20px\',\n                                              \'width\': \'50%\'\n                                          }"></ngx-skeleton-loader>\n              </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">User ID</p>\n                <h1 class="fs-16" *ngIf="isLoaded">{{ user_profile.staff_id }}</h1>\n                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                              \'border-radius\': \'5px\',\n                                              \'margin-bottom\': \'0px\',\n                                              \'height\': \'20px\',\n                                              \'width\': \'50%\'\n                                          }"></ngx-skeleton-loader>\n              </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">Mobile Number</p>\n                <h1 class="fs-16" *ngIf="isLoaded">+63{{ user_profile.contact_number }}</h1>\n                    <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                              \'border-radius\': \'5px\',\n                                              \'margin-bottom\': \'0px\',\n                                              \'height\': \'20px\',\n                                              \'width\': \'50%\'\n                                          }"></ngx-skeleton-loader>\n              </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0" *ngIf="user_profile.user_role_id == 4 || user_profile.user_role_id == 5">\n                <p class="mb-8 fs-12">Email</p>\n                <h1 class="fs-16" *ngIf="isLoaded">{{ user_profile.email }}</h1>\n                    <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                              \'border-radius\': \'5px\',\n                                              \'margin-bottom\': \'0px\',\n                                              \'height\': \'20px\',\n                                              \'width\': \'50%\'\n                                          }"></ngx-skeleton-loader>\n              </div>\n            </div>\n            <div class="row mt-19 ml-0 mr-0">\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">Address</p>\n                <h1 class="fs-16" *ngIf="isLoaded">{{ user_profile.profile_location }}</h1>\n                    <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                            \'border-radius\': \'5px\',\n                                            \'margin-bottom\': \'0px\',\n                                            \'height\': \'20px\',\n                                            \'width\': \'50%\'\n                                        }"></ngx-skeleton-loader>\n              </div>\n                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                  <p class="mb-8 fs-12">Username</p>\n                  <h1 class="fs-16" *ngIf="isLoaded">{{ user_profile.username }}</h1>\n                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                                \'border-radius\': \'5px\',\n                                                                \'margin-bottom\': \'0px\',\n                                                                \'height\': \'20px\',\n                                                                \'width\': \'50%\'\n                                                            }"></ngx-skeleton-loader>\n                </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">Password</p>\n                <div class="row">\n                  <input type="{{ show_password ? \'text\' : \'password\' }}" value="{{ user_profile.real_password }}" class="mb-10 ml-15 field-pasword" readonly placeholder=""/>\n                  <button type="button" class="btn btn-clear p-absolute t-2 r-0 mt-15" (click)="showPassword()">\n                    <i [ngClass]="{ \'icon-eye-close\' : !show_password, \'icon-eye-open\' : show_password }"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class="row mt-19 ml-0 mr-0">\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">Date Added</p>\n                <h1 class="fs-16" *ngIf="isLoaded">{{ user_profile.created_at | date : \'MM/dd/yyyy\' }}</h1>\n                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                            \'border-radius\': \'5px\',\n                                            \'margin-bottom\': \'0px\',\n                                            \'height\': \'20px\',\n                                            \'width\': \'50%\'\n                                        }"></ngx-skeleton-loader>\n              </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">Last Login</p>\n                <h1 class="fs-16" *ngIf="isLoaded">{{ user_profile.last_login ? (user_profile.last_login | date : \'MM/dd/yyyy, hh:mm aaa\') : \'Not yet logged in\' }}</h1>\n                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                            \'border-radius\': \'5px\',\n                                            \'margin-bottom\': \'0px\',\n                                            \'height\': \'20px\',\n                                            \'width\': \'50%\'\n                                        }"></ngx-skeleton-loader>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12">\n      <div class="body-card pt-18 pl-24 pr-24 pb-43">\n        <h1 class="mini-heading fs-16 fw-500 mb-10">Actions</h1>\n        <p class="fs-14 action-note">Here are the actions you can apply for this order details.</p>\n        <button type="button" class="btn btn-secondary mt-30 btn-block" mat-flat-button [routerLink]="[\'/staffs/update\', user_profile.id]">\n          <div class="cus-layer ml-auto mr-auto">\n            <i class="icon-edit"></i>\n            <span class="ml-8 fs-14">Edit Profile</span>\n          </div>\n        </button>\n      </div>\n      <br>\n                    <div class="body-card pt-18 pl-24 pr-24 pb-43">\n                      <ng-container *ngIf="user_logged_in.id == user_profile.id">\n                        <h1 class="mini-heading fs-16 fw-500 mb-10">Note</h1>\n                        <p class="fs-14 action-note">Deleting your own account is prohibited.</p>\n                        <button type="button" mat-flat-button class="btn btn-secondary mt-30 btn-block" disabled>\n                          <span class="fs-14">Yes, I understand - delete user</span>\n                        </button>\n                      </ng-container>\n                      <ng-container *ngIf="user_logged_in.id != user_profile.id">\n                        <h1 class="mini-heading fs-16 fw-500 mb-10">Delete User?</h1>\n                        <p class="fs-14 action-note">Deleting a user removes all the data on this dashboard.</p>\n                        <button type="button" mat-flat-button class="btn btn-danger mt-30 btn-block"\n                          (click)="openModal(user_profile, \'user_delete\')">\n                          <span class="fs-14">Yes, I understand - delete user</span>\n                        </button>\n                      </ng-container>\n                    </div>\n    </div>\n\x3c!--             <div class="col-xl-3 col-lg-5 col-md-5 col-sm-12 col-12">\n              <div class="body-card pt-18 pl-24 pr-24 pb-43">\n                <ng-container *ngIf="user_logged_in.id == user_info.id">\n                  <h1 class="mini-heading fs-16 fw-500 mb-10">Note</h1>\n                  <p class="fs-14 action-note">Deleting your own account is prohibited.</p>\n                  <button type="button" mat-flat-button class="btn btn-secondary mt-30 btn-block" disabled>\n                    <span class="fs-14">Yes, I understand - delete user</span>\n                  </button>\n                </ng-container>\n                <ng-container *ngIf="user_logged_in.id != user_info.id">\n                  <h1 class="mini-heading fs-16 fw-500 mb-10">Delete User?</h1>\n                  <p class="fs-14 action-note">Deleting a user removes all the data on this dashboard.</p>\n                  <button type="button" mat-flat-button class="btn btn-danger mt-30 btn-block"\n                    (click)="openModal(userForm.value, \'user_delete\')">\n                    <span class="fs-14">Yes, I understand - delete user</span>\n                  </button>\n                </ng-container>\n              </div>\n            </div> --\x3e\n  </div>\n</section>\n\n<section class="main-container p-35">\n  <div class="row mb-35">\n    <div class="col-xl-6 col-lg-6 col-md-8 col-sm-12 col-12">\n      <h1 class="heading">Activity Log</h1>\n    </div>\n  </div>\n  \n  <div class="container-card p-30 mb-25" *ngIf="show_filter">\n    <div class="row">\n      <div class="col-12">\n        <h6 class="card-heading">Filters</h6>\n      </div>\n    </div>\n    <div class="row">\n\x3c!--       <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n        <div class="row">\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n              <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n              <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block" (click)="created_at_picker.open()">{{ from && to ? \'Date Created - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date Created\' }}\n                <i class="icon-arrow-drop-down ml-5"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div> --\x3e\n\x3c!--       <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n            Clear Filters\n          </button>\n        </div>\n      </div> --\x3e\n    </div>\n  </div>\n  <div class="container-card p-30">\n    <div class="row mb-25">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n\x3c!--       <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n        <div class="form-group">\n          <div class="inner-group">\n            <mat-select multiple class="btn btn-block btn-primary multiple-select" (selectionChange)="changeColumnVisibility($event)" placeholder="Column Visibility" [(ngModel)]="visible_columns">\n              <mat-select-trigger>Column Visibility</mat-select-trigger>\n              <mat-option *ngFor="let item of ths; let i = index" [value]="i">{{ item.label }}</mat-option>\n            </mat-select>\n          </div>\n        </div>\n      </div> --\x3e\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n        <div class="form-group">\n          <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)"\n            [(ngModel)]="created_at">\n          <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n          <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block"\n            (click)="created_at_picker.open()">{{ from && to ? \'Date Created - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date Created\' }}\n            <i class="icon-arrow-drop-down ml-5"></i>\n          </button>\n        </div>\n      </div>\n      <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n        <div class="form-group">\n          <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="code"\n            (selectionChange)="changeCode($event)" placeholder="Staff Activity">\n            <mat-option *ngFor="let code_option of code_options" [value]="code_option.value">{{ code_option.label }}</mat-option>\n          </mat-select>\n        </div>\n      </div>\n\x3c!--       <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n        <div class="form-group">\n          <div class="inner-group search">\n            <i class="icon-search"></i>\n            <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n              (keydown.enter)="searchItem()" />\n          </div>\n        </div>\n      </div> --\x3e\n\x3c!--       <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n            <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n          </button>\n        </div>\n      </div> --\x3e\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n            Clear Filters\n          </button>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf="visible_columns.length > 1">\n      <div class="data-table p-relative table-listing" style="overflow: auto;">\n        <table>\n          <thead>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf="isLoaded && items.length > 0">\n              <tr *ngFor="let item of items; let i = index">\n                <td *ngIf="ths[0].isVisible" [innerHTML]="item.action"></td>\n                <td *ngIf="ths[1].isVisible">{{ item.created_at }}</td>\n\x3c!--                 <td *ngIf="ths[2].isVisible">\n                  <mat-chip-list>\n                    <mat-chip>{{ item.recordStatus }}</mat-chip>\n                  </mat-chip-list>\n                </td>\n                <td *ngIf="ths[3].isVisible">{{ item.bird_count | number }}</td>\n                <td *ngIf="ths[4].isVisible">{{ item.real_egg_count | number }}</td>\n                <td *ngIf="ths[5].isVisible">\n                  <button type="button" mat-flat-button class="btn btn-clear" [routerLink]="[ \'/transactions/view\', item.id]">\n                    <i class="icon-datatables-view"></i>\n                    View\n                  </button>\n                </td> --\x3e\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="!isLoaded">\n              <tr>\n                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                  <ngx-skeleton-loader [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'0px\',\n                    \'height\' : \'20px\'\n                  }"></ngx-skeleton-loader>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && items.length == 0">\n              <tr>\n                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n              </tr>\n            </ng-container>\n          </tbody>\n          <tfoot>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n      <div class="row">\n        <div class="col-12 text-center">\n          <p class="mb-0">Please choose column visibility</p>\n        </div>\n      </div>\n    </ng-container>\n    <div class="row mt-35">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n        <ul class="paginate pull-right">\n          <li class="link cursor-pointer" *ngIf="prev_page">\n            <a (click)="gotoPage(prev_page)">\n              Previous\n            </a>\n          </li>\n          <ng-container *ngFor="let x of counter(totalPages); let i = index">\n            <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n          </ng-container>\n          <li class="link cursor-pointer" *ngIf="next_page">\n            <a (click)="gotoPage(next_page)">\n              Next\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</section>'},"0yIp":function(t,e,n){"use strict";n.r(e),e.default=""},1:function(t,e,n){t.exports=n("zUnb")},"1EFy":function(t,e,n){"use strict";n.r(e),e.default="<p>report-footer works!</p>\n"},"1MjJ":function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-25">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <h1 class="heading">Welcome to your dashboard, General Manager!</h1>\n            <p class="sub-heading">These are the things that needs your attention.</p>\n        </div>\n        \x3c!-- <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block">\n                <i class="icon-download"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n                <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n            </button>\n        </div> --\x3e\n    </div>\n    <div class="row mb-30" *ngIf="type == 0">\n        <div class="col-6 d-flex align-items-center">\n            <p class="sub-heading fw-500 m-0">Today, {{ dateToday | date: \'MMMM dd, yyyy\' }}</p>\n            <div class="divider mr-15 ml-15 h-26"></div>\n            <button type="button" mat-flat-button class="btn btn-primary btn-sm" (click)="changeType()">\n                <i class="icon-eye-primary"></i>\n                <span class="ml-10">View numbers by this year up to date</span>\n            </button>\n        </div>\n        <div class="col-6 d-flex align-items-center">\n            <p class="sub-heading mb-0 ml-auto italic">(last updated a minute ago)</p>\n        </div>\n    </div>\n    <div class="row mb-30" *ngIf="type == 1">\n        <div class="col-6 d-flex align-items-center"><button type="button" mat-flat-button class="btn btn-primary btn-sm" (click)="changeType()">\n            <i class="icon-eye-primary"></i>\n            <span class="ml-10">View numbers by today</span>\n        </button>\n        <div class="divider mr-15 ml-15 h-26"></div>\n        <p class="sub-heading fw-500 m-0">January 1 - {{ dateToday | date: \'MMMM dd, yyyy\' }}</p>\n        </div>\n        <div class="col-6 d-flex align-items-center">\n            <p class="sub-heading mb-0 ml-auto italic">(last updated a minute ago)</p>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-3 mb-30">\n            <div class="container-card p-20">\n                <p class="mini-heading mb-10 fs-14">Daily Reports For Approval</p>\n                <h1 class="heading mb-0">{{ dashboard_data ? (dashboard_data.daily_reports_for_approval | number) : 0 }}</h1>\n            </div>\n        </div>\n        <div class="col-3 mb-30">\n            <div class="container-card p-20">\n                <p class="mini-heading mb-10 fs-14">Sorted Reports For Approval</p>\n                <h1 class="heading mb-0">{{ dashboard_data ? (dashboard_data.sorted_reports_for_approval | number) : 0 }}</h1>\n            </div>\n        </div>\n        <div class="col-3 mb-30">\n            <div class="container-card p-20">\n                <p class="mini-heading mb-10 fs-14">Total Eggs Harvested</p>\n                <h1 class="heading mb-0">{{ dashboard_data ? (dashboard_data.total_eggs_harvested | number) : 0 }}</h1>\n            </div>\n        </div>\n        <div class="col-3 mb-30">\n            <div class="container-card p-20">\n                <p class="mini-heading mb-10 fs-14">Production Rate</p>\n                <h1 class="heading mb-0">{{ dashboard_data ? (dashboard_data.production_rate | number : \'1.2-2\') : 0 }} %</h1>\n            </div>\n        </div>\n        <div class="col-3 mb-30">\n            <div class="container-card p-20">\n                <p class="mini-heading mb-10 fs-14">Orders For Approval</p>\n                <h1 class="heading mb-0">{{ dashboard_data ? (dashboard_data.collectible_orders_for_approval | number) : 0 }}</h1>\n            </div>\n        </div>\n        <div class="col-3 mb-30">\n            <div class="container-card p-20">\n                <p class="mini-heading mb-10 fs-14">Collectible Amount</p>\n                <h1 class="heading mb-0">₱ {{ dashboard_data ? (dashboard_data.collectibles_amount | number : \'1.2-2\') : 0 }}</h1>\n            </div>\n        </div>\n        <div class="col-3 mb-30">\n            <div class="container-card p-20">\n                <p class="mini-heading mb-10 fs-14">Fully Paid Amount</p>\n                <h1 class="heading mb-0">₱ {{ dashboard_data ? (dashboard_data.fully_paid_orders | number : \'1.2-2\') : 0 }}</h1>\n            </div>\n        </div>\n        <div class="col-3 mb-30">\n            <div class="container-card p-20">\n                <p class="mini-heading mb-10 fs-14">Total Revenue</p>\n                <h1 class="heading mb-0">₱ {{ dashboard_data ? (dashboard_data.total_revenue | number : \'1.2-2\') : 0 }}</h1>\n            </div>\n        </div>\n    </div>\n    <ngx-masonry class="masonry-item mt-15" [options]="{ transitionDuration: \'0.8s\', gutter: 30 }">\n        <div class="sect-layer pb-30" *ngFor="let item of masonryItems; let i = index">\n            <div ngxMasonryItem class="body-card p-20">\n                \x3c!-- Feed Consumption --\x3e\n                <ng-container *ngIf="item.key == \'feed_consumption\'">\n                    <div class="flex-align-center mb-10">\n                        <p class="mini-heading mb-0 fs-16">{{item.title}}</p>\n                        <button *ngIf="item.url" type="button" mat-flat-button class="btn btn-clear btn-sm ml-auto" [routerLink]="[item.url]">\n                            <span class="mr-15">View more</span>\n                            <i class=icon-proceed></i>\n                        </button>\n                    </div>\n                    <div class="row" *ngIf="feed_consumption_data && feed_consumption_data.length > 0">\n                        <div class="col-12">\n                            <canvas baseChart\n                                [datasets]="barChartData"\n                                [labels]="barChartLabels"\n                                [options]="barChartOptions"\n                                [plugins]="barChartPlugins"\n                                [legend]="barChartLegend"\n                                [chartType]="barChartType">\n                            </canvas>\n                        </div>\n                    </div>\n                </ng-container>\n                \x3c!-- Feed Consumption --\x3e\n                \x3c!-- Medicine Consumption --\x3e\n                <ng-container *ngIf="item.key == \'medicine_consumption\'">\n                    <div class="flex-align-center mb-10">\n                        <p class="mini-heading mb-0 fs-16">{{item.title}}</p>\n                        <button *ngIf="item.url" type="button" mat-flat-button class="btn btn-clear btn-sm ml-auto" [routerLink]="[item.url]">\n                            <span class="mr-15">View more</span>\n                            <i class=icon-proceed></i>\n                        </button>\n                    </div>\n                    <div class="row pl-10 pr-10 meds-title">\n                        <div class="col-4">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Medicine Name</p>\n                        </div>\n                        <div class="col-4">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Unit</p>\n                        </div>\n                        <div class="col-4">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Consumed Value</p>\n                        </div>\n                    </div>\n                    <div class="row pl-10 pr-10 meds-cont">\n                        <ng-container *ngIf="medicine_consumption_data">\n                            <ng-container *ngFor="let item of medicine_consumption_data; let i = index">\n                                <div class="col-4">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal">{{ item.medicine }}</p>\n                                </div>\n                                <div class="col-4">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal">{{ item.unit.unit }}</p>\n                                </div>\n                                <div class="col-4">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal">{{ item.consumed_medicine | number }}</p>\n                                </div>\n                            </ng-container>\n                        </ng-container>\n                        <ng-container *ngIf="!medicine_consumption_data">\n                            <div class="col-12 text-center">\n                                <p class="sub-heading">No record found</p>\n                            </div>\n                        </ng-container>\n                    </div>\n                </ng-container>\n                \x3c!-- Medicine Consumption --\x3e\n                \x3c!-- Harvest Production Status --\x3e\n                <ng-container *ngIf="item.key == \'harvest_production_status\'">\n                    <div class="flex-align-center mb-10">\n                        <p class="mini-heading mb-0 fs-16">{{item.title}}</p>\n                        <button *ngIf="item.url" type="button" mat-flat-button class="btn btn-clear btn-sm ml-auto" [routerLink]="[item.url]">\n                            <span class="mr-15">View more</span>\n                            <i class=icon-proceed></i>\n                        </button>\n                    </div>\n                    <div class="row pl-10 pr-10 meds-title">\n                        <div class="col-3">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Flockman Name</p>\n                        </div>\n                        <div class="col-3">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Total Egg Prod</p>\n                        </div>\n                        <div class="col-3">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Prod Rate</p>\n                        </div>\n                        <div class="col-3">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Action</p>\n                        </div>\n                    </div>\n                    <div class="row pl-10 pr-10 meds-cont">\n                        <ng-container *ngIf="harvest_production_status_data">\n                            <ng-container *ngFor="let item of harvest_production_status_data; let i = index">\n                                <div class="col-3">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal">{{ item.first_name }} {{ item.last_name }}</p>\n                                </div>\n                                <div class="col-3">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal">{{ item.total_egg_production ? (item.total_egg_production) : 0 }}</p>\n                                </div>\n                                <div class="col-3">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal">{{ item.production_rate ? (item.production_rate | number : \'1.2-2\') : 0 }} %</p>\n                                </div>\n                                <div class="col-3">\n                                    <button type="button" mat-flat-button class="btn btn-clear btn-sm btn-block pl-0">\n                                        <i class="icon-eye"></i>\n                                        View Report\n                                    </button>\n                                </div>\n                            </ng-container>\n                        </ng-container>\n                        <ng-container *ngIf="!harvest_production_status_data">\n                            <div class="col-12 text-center">\n                                <p class="sub-heading">No record found</p>\n                            </div>\n                        </ng-container>\n                    </div>\n                </ng-container>\n                \x3c!-- Harvest Production Status --\x3e\n                \x3c!-- Harvest Production Rate per houses --\x3e\n                <ng-container *ngIf="item.key == \'harvest_production_rate\'">\n                    <div class="flex-align-center mb-10">\n                        <p class="mini-heading mb-0 fs-16">{{item.title}}</p>\n                        <button *ngIf="item.url" type="button" mat-flat-button class="btn btn-clear btn-sm ml-auto" [routerLink]="[item.url]">\n                            <span class="mr-15">View more</span>\n                            <i class=icon-proceed></i>\n                        </button>\n                    </div>\n                    <div class="row" *ngIf="harvest_rate_data && harvest_rate_data.length > 0">\n                        <div class="col-12">\n                            <canvas baseChart\n                                [data]="pieChartData"\n                                [labels]="pieChartLabels"\n                                [chartType]="pieChartType"\n                                [options]="pieChartOptions"\n                                [plugins]="pieChartPlugins"\n                                [legend]="pieChartLegend">\n                            </canvas>\n                        </div>\n                    </div>\n                </ng-container>\n                \x3c!-- Harvest Production Rate per houses --\x3e\n                \x3c!-- Recent Transactions --\x3e\n                <ng-container *ngIf="item.key == \'recent_transactions\'">\n                    <div class="flex-align-center mb-10">\n                        <p class="mini-heading mb-0 fs-16">{{item.title}}</p>\n                        <button *ngIf="item.url" type="button" mat-flat-button class="btn btn-clear btn-sm ml-auto" [routerLink]="[item.url]">\n                            <span class="mr-15">View more</span>\n                            <i class=icon-proceed></i>\n                        </button>\n                    </div>\n                    <div class="row pl-10 pr-10 meds-title">\n                        <div class="col-3">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Order no.</p>\n                        </div>\n                        <div class="col-4">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Customer Name</p>\n                        </div>\n                        <div class="col-3">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Status</p>\n                        </div>\n                        <div class="col-2">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Date</p>\n                        </div>\n                    </div>\n                    <div class="row pl-10 pr-10 meds-cont scrollable h-300">\n                        <ng-container *ngIf="recent_transactions_data">\n                            <ng-container *ngFor="let item of recent_transactions_data; let i = index">\n                                <div class="col-3">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal">{{ item.transaction_id }}</p>\n                                </div>\n                                <div class="col-4">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal">{{ item.customer_name }}</p>\n                                </div>\n                                <div class="col-3">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal">{{ item.status }}</p>\n                                </div>\n                                <div class="col-2">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal">{{ item.created_at | date : \'LLL dd\' }}</p>\n                                </div>\n                            </ng-container>\n                        </ng-container>\n                        <ng-container *ngIf="!recent_transactions_data">\n                            <div class="col-12 text-center">\n                                <p class="sub-heading">No record found</p>\n                            </div>\n                        </ng-container>\n                    </div>\n                </ng-container>\n                \x3c!-- Recent Transactions --\x3e\n                \x3c!-- Recent Staff Activities --\x3e\n                <ng-container *ngIf="item.key == \'recent_staff_activities\'">\n                    <div class="flex-align-center mb-10">\n                        <p class="mini-heading mb-0 fs-16">{{item.title}}</p>\n                        <button *ngIf="item.url" type="button" mat-flat-button class="btn btn-clear btn-sm ml-auto" [routerLink]="[item.url]">\n                            <span class="mr-15">View more</span>\n                            <i class=icon-proceed></i>\n                        </button>\n                    </div>\n                    <div class="row pl-10 pr-10 meds-title">\n                        <div class="col-3">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Name</p>\n                        </div>\n                        <div class="col-6">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Activity</p>\n                        </div>\n                        <div class="col-3">\n                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Date</p>\n                        </div>\n                    </div>\n                    <div class="row pl-10 pr-10 meds-cont scrollable h-300">\n                        <ng-container *ngIf="staff_activities_data">\n                            <ng-container *ngFor="let item of staff_activities_data; let i = index">\n\x3c!--                                 <div class="col-12">\n                                    <p class="mini-heading mb-14 mt-14 fs-16 font-weight-normal">{{ i }}</p>\n                                </div> --\x3e\n                                <div class="col-3">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal">{{ item.name }}</p>\n                                </div>\n                                <div class="col-6">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal" [innerHTML]="item.action"></p>\n                                </div>\n                                <div class="col-3">\n                                    <p class="mini-heading mb-10 mt-10 fs-16 font-weight-normal">{{ item.created_at | date: \'medium\' }}</p>\n                                </div>\n                            </ng-container>\n                        </ng-container>\n                        <ng-container *ngIf="!staff_activities_data">\n                            <div class="col-12 text-center">\n                                <p class="sub-heading">No record found</p>\n                            </div>\n                        </ng-container>\n                    </div>\n                </ng-container>\n                \x3c!-- Recent Staff Activities --\x3e\n            </div>\n        </div>\n    </ngx-masonry>\n</section>\n'},2:function(t,e){},"2Bv7":function(t,e,n){"use strict";n.r(e),e.default=""},"2Q4y":function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-20">\n        <div class="col-xl-9 col-lg-8 col-md-7 col-sm-6 col-12">\n            <h1 class="heading">View Daily Report</h1>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-12 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary btn-block" (click)="goBack()">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-8">\n            <mat-tab-group [(selectedIndex)]="selectedIndex" (selectedIndexChange)="tabChanged($event)">\n                <mat-tab label="Harvest Report">\n                    <div class="container-card view-record p-30">\n                        <div class="row mb-30">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                      <tbody>\n                                        \x3c!-- <tr>\n                                            <td class="w-30-per alt">Report Status</td>\n                                            <td class="w-70-per">{{ item.recordStatus }}</td>\n                                        </tr> --\x3e\n                                        <tr>\n                                            <td class="w-30-per alt">Harvested by</td>\n                                            <td class="w-70-per">{{ item.name }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">House/Building no.</td>\n                                            <td class="w-70-per">{{ item.house ? item.house.house_name : \'\' }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Report Date</td>\n                                            <td class="w-70-per">{{ item.prepared_by_date | date: \'MM/dd/yyyy\' }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Report Time</td>\n                                            <td class="w-70-per">{{ item.prepared_by_date | date: \'hh:mm aaa\' }}</td>\n                                        </tr>\n                                      </tbody>\n                                  </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <h6>Basic Details</h6>\n                            </div>\n                        </div>\n                        <div class="row mb-30">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                            <td class="w-30-per alt">Bird Count</td>\n                                            <td class="w-70-per">{{ item.bird_count | number }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Age</td>\n                                            <td class="w-70-per">{{ item.age }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Mortality</td>\n                                            <td class="w-70-per">{{ item.mortality | number }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Cull</td>\n                                            <td class="w-70-per">{{ item.cull | number }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">End Bird Population</td>\n                                            <td class="w-70-per">{{ item.bird_count | number }}</td>\n                                        </tr>\n                                      </tbody>\n                                  </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <h6>Feeds and Medicine Consumption Details</h6>\n                            </div>\n                        </div>\n                        <div class="row mb-30">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                            <td class="w-30-per alt">No. of Sacks</td>\n                                            <td class="w-70-per">{{ item.feeds ? (item.feeds.bags | number) : 0 }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Feed Consumption</td>\n                                            <td class="w-70-per">{{ item.feeds ? item.feeds.string : \'\' }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Medicine intake</td>\n                                            <td class="w-70-per">\n                                                <ng-container *ngFor="let medicine of item.medicine; let i = index">\n                                                    {{ medicine.medicine }} {{ i < item.medicine.length - 1 ? \', \' : \'\' }}\n                                                </ng-container>\n                                            </td>\n                                        </tr>\n                                      </tbody>\n                                  </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <h6>Counted Egg Details</h6>\n                            </div>\n                        </div>\n                        <div class="row mb-30">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                            <td class="w-30-per alt">Egg Count</td>\n                                            <td class="w-70-per">{{ item.egg_count | number }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Validated Egg Count</td>\n                                            <td class="w-70-per">{{ item.real_egg_count | number }}</td>\n                                        </tr>\n                                      </tbody>\n                                  </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <h6>Report Signatory</h6>\n                            </div>\n                        </div>\n                        <div class="row mb-30">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                            <td class="w-30-per alt">Prepared by</td>\n                                            <td class="w-70-per">{{ item.prepared_by_name }} ({{ item.prepared_by_role }})</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Signature</td>\n                                            <td class="w-70-per">\n                                                <img [src]="item.prepared_by_path" class="img-responsive">\n                                            </td>\n                                        </tr>\n                                      </tbody>\n                                  </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row mb-30" *ngIf="item.checked_by">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                            <td class="w-30-per alt">Checked by</td>\n                                            <td class="w-70-per">{{ item.checked_by_name }} ({{ item.checked_by_role }})</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Signature</td>\n                                            <td class="w-70-per">\n                                                <img [src]="item.checked_by_path" class="img-responsive">\n                                            </td>\n                                        </tr>\n                                      </tbody>\n                                  </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row" *ngIf="item.received_by">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                            <td class="w-30-per alt">Received by</td>\n                                            <td class="w-70-per">{{ item.received_by_name }} ({{ item.received_by_role }})</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Signature</td>\n                                            <td class="w-70-per">\n                                                <img [src]="item.received_by_path" class="img-responsive">\n                                            </td>\n                                        </tr>\n                                      </tbody>\n                                  </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab label="Sorted Report" *ngIf="item && item.isSorted == 1">\n                    <div class="container-card view-record p-30">\n                        <div class="row mb-30">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                      <tbody>\n                                        \x3c!-- <tr>\n                                            <td class="w-30-per alt">Report Status</td>\n                                            <td class="w-70-per">{{ item.recordStatus }}</td>\n                                        </tr> --\x3e\n                                        <tr>\n                                            <td class="w-30-per alt">Sorted by</td>\n                                            <td class="w-70-per">{{ sorting_item.prepared_by_name }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">House/Building no.</td>\n                                            <td class="w-70-per">{{ sorting_item.house ? sorting_item.house.house_name : \'\' }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Report Date</td>\n                                            <td class="w-70-per">{{ sorting_item.prepared_by_date | date: \'MM/dd/yyyy\' }}</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Report Time</td>\n                                            <td class="w-70-per">{{ sorting_item.prepared_by_date | date: \'hh:mm aaa\' }}</td>\n                                        </tr>\n                                      </tbody>\n                                  </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <h6>Sorted Egg Details</h6>\n                            </div>\n                        </div>\n                        <div class="row mb-30">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                      <tbody>\n                                        <tr *ngFor="let egg of sorting_item.eggs; let i = index">\n                                            <td class="w-30-per alt">{{ egg.egg_type.type }}</td>\n                                            <td class="w-70-per">{{ egg.egg_count | number }}</td>\n                                        </tr>\n                                      </tbody>\n                                  </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <h6>Report Signatory</h6>\n                            </div>\n                        </div>\n                        <div class="row mb-30">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                            <td class="w-30-per alt">Prepared by</td>\n                                            <td class="w-70-per">{{ sorting_item.prepared_by_name }} ({{ sorting_item.prepared_by_role }})</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Signature</td>\n                                            <td class="w-70-per">\n                                                <img [src]="sorting_item.prepared_by_path" class="img-responsive">\n                                            </td>\n                                        </tr>\n                                      </tbody>\n                                  </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row mb-30" *ngIf="sorting_item.checked_by">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                            <td class="w-30-per alt">Checked by</td>\n                                            <td class="w-70-per">{{ sorting_item.checked_by_name }} ({{ sorting_item.checked_by_role }})</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Signature</td>\n                                            <td class="w-70-per">\n                                                <img [src]="sorting_item.checked_by_path" class="img-responsive">\n                                            </td>\n                                        </tr>\n                                      </tbody>\n                                  </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row" *ngIf="sorting_item.received_by">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                            <td class="w-30-per alt">Received by</td>\n                                            <td class="w-70-per">{{ sorting_item.received_by_name }} ({{ sorting_item.received_by_role }})</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Signature</td>\n                                            <td class="w-70-per">\n                                                <img [src]="sorting_item.received_by_path" class="img-responsive">\n                                            </td>\n                                        </tr>\n                                      </tbody>\n                                  </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n            \n        </div>\n        <div class="col-4">\n            <div class="body-card pt-18 pl-24 pr-24 pb-38">\n                <h1 class="mini-heading fs-16 fw-500 mb-20">Actions</h1>\n                <button type="button" mat-flat-button class="btn btn-primary btn-block mb-12" (click)="openModal()" [disabled]="!isLoaded">\n                  <span class="ml-15">Download as PDF</span>\n                </button>\n                <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportToCsv()" [disabled]="!isLoaded">\n                  <span class="ml-15">Download as CSV</span>\n                </button>\n            </div>\n            <div class="body-card pt-29 pl-26 pr-26 pb-58 mt-38">\n                <h1 class="mini-heading fs-16 fw-500 mb-20">Report Tracking Status</h1>\n                <div class="tracking-sect">\n                    <ngx-skeleton-loader *ngIf="!item" [theme]="{\n                        \'border-radius\': \'5px\',\n                        \'margin-bottom\': \'0px\',\n                        \'height\': \'20px\'\n                    }"></ngx-skeleton-loader>\n                    <div class="timeline-sect" *ngIf="item">\n                        <ng-container *ngFor="let tl of item.tracking_status; let i = index">\n                            <div class="tl-row row">\n                                <div class="col-3 pr-0">\n                                    <div class="timeline tl-date no-padding-left no-padding-right">\n                                        {{ tl.date | date:\'MMM dd, yyyy\' }}<br>\n                                        {{ tl.date | date:\'h:mm aaa\' }}\n                                    </div>\n                                </div>\n                                <div class="col-2">\n                                    <div class="timeline">\n                                        <div class="timeline-progress" [ngClass]="{\'finish\': tl.status == 2}"></div>\n                                        <div class="timeline-circle" [ngClass]="[tl.status == 2 ? \'finish\':\'\', tl.status == 1 ? \'pending\':\'\']">\n                                            <img class="tl-check" *ngIf="tl.status == 2" src="./../../../../../assets/images/custom-check.png">\n                                            <div class="tl-pending" *ngIf="tl.status == 1"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="col-7 pl-0">\n                                    <div class="timeline tl-cont no-padding-left">\n                                        <p class="mb-0 mt-3">{{ tl.message }}</p>\n                                        \x3c!-- <p no-margin class="tl-note" *ngIf="tl.note">{{ tl.note }}</p> --\x3e\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-container>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>'},3:function(t,e){},"3LC1":function(t,e,n){"use strict";n.r(e),e.default=""},"3nx+":function(t,e,n){"use strict";n.r(e),e.default=".alt {\n  background: rgba(229, 229, 229, 0.4) !important;\n}\n\n.order-timer {\n  background: #DDE1E5;\n  border-radius: 5px;\n  margin-top: -15px;\n  margin-bottom: 22px;\n  overflow: hidden;\n}\n\n.order-timer .note {\n  display: inline-block;\n  /* font-size: $font17; */\n  line-height: 25px;\n  letter-spacing: -0.0241176em;\n  color: #494A4B;\n  padding: 13px;\n}\n\n.order-timer .note img {\n  margin-right: 13px;\n  width: 28px;\n  height: 28px;\n  /* font-size: $font49; */\n}\n\n.order-timer .countdown .measurements {\n  text-align: center;\n  margin: 0 5px;\n}\n\n.order-timer .countdown .measurements:first-child {\n  margin-left: 0;\n}\n\n.order-timer .countdown .measurements:last-child {\n  margin-right: 0;\n}\n\n.order-timer .countdown .measurements .measurements-number {\n  font-size: 24px;\n  line-height: 1;\n}\n\n.order-timer .countdown .measurements .measurements-text {\n  font-size: 10px;\n  line-height: 1;\n}\n\n.order-timer .timer {\n  background: #72787F;\n  border-radius: 0px 0px 5px 5px;\n  padding: 7px 13px;\n  display: inline-block;\n  color: #FFF;\n}\n\n.order-timer .timer p {\n  margin: 0;\n}\n\n.order-timer .timer img {\n  margin-left: 40px;\n  margin-right: 2px;\n  width: 25px;\n  height: 25px;\n}\n\n.order-timer .timer .measurements {\n  min-width: 25px;\n  position: relative;\n}\n\n.order-timer .timer .measurements p {\n  margin-bottom: 0;\n}\n\n.order-timer .timer .measurements .measurements-number {\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 23px;\n  letter-spacing: 0.02em;\n}\n\n.order-timer .timer .measurements .measurements-text {\n  font-size: 10px;\n  line-height: 14px;\n}\n\n.order-timer .timer .measurements .divider {\n  /* margin-top: -24px;\n  margin-right: -7px; */\n  position: absolute;\n  top: -2px;\n  right: -7px;\n  font-weight: bold;\n  font-size: 20px;\n}"},"3ycq":function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <form [formGroup]="orderForm" (ngSubmit)="submit()">\n        <div class="row mb-15">\n            <div class="col-xl-auto offset-xl-1">\n                <button type="button" mat-flat-button class="btn btn-sm btn-secondary" (click)="goBack(\'go_back\', \'transaction_create\')">\n                    <i class="icon-back"></i>\n                    <span class="ml-15">Go back to list</span>\n                </button>\n            </div>\n        </div>\n        <div class="row mb-35">\n            <div class="col-xl-auto offset-xl-1">\n                <h1 class="heading">Add new order</h1>\n            </div>\n        </div>\n        <div class="row mb-35">\n            <div class="col-4 offset-4">\n                <img src="./../../../../../assets/images/others/order-step-1.svg" class="img-responsive"/>\n            </div>\n        </div>\n        <div class="row mb-30">\n            <div class="col-xl-10 offset-xl-1">\n                <div class="container-card view-record">\n                    <div class="row">\n                        <div class="p-30 ml-20">\n                            <h1 class="heading">Basic Info.</h1>\n                        </div>\n                        <div class="p-30 ml-auto mr-10">\n                            <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n                                Clear Fields\n                            </button>\n                        </div>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Customer Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="customer_name" [matAutocomplete]="auto" (input)="getCustomerList()"/>\n                                    <mat-autocomplete #auto="matAutocomplete" (optionSelected)="customerSelected($event)">\n                                        <mat-option *ngFor="let customer of customer_options" [value]="customer.id">\n                                            <small>{{ customer.profile_first_name }} {{ customer.profile_last_name }}</small>\n                                        </mat-option>\n                                    </mat-autocomplete>\n                                    <ng-container *ngIf="orderForm.controls.customer_name.touched">\n                                        <p class="text-danger"\n                                            *ngIf="orderForm.controls.customer_name.hasError(\'required\')">Customer name is required</p>\n                                        <p class="text-danger" *ngIf="orderForm.controls.customer_name.hasError(\'maxlength\')">Name must not exceed 50 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Mobile Phone <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <div class="input-group-prepend">\n                                            <span class="input-group-text mb-10">+63</span>\n                                        </div>\n                                        <input type="tel" class="form-control mb-10" formControlName="number" placeholder="xxx xxx xxxx" maxlength="10"/>\n                                    </div>\n                                    <ng-container *ngIf="orderForm.controls.number.touched">\n                                        <p class="text-danger" *ngIf="orderForm.controls.number.hasError(\'required\')">\n                                            Mobile phone is required</p>\n                                        <p class="text-danger" *ngIf="orderForm.controls.number.hasError(\'pattern\')">\n                                            Mobile phone is invalid</p>\n                                        <p class="text-danger" *ngIf="orderForm.controls.number.hasError(\'maxlength\')">\n                                            Mobile phone must not exceed 10 digits</p>\n                                        <p class="text-danger" *ngIf="orderForm.controls.number.hasError(\'minlength\')">\n                                            Mobile phone must be atleast 10 digits</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-12 col-lg-12 col-md-12">\n                                <div class="form-group">\n                                    <label class="text-secondary">Home Address <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="location" />\n                                    <ng-container *ngIf="orderForm.controls.location.touched">\n                                        <p class="text-danger" *ngIf="orderForm.controls.location.hasError(\'required\')">\n                                            Home Address is required</p>\n                                        <p class="text-danger" *ngIf="orderForm.controls.location.hasError(\'maxlength\')">\n                                            Address should not exceed 250 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            \x3c!-- <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Mode of Payment <span class="required">*</span></label>\n                                    <mat-select class="btn btn-drop-down btn-sm btn-block text-left" formControlName="mode_of_payment" placeholder="Mode of Payment">\n                                        <mat-option *ngFor="let item of mode_of_payment_options" [value]="item.value">{{ item.label }}</mat-option>\n                                    </mat-select>\n                                    <ng-container *ngIf="orderForm.controls.mode_of_payment.touched">\n                                        <p class="text-danger" *ngIf="orderForm.controls.mode_of_payment.hasError(\'required\')">\n                                            Mode of payment is required</p>\n                                    </ng-container>\n                                </div>\n                            </div> --\x3e\n                            <div class="col-xl-12 col-lg-12 col-md-12">\n                                <label class="text-secondary">Other special requests or message</label>\n                                <textarea class="form-control mb-10" rows="3" maxlength="250" formControlName="request"></textarea>\n                                <ng-container *ngIf="orderForm.controls.request.touched">\n                                    <p class="text-danger" *ngIf="orderForm.controls.request.hasError(\'maxlength\')">Request or message should not exceed 250 characters</p>\n                                </ng-container>\n                                <p class="text-right text-secondary">{{ orderForm.controls.request.value.length }}/250</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-10 offset-xl-1">\n                <div class="container-card view-record">\n                    <div class="p-30">\n                        <h1 class="heading">Add your items</h1>\n                    </div>\n                    <div class="row">\n                        <div class="col-12">\n                            <div class="data-table p-relative table-listing ml-30 mr-30" style="overflow: auto;">\n                                <table class="border-0">\n                                    <thead>\n                                        <tr>\n                                            <ng-container *ngFor="let th of ths; let i = index">\n                                                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                                    {{ th.label }}\n                                                    <ng-container *ngIf="th.canSort">\n                                                        <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                                        <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                                    </ng-container>\n                                                </th>\n                                            </ng-container>\n                                        </tr>\n                                    </thead>\n                                    <tbody class="pl-30 pr-30" *ngIf="cart.length > 0">\n                                        <ng-container *ngFor="let item of cart; let i = index">\n                                            <tr>\n                                                <td class="w-20-per border-0">\n                                                    <mat-select class="btn btn-drop-down btn-sm btn-block text-left" placeholder="Select Egg Size" [value]="item.id" (selectionChange)="eggTypeSelected($event, i)">\n                                                        <mat-option *ngFor="let egg_type of egg_type_options" [value]="egg_type.id">{{ egg_type.type }}</mat-option>\n                                                    </mat-select>\n                                                </td>\n                                                <td class="w-15-per border-0">\n                                                    ₱ {{ item.price ? (item.price | number : \'1.2-2\') : 0 }}\n                                                </td>\n                                                <td class="w-20-per border-0">\n                                                    <div class="form-group" *ngFor="let cart_type of item.items; let t = index">\n                                                        <label class="text-secondary">per {{ cart_type.type_id == 1 ? \'case: 360 pcs\' : cart_type.type_id == 2 ? \'tray: 30 pcs\' : \'piece\'}}</label>\n                                                        <input class="form-control mb-10" type="number" min="0" step="1" placeholder="0" (input)="changeQty($event, i, t)" [disabled]="!item.id" [value]="cart_type.qty > 0 ? cart_type.qty : \'\'"/>\n                                                    </div>\n                                                </td>\n                                                <td class="w-15-per border-0">\n                                                    {{ item.total_qty | number }} pcs\n                                                </td>\n                                                <td class="w-25-per border-0">\n                                                    ₱ {{ item.total_price | number : \'1.2-2\' }}\n                                                </td>\n                                                <td class="w-5-per border-0">\n                                                    <button type="button" mat-flat-button class="btn btn-clear" (click)="removeItemInCart(i)" *ngIf="cart.length > 1">\n                                                        <i class="icon-cart-remove"></i>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        </ng-container>\n                                    </tbody>\n                                    <tbody class="pl-30 pr-30">\n                                        <tr class="border-0">\n                                            <td>\n                                                <button type="button" mat-flat-button class="btn btn-clear" (click)="addItemToCart()">\n                                                    <i class="icon-add-round fs-28"></i>\n                                                    <span class="ml-15">Add new item</span>\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 ml-xl-auto ml-lg-auto ml-md-auto">\n                                <button type="button" mat-flat-button class="btn btn-clear btn-block"\n                                    (click)="goBack(\'form_cancel\', \'transaction_create\')">\n                                    Cancel\n                                </button>\n                            </div>\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6">\n                                <button type="submit" mat-flat-button class="btn btn-primary btn-block" [disabled]="!orderForm.valid || !canProceed">\n                                    Next Step\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n</section>'},"49wH":function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n  <div class="row mb-35">\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n      <h1 class="heading">{{ order_status_label }}</h1>\n      <p class="sub-heading mb-8">Total number of transactions: <strong>{{ totalItems | number }}</strong></p>\n      <ng-container *ngIf="showtimeago">\n        <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n        <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n            \'border-radius\' : \'5px\',\n            \'margin-bottom\' : \'10px\',\n            \'height\' : \'20px\'\n        }"></ngx-skeleton-loader>\n      </ng-container>\n    </div>\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-3 col-3 ml-auto">\n      <button mat-flat-button class="btn btn-primary btn-block" routerLink="/transactions/create">\n        <i class="icon-add"></i>\n        <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">Add new transaction</span>\n      </button>\n    </div>\n  </div>\n  \n  <div class="container-card p-30 mb-25" *ngIf="show_filter">\n    <div class="row">\n      <div class="col-12">\n        <h6 class="card-heading">Filters</h6>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n        <div class="row">\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n              <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n              <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? \'Date Ordered - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date Ordered\' }}\n                <i class="icon-arrow-drop-down ml-5"></i>\n              </button>\n            </div>\n          </div>\n\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="payment_status" (selectionChange)="changePaymentStatus($event)" placeholder="Payment Status">\n                <mat-option *ngFor="let item of payment_status_options" [value]="item.value">{{ item.label }}</mat-option>\n              </mat-select>\n            </div>\n          </div>\n\n        </div>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n            Clear Filters\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="container-card p-30">\n    <div class="row mb-25">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n        <div class="form-group">\n          <div class="inner-group">\n            <mat-select multiple class="btn btn-block btn-primary multiple-select" (selectionChange)="changeColumnVisibility($event)" placeholder="Column Visibility" [(ngModel)]="visible_columns">\n              <mat-select-trigger>Column Visibility</mat-select-trigger>\n              <ng-container *ngFor="let item of ths; let i = index">\n                <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n              </ng-container>\n            </mat-select>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n        <div class="form-group">\n          <div class="inner-group search">\n            <i class="icon-search"></i>\n            <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n              (keydown.enter)="searchItem()" />\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n            <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf="visible_columns.length > 1">\n      <div class="data-table p-relative table-listing" style="overflow: auto;">\n        <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n          <thead>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf="isLoaded && items.length > 0">\n              <tr *ngFor="let item of items; let i = index">\n                <td *ngIf="ths[0].isVisible">{{ item.transaction_id }}</td>\n                <td *ngIf="ths[1].isVisible">{{ item.created_at | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                <td *ngIf="ths[2].isVisible">{{ item.customer_name }}</td>\n                <td *ngIf="ths[3].isVisible">\n                  <mat-chip-list>\n                    <mat-chip *ngIf="item.order_status == 1" color="primary">{{ item.status }}</mat-chip>\n                    <mat-chip *ngIf="item.order_status == 2" color="secondary">{{ item.status }}</mat-chip>\n                    <mat-chip *ngIf="item.order_status == 3" color="warning">{{ item.status }}</mat-chip>\n                    <mat-chip *ngIf="item.order_status == 4" color="success">{{ item.status }}</mat-chip>\n                    <mat-chip *ngIf="item.order_status == 7 || item.order_status == 8" color="danger">{{ item.status }}</mat-chip>\n                  </mat-chip-list>\n                </td>\n                <td *ngIf="ths[4].isVisible">\n                  <ng-container *ngFor="let egg of item.order_items; let i = index">\n                    {{ egg.egg_type.type }} {{ i < item.order_items.length -1 ? \', \':\'\' }}\n                  </ng-container>\n                </td>\n                <td *ngIf="ths[5].isVisible">{{ item.total_pieces | number }}</td>\n                <td *ngIf="ths[6].isVisible">₱ {{ item.total_price | number : \'1.2-2\' }}</td>\n                <td *ngIf="ths[7].isVisible">{{ item.payment_type }}</td>\n                <td *ngIf="ths[8].isVisible">\n                  <mat-chip-list>\n                    <mat-chip *ngIf="item.payment_status == 0" color="secondary">{{ item.payment_status_label }}</mat-chip>\n                    <mat-chip *ngIf="item.payment_status == 1" color="success">{{ item.payment_status_label }}</mat-chip>\n                  </mat-chip-list>\n                </td>\n                <td *ngIf="ths[9].isVisible">\n                  <button type="button" mat-flat-button class="btn btn-clear text-blue" [routerLink]="[ \'/transactions/view\', item.id]">\n                    <i class="icon-datatables-view"></i>\n                    View\n                  </button>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="!isLoaded">\n              <tr>\n                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                  <ngx-skeleton-loader [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'0px\',\n                    \'height\' : \'20px\'\n                  }"></ngx-skeleton-loader>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && items.length == 0">\n              <tr>\n                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n              </tr>\n            </ng-container>\n          </tbody>\n          <tfoot>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n      <div class="row">\n        <div class="col-12 text-center">\n          <p class="mb-0">Please choose column visibility</p>\n        </div>\n      </div>\n    </ng-container>\n    <div class="row mt-35">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n        <ul class="paginate pull-right">\n          <li class="link cursor-pointer" *ngIf="prev_page">\n            <a (click)="gotoPage(prev_page)">\n              Previous\n            </a>\n          </li>\n          <ng-container *ngFor="let x of counter(totalPages); let i = index">\n            <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n          </ng-container>\n          <li class="link cursor-pointer" *ngIf="next_page">\n            <a (click)="gotoPage(next_page)">\n              Next\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</section>'},"4hAz":function(t,e,n){"use strict";n.r(e),e.default=""},"5OvM":function(t,e,n){"use strict";n.r(e),e.default=""},"5Zcm":function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="row">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <h5 class="mb-30">Sacks Inventory/Stocks</h5>\n            </div>\n        </div>\n        <div class="row pb-10 ml-0 mr-0 border-bottom">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14">Prepared by:</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14 fw-500">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                <p class="mb-0 fs-14">Date:</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14 fw-500">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n            </div>\n        </div>\n        \n        <ng-container *ngIf="visible_columns.length > 0">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <table>\n                    <thead>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible && th.canToggle" class="p-10 fs-12">\n                                    {{ th.label }}\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <ng-container *ngIf="isLoaded && items.length > 0">\n                            <tr *ngFor="let item of items; let i = index" [ngClass]="{\'break-now\' : (i + 1) % 11 == 0}">\n                            <td *ngIf="ths[0].isVisible" class="p-10 fs-12">{{ item.created_at | date: \'MM/dd/yyyy\' }}</td>\n                            <td *ngIf="ths[1].isVisible" class="p-10 fs-12">{{ item.last_data ? (item.last_data.last_ending) : 0 }}</td>\n                            <td *ngIf="ths[2].isVisible" class="p-10 fs-12">{{ item.total_in | number }}</td>\n                            <td *ngIf="ths[3].isVisible" class="p-10 fs-12">{{ item.total_out_sales | number }}</td>\n                            <td *ngIf="ths[4].isVisible" class="p-10 fs-12">{{ item.last_ending | number }}</td>\n                            <td *ngIf="ths[5].isVisible" class="p-10 fs-12">{{ item.name }}</td>\n                            </tr>\n                        </ng-container>\n                        <ng-container *ngIf="!isLoaded">\n                            <tr>\n                            <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                <ngx-skeleton-loader [theme]="{\n                                \'border-radius\' : \'5px\',\n                                \'margin-bottom\' : \'0px\',\n                                \'height\' : \'20px\'\n                                }"></ngx-skeleton-loader>\n                            </td>\n                            </tr>\n                        </ng-container>\n                        <ng-container *ngIf="isLoaded && items.length == 0">\n                            <tr>\n                            <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                            </tr>\n                        </ng-container>\n                    </tbody>\n                </table>\n            </div>\n        </ng-container>\n        <div class="row ml-0 mr-0 mt-20">\n            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                        <p class="fw-500 fs-14">Prepared By:</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                        <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                        <hr class="m-0">\n                        <p class="fs-12">Signature over Printed Name</p>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                        <p class="fw-500 fs-14">Approved By:</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                        <p class="mb-0 h-22"></p>\n                        <hr class="m-0">\n                        <p class="fs-12">Signature over Printed Name</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},"5kkn":function(t,e,n){"use strict";n.r(e),e.default=""},"5p0f":function(t,e,n){"use strict";n.r(e),e.default='<mat-drawer-container class="sidenav-container">\n  <mat-drawer #drawer class="sidenav" fixedInViewport\n      [attr.role]="(isHandset$ | async) ? \'dialog\' : \'navigation\'"\n      [mode]="(isHandset$ | async) ? \'over\' : \'side\'"\n      [opened]="(isHandset$ | async) === false">\n    <mat-toolbar class="h-auto pt-15 pb-15">\n      <img class="m-auto" src="../../../assets/images/gapan-logo.svg">\n    </mat-toolbar>\n    <mat-nav-list>\n      <mat-accordion>\n        <ng-container *ngIf="userLogin.user_role_id == 4">\n          <a mat-list-item routerLink="/dashboard" routerLinkActive="active-list-item">\n            <i class="icon-dashboard"></i>\n            <span class="fs-16 ml-15">Dashboard</span>\n          </a>\n          <a mat-list-item routerLink="/house" routerLinkActive="active-list-item">\n            <i class="icon-house-building"></i>\n            <span class="fs-16 ml-15">House/Building</span>\n          </a>\n          <a mat-list-item routerLink="/staffs" routerLinkActive="active-list-item">\n            <i class="icon-staffs"></i>\n            <span class="fs-16 ml-15">Staffs</span>\n          </a>\n          <a mat-list-item routerLink="/activity-log/activity" routerLinkActive="active-list-item">\n            <i class="icon-daily-reports"></i>\n            <span class="fs-16 ml-15">Activity Log</span>\n          </a>\n          <a mat-list-item routerLink="/customers" routerLinkActive="active-list-item">\n            <i class="icon-customers"></i>\n            <span class="fs-16 ml-15">Customers</span>\n          </a>\n          <mat-expansion-panel class="m-0 no-box-shadow">\n            <mat-expansion-panel-header class="pl-15 pr-15">\n              <mat-panel-title>\n                <i class="icon-feeds-medicine-management"></i>\n                <span class="fs-16 ml-15">Feeds and Medicine Management</span>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <a mat-list-item class="pl-35 fs-14" routerLink="/feeds-medicine-management/feeds" routerLinkActive="active-list-item">Feeds</a>\n            <a mat-list-item class="pl-35 fs-14" routerLink="/feeds-medicine-management/medicine" routerLinkActive="active-list-item">Medicine</a>\n          </mat-expansion-panel>\n          <a mat-list-item routerLink="/feeds-medicine-consumption" routerLinkActive="active-list-item">\n            <i class="icon-feeds-medicine-consumption"></i>\n            <span class="fs-16 ml-15">Feeds and Medicine Consumption</span>\n          </a>\n          <mat-expansion-panel class="m-0 no-box-shadow pt-5 pb-5">\n            <mat-expansion-panel-header class="pl-15 pr-15">\n              <mat-panel-title>\n                <i class="icon-daily-reports"></i>\n                <span class="fs-16 ml-15">Daily Reports</span>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <a mat-list-item class="pl-35 fs-14" routerLink="/daily-reports" routerLinkActive="active-list-item">All</a>\n            <ng-container *ngFor="let house of houses; let i = index">\n              <a mat-list-item class="pl-35 fs-14" [routerLink]="[ \'/daily-reports-house\', house.id]" routerLinkActive="active-list-item">House/Building no. {{ house.house_name }}</a>\n            </ng-container>\n          </mat-expansion-panel>\n        </ng-container>\n        <mat-expansion-panel class="m-0 no-box-shadow">\n          <mat-expansion-panel-header class="pl-15 pr-15">\n            <mat-panel-title>\n              <i class="icon-transactions"></i>\n              <span class="fs-16 ml-15">Transactions</span>\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <a mat-list-item class="pl-35 fs-14" routerLink="/transactions" routerLinkActive="active-list-item">All</a>\n          <a mat-list-item class="pl-35 fs-14" [routerLink]="[ \'/transactions-status\', 1]" routerLinkActive="active-list-item">Pending\n            <mat-chip-list class="ml-auto" *ngIf="statuscount && statuscount.pending > 0">\n              <mat-chip>{{ statuscount && statuscount.pending ? statuscount.pending : 0 }}</mat-chip>\n            </mat-chip-list>\n          </a>\n          <a mat-list-item class="pl-35 fs-14" [routerLink]="[ \'/transactions-payment\', 3]" routerLinkActive="active-list-item">With Balance\n            <mat-chip-list class="ml-auto" *ngIf="statuscount && statuscount.balance > 0">\n              <mat-chip>{{ statuscount && statuscount.balance ? statuscount.balance : 0 }}</mat-chip>\n            </mat-chip-list>\n          </a>\n          <a mat-list-item class="pl-35 fs-14" [routerLink]="[ \'/transactions-payment\', 2]" routerLinkActive="active-list-item">With Credit\n            <mat-chip-list class="ml-auto" *ngIf="statuscount && statuscount.credit > 0">\n              <mat-chip>{{ statuscount && statuscount.credit ? statuscount.credit : 0 }}</mat-chip>\n            </mat-chip-list>\n          </a>\n          <a mat-list-item class="pl-35 fs-14" [routerLink]="[ \'/transactions-status\', 4]" routerLinkActive="active-list-item">Completed\n            <mat-chip-list class="ml-auto" *ngIf="statuscount && statuscount.completed > 0">\n              <mat-chip>{{ statuscount && statuscount.completed ? statuscount.completed : 0 }}</mat-chip>\n            </mat-chip-list>\n          </a>\n        </mat-expansion-panel>\n        <ng-container *ngIf="userLogin.user_role_id == 5">\n          <a mat-list-item routerLink="/customers" routerLinkActive="active-list-item">\n            <i class="icon-customers"></i>\n            <span class="fs-16 ml-15">Customers</span>\n          </a>\n        </ng-container>\n        <ng-container *ngIf="userLogin.user_role_id == 4">\n          <a mat-list-item routerLink="/price-management" routerLinkActive="active-list-item">\n            <i class="icon-price-management"></i>\n            <span class="fs-16 ml-15">Price Management</span>\n          </a>\n          <mat-expansion-panel class="m-0 no-box-shadow">\n            <mat-expansion-panel-header class="pl-15 pr-15">\n              <mat-panel-title>\n                <i class="icon-performance-report"></i>\n                <span class="fs-16 ml-15">Performance Report</span>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <mat-accordion>\n              <mat-expansion-panel class="m-0 no-box-shadow">\n                <mat-expansion-panel-header class="pl-50 pr-15">\n                  <mat-panel-title>\n                    <span class="fs-14">Harvested</span>\n                  </mat-panel-title>\n                </mat-expansion-panel-header>\n                <a mat-list-item class="pl-60 fs-14" routerLink="/performance-report/harvested/production-by-egg-size" routerLinkActive="active-list-item">Production by egg size</a>\n                <a mat-list-item class="pl-60 fs-14" routerLink="/performance-report/harvested/production-per-house" routerLinkActive="active-list-item">Production per house</a>\n              </mat-expansion-panel>\n              <mat-expansion-panel class="m-0 no-box-shadow">\n                <mat-expansion-panel-header class="pl-50 pr-15">\n                  <mat-panel-title>\n                    <span class="fs-14">Sales</span>\n                  </mat-panel-title>\n                </mat-expansion-panel-header>\n                <a mat-list-item class="pl-60 fs-14" routerLink="/performance-report/sales/overall-sales" routerLinkActive="active-list-item">Overall Sales</a>\n                <a mat-list-item class="pl-60 fs-14" routerLink="/performance-report/sales/sales-by-egg-size" routerLinkActive="active-list-item">Sales by egg size</a>\n              </mat-expansion-panel>\n              <mat-expansion-panel class="m-0 no-box-shadow">\n                <mat-expansion-panel-header class="pl-50 pr-15">\n                  <mat-panel-title>\n                    <span class="fs-14">Consumption</span>\n                  </mat-panel-title>\n                </mat-expansion-panel-header>\n                <a mat-list-item class="pl-60 fs-14" routerLink="/performance-report/consumption/feeds" routerLinkActive="active-list-item">Feeds</a>\n                <a mat-list-item class="pl-60 fs-14" routerLink="/performance-report/consumption/medicine" routerLinkActive="active-list-item">Medicine</a>\n              </mat-expansion-panel>\n              <a mat-list-item class="pl-35 fs-14" routerLink="/performance-report/stocks" routerLinkActive="active-list-item">Inflow/Outflow</a>\n            </mat-accordion>\n          </mat-expansion-panel>\n        </ng-container>\n        <mat-expansion-panel class="m-0 no-box-shadow">\n          <mat-expansion-panel-header class="pl-15 pr-15">\n            <mat-panel-title>\n              <i class="icon-inventory-stocks"></i>\n              <span class="fs-16 ml-15">Inventory/Stocks</span>\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <a mat-list-item class="pl-35 fs-14" routerLink="/inventory-stocks/fresh-eggs" routerLinkActive="active-list-item">Fresh Eggs</a>\n          <a mat-list-item class="pl-35 fs-14" routerLink="/inventory-stocks/trays" routerLinkActive="active-list-item">Trays</a>\n          <a mat-list-item class="pl-35 fs-14" routerLink="/inventory-stocks/sacks" routerLinkActive="active-list-item">Sacks</a>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </mat-nav-list>\n  </mat-drawer>\n  <mat-drawer-content>\n    <mat-toolbar color="light">\n      <button\n          type="button"\n          aria-label="Toggle sidenav"\n          mat-icon-button\n          (click)="drawer.toggle()"\n          *ngIf="isHandset$ | async">\n          <mat-icon aria-label="Side nav toggle icon">menu</mat-icon>\n      </button>\n      <span class="ml-auto">\n        <button mat-icon-button [matMenuTriggerFor]="notifications">\n          <mat-icon *ngIf="notifCount > 0" aria-hidden="false" [matBadge]="notifCount" matBadgeColor="warn">notifications_none</mat-icon>\n          <mat-icon *ngIf="notifCount == 0" aria-hidden="false">notifications_none</mat-icon>\n        </button>\n        <mat-menu #notifications="matMenu" class="notif-container">\n          <ng-container *ngIf="notifPreview && notifPreview.length > 0">\n            <mat-card *ngFor="let notifData of notifPreview; let i = index" class="no-box-shadow" (click)="gotoPage(notifData)">\n              <mat-card-header class="notif-card-header">\n                <div mat-card-avatar>\n                  <img *ngIf="notifData.owner_profile_pic" class="rounded-circle w-40" [src]="notifData.owner_profile_pic">\n                  <img *ngIf="!notifData.owner_profile_pic" class="rounded-circle w-40" src="../../../../assets/images/image_icon.png" alt="profile_pic">\n                </div>\n                \x3c!-- <mat-card-title>Shiba Inu</mat-card-title> --\x3e\n                <mat-card-subtitle class="m-0">\n                  <p class="fs-14 mb-10" [innerHTML]="notifData.data"></p>\n                  <p class="fs-10 italic text-right m-0">{{ notifData.updated_at | timeago }}</p>\n                </mat-card-subtitle>\n              </mat-card-header>\n            </mat-card>\n          </ng-container>\n        </mat-menu>\n        <button mat-flat-button [matMenuTriggerFor]="menu" class="ml-10">\n          <img *ngIf="userLogin.user_profile.profile_picture"  class="rounded-circle w-30 mr-10"\n          [src]="userLogin.user_profile.profile_picture">\n          <img *ngIf="!userLogin.user_profile.profile_picture" class="rounded-circle w-30 mr-10" src="../../../../assets/images/image_icon.png" alt="profile_pic">\n          <span>{{ userLogin && userLogin.user_profile ? userLogin.user_profile.first_name + \' \' + userLogin.user_profile.last_name : \'\' }}</span>\n          <mat-icon aria-hidden="false">expand_more</mat-icon>\n        </button>\n        <mat-menu #menu="matMenu">\n          <button mat-menu-item routerLink="/my-profile">My Profile</button>\n          <button mat-menu-item (click)="logout()">Logout</button>\n        </mat-menu>\n      </span>\n    </mat-toolbar>\n    <router-outlet> </router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>  '},"5zYH":function(t,e,n){"use strict";n.r(e),e.default=""},"6oWD":function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35 h-100-per">\n    <div class="row mb-35">\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n        <h1 class="heading">Feeds and Medicine Consumption</h1>\n        <p class="sub-heading">For this month of {{ monthdatetoday | date : \'MMMM yyyy\' }}</p>\n      </div>\n      \x3c!-- <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n        <button type="button" mat-flat-button class="btn btn-secondary btn-block">\n          <i class="icon-folder"></i>\n          <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">View Archived Records</span>\n        </button>\n      </div> --\x3e\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n        <button type="button" mat-flat-button class="btn btn-primary btn-block" routerLink="/feeds-medicine-consumption/create">\n          <i class="icon-add"></i>\n          <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">Add new monthly record</span>\n        </button>\n      </div>\n    </div>\n\n    <div class="row">\n      <ng-container *ngIf="isLoaded && houses.length > 0">\n        <div class="col-3 mb-30" *ngFor="let house of houses; let i = index">\n          <div class="container-card card-radius p-20">\n            <mat-icon>home</mat-icon>\n            <p class="mini-heading mb-10 fs-16">House/Building no. {{ house.house_name }}</p>\n            <div class="row">\n            <i Class="material-icons ml-10">check_box</i><p class="sub-heading mt-3 mb-10 fs-13">Daily House Report: {{ house.report_count }}</p>\n            </div>\n            \x3c!-- *ngIf="activity && activity.updated_at" --\x3e\n            <span class="sub-heading italic fs-12">Last updated: {{ house.updated_at | timeago }} </span>\n  \x3c!--           <h1 class="heading mb-0">{{ dashboard_data ? (dashboard_data.daily_reports_for_approval | number) : 0 }}</h1> --\x3e\n            <span class="card-line">____________________________</span>\n            <div class="row">\n                <button Class="fs-12 p-1 ml-11" mat-flat-button [routerLink]="[ \'/feeds-medicine-consumption/view\', house.id]">View Details\n              <i class="material-icons mb-2">keyboard_arrow_right</i>\n              </button>\n            </div>  \n         </div>\n        </div>\n      </ng-container>\n    </div>\n</section>'},"76H5":function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n  <div class="row mb-35">\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n      <h1 class="heading">Tray Inventory/Stocks</h1>\n      <p class="sub-heading mb-8">Grand total quantity of trays: <strong>{{ totalItems | number }}</strong></p>\n      <ng-container *ngIf="showtimeago">\n        <p class="sub-heading italic" *ngIf="activity && activity.created_at">last updated {{ activity.created_at | timeago }}</p>\n        <ngx-skeleton-loader *ngIf="!activity || !activity.created_at" [theme]="{\n            \'border-radius\' : \'5px\',\n            \'margin-bottom\' : \'10px\',\n            \'height\' : \'20px\'\n        }"></ngx-skeleton-loader>\n      </ng-container>\n    </div>\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n      <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()" [disabled]="!isLoaded">\n        <i class="icon-download"></i>\n        <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n        <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n      </button>\n    </div>\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6">\n      <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportToCsv()" [disabled]="!isLoaded">\n        <i class="icon-download"></i>\n        <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as CSV</span>\n        <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">CSV</span>\n      </button>\n    </div>\n  </div>\n\n  <div class="container-card p-30 mb-25" *ngIf="show_filter">\n    <div class="row">\n      <div class="col-12">\n        <h6 class="card-heading">Filters</h6>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n        <div class="row">\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n              <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n              <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? \'Dates - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Dates\' }}\n                <i class="icon-arrow-drop-down ml-5"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n        <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n              Clear Filters\n            </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="container-card p-30">\n    <div class="row mb-25">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-3 offset-xl-2 col-lg-4 offset-lg-2 col-md-8 col-sm-9 col-8">\n        <div class="form-group">\n          <div class="inner-group search">\n            <i class="icon-search"></i>\n            <input type="text" class="form-control" id="inputSearch" placeholder="Search Date and Time" [(ngModel)]="search"\n              (keydown.enter)="searchItem()" />\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n        <div class="form-group">\n\x3c!--           <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n            <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n          </button> --\x3e\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <input [max]="max_date" [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)"\n                [(ngModel)]="created_at">\n              <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n              <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block"\n                (click)="created_at_picker.open()">{{ from && to ? \'Dates - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Dates\' }}\n                <i class="icon-arrow-drop-down ml-5"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf="visible_columns.length > 0">\n      <div class="data-table p-relative table-listing" style="overflow: auto;">\n        <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n          <thead>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf="isLoaded && items.length > 0">\n              <tr *ngFor="let item of items; let i = index">\n                <td>{{ item.created_at | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                <td>{{ item.beginning | number }}</td>\n                <td>{{ item.returned | number }}</td>\n                <td>{{ item.number_of_out_sales | number }}</td>\n                <td>{{ item.total_remaining | number }}</td>\n                <td>{{ item.name }}</td>\n                <td>\n                  <button type="button" mat-flat-button class="btn btn-clear text-blue" [routerLink]="[ \'/inventory-stocks/trays/view\', item.id]">\n                    <i class="icon-datatables-view"></i>\n                    View\n                  </button>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="!isLoaded">\n              <tr>\n                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                  <ngx-skeleton-loader [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'0px\',\n                    \'height\' : \'20px\'\n                  }"></ngx-skeleton-loader>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && items.length == 0">\n              <tr>\n                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n              </tr>\n            </ng-container>\n          </tbody>\n          <tfoot>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n      <div class="row">\n        <div class="col-12 text-center">\n          <p class="mb-0">Please choose column visibility</p>\n        </div>\n      </div>\n    </ng-container>\n    <div class="row mt-35">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n        <ul class="paginate pull-right">\n          <li class="link cursor-pointer" *ngIf="prev_page">\n              <a (click)="gotoPage(prev_page)">\n                  Previous\n              </a>\n          </li>\n          <ng-container *ngFor="let x of counter(totalPages); let i = index">\n            <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n          </ng-container>\n          <li class="link cursor-pointer" *ngIf="next_page">\n              <a (click)="gotoPage(next_page)">\n                  Next\n              </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</section>'},"7HRm":function(t,e,n){"use strict";n.r(e),e.default=""},"7fJn":function(t,e,n){"use strict";n.r(e),e.default=".alt {\n  background: rgba(229, 229, 229, 0.4) !important;\n}\n\n.order-timer {\n  background: #DDE1E5;\n  border-radius: 5px;\n  margin-top: -15px;\n  margin-bottom: 22px;\n  overflow: hidden;\n}\n\n.order-timer .note {\n  display: inline-block;\n  /* font-size: $font17; */\n  line-height: 25px;\n  letter-spacing: -0.0241176em;\n  color: #494A4B;\n  padding: 13px;\n}\n\n.order-timer .note img {\n  margin-right: 13px;\n  width: 28px;\n  height: 28px;\n  /* font-size: $font49; */\n}\n\n.order-timer .countdown .measurements {\n  text-align: center;\n  margin: 0 5px;\n}\n\n.order-timer .countdown .measurements:first-child {\n  margin-left: 0;\n}\n\n.order-timer .countdown .measurements:last-child {\n  margin-right: 0;\n}\n\n.order-timer .countdown .measurements .measurements-number {\n  font-size: 24px;\n  line-height: 1;\n}\n\n.order-timer .countdown .measurements .measurements-text {\n  font-size: 10px;\n  line-height: 1;\n}\n\n.order-timer .timer {\n  background: #72787F;\n  border-radius: 0px 0px 5px 5px;\n  padding: 7px 13px;\n  display: inline-block;\n  color: #FFF;\n}\n\n.order-timer .timer p {\n  margin: 0;\n}\n\n.order-timer .timer img {\n  margin-left: 40px;\n  margin-right: 2px;\n  width: 25px;\n  height: 25px;\n}\n\n.order-timer .timer .measurements {\n  min-width: 25px;\n  position: relative;\n}\n\n.order-timer .timer .measurements p {\n  margin-bottom: 0;\n}\n\n.order-timer .timer .measurements .measurements-number {\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 23px;\n  letter-spacing: 0.02em;\n}\n\n.order-timer .timer .measurements .measurements-text {\n  font-size: 10px;\n  line-height: 14px;\n}\n\n.order-timer .timer .measurements .divider {\n  /* margin-top: -24px;\n  margin-right: -7px; */\n  position: absolute;\n  top: -2px;\n  right: -7px;\n  font-weight: bold;\n  font-size: 20px;\n}\n\n.rowActive {\n  background-color: #c6c6c6;\n}\n\n.activeRow {\n  border: 2px solid black;\n}"},"7j3S":function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <h1 class="heading">Harvest Performance Report</h1>\n            \x3c!-- <ng-container *ngIf="showtimeago">\n                <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n                <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'10px\',\n                    \'height\' : \'20px\'\n                }"></ngx-skeleton-loader>\n            </ng-container> --\x3e\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()" [disabled]="!isLoaded">\n                <i class="icon-download"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n                <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n            </button>\n        </div>\n    </div>\n    <div class="container-card p-30">\n        <div class="row">\n            <div class="col-xl-auto col-lg-auto col-md-12 col-sm-12 col-12">\n                <p class="mb-10 fw-500">Harvested production by egg sizes</p>\n                <ng-container *ngIf="showtimeago">\n                    <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n                    <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n                        \'border-radius\' : \'5px\',\n                        \'margin-bottom\' : \'10px\',\n                        \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                </ng-container>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-12 col-sm-12 col-12 ml-auto">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                        <div class="form-group mb-0">\n                            <div class="inner-group in-line">\n                                <label class="mr-15">Show:</label>\n\n                                <mat-select multiple class="btn btn-drop-down btn-block text-left" (selectionChange)="changeColumnVisibility($event)" placeholder="By egg type" [(ngModel)]="visible_columns" >\n                                    <mat-select-trigger>By egg type</mat-select-trigger>\n                                    <ng-container *ngFor="let item of ths; let i = index">\n                                        <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                                    </ng-container>\n                                </mat-select>\n\n                                \x3c!-- <mat-select multiple class="btn btn-drop-down text-left" placeholder="All egg type" (selectionChange)="eggTypeSelected($event, i)" [(ngModel)]="selected_eggs">\n                                    <mat-select-trigger>All egg type</mat-select-trigger>\n                                    <mat-option *ngFor="let egg_type of egg_type_options" [value]="egg_type.id">{{ egg_type.type }}</mat-option>\n                                </mat-select> --\x3e\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group">\n                            <mat-select class="btn btn-drop-down btn-block text-left" placeholder="All house/building" (selectionChange)="houseSelected($event)" [(ngModel)]="house_id">\n                                <mat-option *ngFor="let house of house_options" [value]="house.id">House/building no. {{ house.house_name }}</mat-option>\n                            </mat-select>\n                        </div>\n                    </div>\n                    \n                    \n                    \x3c!-- <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                        <div class="form-group">\n                            <mat-select multiple class="btn btn-drop-down btn-block" placeholder="All egg type" (selectionChange)="eggTypeSelected($event, i)" [(ngModel)]="selected_eggs">\n                                <mat-select-trigger>All egg type</mat-select-trigger>\n                                <mat-option *ngFor="let egg_type of egg_type_options" [value]="egg_type.id">{{ egg_type.type }}</mat-option>\n                            </mat-select>\n                        </div>\n                    </div> --\x3e\n                    \x3c!-- <div class="col-xl-5 col-lg-5 col-md-5 col-sm-12 col-12">\n                        <div class="form-group">\n                            <mat-select multiple class="btn btn-drop-down btn-block text-left" placeholder="All house/building" (selectionChange)="eggTypeSelected($event, i)" [(ngModel)]="selected_house">\n                                <mat-select-trigger>All house/building</mat-select-trigger>\n                                <mat-option *ngFor="let house of house_options" [value]="house.id">House/building no. {{ house.house_name }}</mat-option>\n                            </mat-select>\n                        </div>\n                    </div> --\x3e\n                </div>\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                        <div class="form-group mb-0">\n                            <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                            <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-block text-left" (click)="created_at_picker.open()">\n                                <span *ngIf="(from | date: \'yyyy-MM-dd\') != (to | date: \'yyyy-MM-dd\')">{{ from && to ? (from | date: \'MMMM dd, yyyy\') + \' - \' + (to | date: \'MMMM dd, yyyy\') : \'Choose harvest dates\' }}</span>\n                                <span *ngIf="(from | date: \'yyyy-MM-dd\') == (to | date: \'yyyy-MM-dd\')">{{ from && to ? (from | date: \'MMMM dd, yyyy\') : \'Choose harvest dates\' }}</span>\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto" *ngIf="from && to">\n                        <button type="button" mat-flat-button class="btn btn-clear btn-sm" (click)="clearFilters()">Reset Filter</button>\n                    </div>\n                </div>\n                \x3c!-- <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-12 col-12 ml-auto">\n                        <div class="form-group">\n                            <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                            <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? (from | date: \'MMMM dd, yyyy\') + \' - \' + (to | date: \'MMMM dd, yyyy\') : \'Choose harvest dates\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div> --\x3e\n            </div>\n        </div>\n\n        <div class="row mb-30">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-5 fs-14">Overall Harvested Eggs</p>\n                <h1 class="heading fs-34">{{ overall_harvested_eggs | number }}</h1>\n            </div>\n        </div>\n        <div class="row mb-30" *ngIf="isLoaded && items.length > 0 && visible_columns.length > 0">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                <canvas baseChart \n                    [datasets]="barChartData"\n                    [labels]="barChartLabels"\n                    [options]="barChartOptions"\n                    [plugins]="barChartPlugins"\n                    [legend]="barChartLegend"\n                    [chartType]="barChartType">\n                </canvas>\n            </div>\n            \x3c!-- <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p>Egg Sizes</p>\n            </div> --\x3e\n            <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p>All Dates</p>\n            </div>\n            <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p *ngIf="(from | date: \'yyyy-MM-dd\') != (to | date: \'yyyy-MM-dd\')">{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n                <p *ngIf="(from | date: \'yyyy-MM-dd\') == (to | date: \'yyyy-MM-dd\')">{{ from | date : \'MMMM dd, yyyy\' }}</p>\n            </div>\n        </div>\n        <ng-container *ngIf="visible_columns.length > 0">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <table [ngStyle]="{\'width.px\': 180 * visible_columns.length}">\n                        <thead>\n                            <tr>\n                                <th class="sort" (click)="orderList(true, \'received_by_date\', order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    Date\n                                    <i *ngIf="order.order_by_column == \'received_by_date\'" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != \'received_by_date\' }"></i>\n                                </th>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                                </ng-container>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            <ng-container *ngIf="isLoaded && items.length > 0">\n                                <tr *ngFor="let item of items; let i = index">\n                                    <td class="w-20-per">{{ item.grouped_date | date: \'MM/dd/yyyy\' }}</td>\n                                    <ng-container *ngFor="let item of item.daily_sorting_inventory; let i = index">\n                                        <td *ngIf="ths[i].isVisible" class="w-20-per">{{ item.sum | number }}</td>\n                                    </ng-container>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="!isLoaded">\n                                <tr>\n                                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                    <ngx-skeleton-loader [theme]="{\n                                    \'border-radius\' : \'5px\',\n                                    \'margin-bottom\' : \'0px\',\n                                    \'height\' : \'20px\'\n                                    }"></ngx-skeleton-loader>\n                                </td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="isLoaded && items.length == 0">\n                                <tr>\n                                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                </tr>\n                            </ng-container>\n                            </tbody>\n                    </table>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n            <div class="row">\n                <div class="col-12 text-center">\n                <p class="mb-0">Please choose egg type</p>\n                </div>\n            </div>\n        </ng-container>\n        <div class="row mt-35">\n            \x3c!-- <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n                <div class="form-group">\n                <div class="inner-group in-line">\n                    <label class="mr-15">Show</label>\n                    <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                        <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n                    </mat-select>\n                    <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                        <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n                    </mat-select>\n                    <label>of {{ totalItems | number }} entries</label>\n                </div>\n                </div>\n            </div> --\x3e\n            <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12 ml-auto" *ngIf="totalPages > 1">\n                <ul class="paginate pull-right">\n                <li class="link cursor-pointer" *ngIf="prev_page">\n                    <a (click)="gotoPage(prev_page)">\n                        Previous\n                    </a>\n                </li>\n                <ng-container *ngFor="let x of counter(totalPages); let i = index">\n                    <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n                </ng-container>\n                \n                <li class="link cursor-pointer" *ngIf="next_page">\n                    <a (click)="gotoPage(next_page)">\n                        Next\n                    </a>\n                </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</section>'},"83eI":function(t,e,n){"use strict";n.r(e),e.default='<div class="row">\n    <div class="col-12">\n        <h6 class="mini-heading">{{ modal_title }}</h6>\n    </div>\n</div>\n<form [formGroup]="confirmPasswordForm" (ngSubmit)="submit()">\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">{{ modal_message }}</label>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group p-relative">\n                <input type="{{ show_password ? \'text\' : \'password\' }}" formControlName="password" class="form-control mb-10" />\n                <button type="button" class="btn btn-clear p-absolute t-2 r-0" (click)="showPassword()">\n                    <i [ngClass]="{ \'icon-eye-close\' : !show_password, \'icon-eye-open\' : show_password }"></i>\n                </button>\n                <ng-container *ngIf="confirmPasswordForm.controls.password.touched">\n                    <p class="text-danger" *ngIf="confirmPasswordForm.controls.password.hasError(\'required\')">Password is required</p>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-6 text-right">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear" (click)="closeModal()">Cancel</button>\n        </div>\n        <div class="col-6">\n            <button type="submit" mat-flat-button class="btn btn-sm btn-block" [ngClass]="modal_primary_button_class" [disabled]="!confirmPasswordForm.valid || isLoading">{{ modal_primary_button }}</button>\n        </div>\n    </div>\n</form>'},"8J7X":function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n  <div class="row mb-35">\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-9 col-9">\n      <h1 class="heading">Staff Management</h1>\n      <p class="sub-heading mb-8">Total number of staff: <strong>{{ totalItems }}</strong></p>\n      <ng-container *ngIf="showtimeago">\n        <p class="sub-heading italic" *ngIf="activity && activity.update_at">last updated {{ activity.update_at | timeago }}</p>\n        <ngx-skeleton-loader *ngIf="!activity || !activity.update_at" [theme]="{\n          \'border-radius\' : \'5px\',\n          \'margin-bottom\' : \'10px\',\n          \'height\' : \'20px\'\n        }"></ngx-skeleton-loader>\n      </ng-container>\n    </div>\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-3 col-3 ml-auto">\n      <button type="button" mat-flat-button class="btn btn-primary btn-block" routerLink="/staffs/create">\n        <i class="icon-add"></i>\n        <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">Add new staff</span>\n      </button>\n    </div>\n  </div>\n\n  <div class="container-card p-30 mb-25" *ngIf="show_filter">\n    <div class="row">\n      <div class="col-12">\n        <h6 class="card-heading">Filters</h6>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n        <div class="row">\n          <div class="col-xl-2 col-lg-3 col-md-4 col-sm-12 col-12">\n            <div class="form-group">\n              <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="role_id" (selectionChange)="changeRole($event)" placeholder="Staff Role">\n                <mat-option *ngFor="let role of roles" [value]="role.value">{{ role.label }}</mat-option>\n              </mat-select>\n            </div>\n          </div>\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <input [max]="max_date" [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n              <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n              <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? \'Date Added - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date Added\' }}\n                <i class="icon-arrow-drop-down ml-5"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n            Clear Filters\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="container-card p-30">\n    <div class="row mb-25">\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-4 col-sm-4 col-8 ml-auto">\n        <div class="form-group">\n          <div class="inner-group search">\n            <i class="icon-search"></i>\n            <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n              (keydown.enter)="searchItem()" />\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-2 col-4">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n            <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf="visible_columns.length > 0">\n      <div class="data-table p-relative table-listing" style="overflow: auto;">\n        <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n          <thead>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf="isLoaded && items.length > 0">\n              <tr *ngFor="let item of items; let i = index" [routerLink]="[ \'/staffs/view\', item.id]" class="cursor-pointer">\n                <td>{{ item.staff_id }}</td>\n                <td>{{ item.profile_first_name }} {{ item.profile_last_name }}</td>\n                <td>{{ item.roles_name }}</td>\n                <td>{{ item.username }}</td>\n                <td>{{ item.contact_number ? \'+63\' : \'\' }}<span *ngIf="item.contact_number">{{item.contact_number}}</span></td>\n                <td>{{ item.last_login ? (item.last_login | date : \'MM/dd/yyyy, hh:mm aaa\') : \'Not yet logged in\' }}</td>\n                <td>\n                  <button type="button" mat-flat-button class="btn btn-clear text-blue" [routerLink]="[ \'/staffs/view\', item.id]">\n                    <i class="icon-datatables-view"></i>\n                    View\n                  </button>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="!isLoaded">\n              <tr>\n                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                  <ngx-skeleton-loader [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'0px\',\n                    \'height\' : \'20px\'\n                  }"></ngx-skeleton-loader>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && items.length == 0">\n              <tr>\n                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n              </tr>\n            </ng-container>\n          </tbody>\n          <tfoot>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n      <div class="row">\n        <div class="col-12 text-center">\n          <p class="mb-0">Please choose column visibility</p>\n        </div>\n      </div>\n    </ng-container>\n    <div class="row mt-35">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n        <ul class="paginate pull-right">\n          <li class="link cursor-pointer" *ngIf="prev_page">\n              <a (click)="gotoPage(prev_page)">\n                  Previous\n              </a>\n          </li>\n          <ng-container *ngFor="let x of counter(totalPages); let i = index">\n            <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n          </ng-container>\n          <li class="link cursor-pointer" *ngIf="next_page">\n              <a (click)="gotoPage(next_page)">\n                  Next\n              </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</section>  '},"8gT+":function(t,e,n){"use strict";n.r(e),e.default=""},"8hfo":function(t,e,n){"use strict";n.r(e),e.default=".card-line {\n  color: #cccccc;\n  font-weight: 400;\n}\n\n.card-subline {\n  color: #EAEDF0;\n}"},"8y1a":function(t,e,n){"use strict";n.r(e),e.default="/* .order-summary {\n    background-color: color(container, bg);\n} */\nhr.h-2 {\n  background-color: #72787F;\n}"},"9Ylf":function(t,e,n){"use strict";n.r(e),e.default=""},"BMn+":function(t,e,n){"use strict";n.r(e),e.default='.mat-select-value::after {\n  content: "asd";\n}\n\n.mat-select-value-text {\n  display: none !important;\n}'},BtBI:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <h1 class="heading">Egg Price Management</h1>\n            <ng-container *ngIf="showtimeago">\n                <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n                <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'10px\',\n                    \'height\' : \'20px\'\n                }"></ngx-skeleton-loader>\n            </ng-container>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="downloadModal()" [disabled]="!isLoaded">\n                <i class="icon-download"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n                <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n            </button>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportToCsv()" [disabled]="!isLoaded">\n                <i class="icon-download"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as CSV</span>\n                <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">CSV</span>\n            </button>\n        </div>\n    </div>\n    <div class="container-card p-30 mb-25" *ngIf="show_filter">\n        <div class="row">\n            <div class="col-12">\n                <h6 class="card-heading">Filters</h6>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group">\n                            <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="type" (selectionChange)="changeType($event)" placeholder="Egg Size">\n                                <mat-option *ngFor="let egg_type of egg_type_options" [value]="egg_type.id">{{ egg_type.type }}</mat-option>\n                            </mat-select>\n                        </div>\n                    </div>\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group">\n                            <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                            <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? \'Date Range - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date Range\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                <div class="form-group">\n                    <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n                        Clear Filters\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="container-card p-30">\n      <div class="row mb-25">\n        <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n          <div class="form-group">\n            <div class="inner-group in-line">\n              <label class="mr-15">Show</label>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                  <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n              </mat-select>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                  <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n              </mat-select>\n              <label>of {{ totalItems | number }} entries</label>\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n            <div class="form-group">\n                <div class="inner-group">\n                  <mat-select multiple class="btn btn-block btn-primary multiple-select" (selectionChange)="changeColumnVisibility($event)" placeholder="Column Visibility" [(ngModel)]="visible_columns">\n                    <mat-select-trigger>Column Visibility</mat-select-trigger>\n                    <ng-container *ngFor="let item of ths; let i = index">\n                      <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                    </ng-container>\n                  </mat-select>\n                </div>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n          <div class="form-group">\n            <div class="inner-group search">\n              <i class="icon-search"></i>\n              <input type="text" class="form-control" id="inputSearch" placeholder="Search egg type" [(ngModel)]="search"\n                (keydown.enter)="searchItem()" />\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n          <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n              <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n              <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <ng-container *ngIf="visible_columns.length > 1">\n        <div class="data-table p-relative table-listing" style="overflow: auto;">\n          <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n            <thead>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </thead>\n            <tbody>\n              <ng-container *ngIf="isLoaded && items.length > 0">\n                <tr *ngFor="let item of items; let i = index">\n                  <td *ngIf="ths[0].isVisible">{{ item.egg_type_type }}</td>\n                  <td *ngIf="ths[1].isVisible">₱ {{ item.per_piece | number : \'1.2-2\' }}</td>\n                  <td *ngIf="ths[2].isVisible">₱ {{ item.per_tray | number : \'1.2-2\' }}</td>\n                  <td *ngIf="ths[3].isVisible">₱ {{ item.per_case | number : \'1.2-2\' }}</td>\n                  <td *ngIf="ths[4].isVisible">{{ item.updated_at | date: \'MM/dd/yyyy\' }}</td>\n                  <td *ngIf="ths[5].isVisible">\n                      <button type="button" mat-flat-button class="btn btn-clear text-blue" [routerLink]="[ \'/price-management/view\', item.type_id]">\n                          <i class="icon-price-trend"></i>\n                          View price trend\n                        </button>\n                    <button type="button" mat-flat-button class="btn btn-clear" (click)="openModal(item)">\n                      <i class="icon-edit"></i>\n                      Update price\n                    </button>\n                  </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="!isLoaded">\n                <tr>\n                  <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                    <ngx-skeleton-loader [theme]="{\n                      \'border-radius\' : \'5px\',\n                      \'margin-bottom\' : \'0px\',\n                      \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                  </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="isLoaded && items.length == 0">\n                <tr>\n                  <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                </tr>\n              </ng-container>\n            </tbody>\n            <tfoot>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </ng-container>\n      <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n        <div class="row">\n          <div class="col-12 text-center">\n            <p class="mb-0">Please choose column visibility</p>\n          </div>\n        </div>\n      </ng-container>\n      <div class="row mt-35">\n        <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n          <div class="form-group">\n            <div class="inner-group in-line">\n              <label class="mr-15">Show</label>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                  <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n              </mat-select>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                  <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n              </mat-select>\n              <label>of {{ totalItems | number }} entries</label>\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n          <ul class="paginate pull-right">\n            <li class="link cursor-pointer" *ngIf="prev_page">\n                <a (click)="gotoPage(prev_page)">\n                    Previous\n                </a>\n            </li>\n            <ng-container *ngFor="let x of counter(totalPages); let i = index">\n              <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n            </ng-container>\n            \n            <li class="link cursor-pointer" *ngIf="next_page">\n                <a (click)="gotoPage(next_page)">\n                    Next\n                </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </section>  '},C0o6:function(t,e,n){"use strict";n.r(e),e.default=""},CEfV:function(t,e,n){"use strict";n.r(e),e.default=""},CnOH:function(t,e,n){"use strict";n.r(e),e.default=""},Dmor:function(t,e,n){"use strict";n.r(e),e.default=""},DosS:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-20">\n        <div class="col-xl-9 col-lg-8 col-md-7 col-sm-6 col-12">\n            <h1 class="heading">My Profile</h1>\n        </div>\n    </div>\n    <div class="row">\n      <div class="col-xl-9 col-lg-8 col-md-7 col-sm-6 col-12">\n        <div class="container-card view-record p-30">\n          <div class="row">\n            <div class="col-xl-2 offset-xl-0 col-lg-3 offset-lg-0 col-md-6 offset-md-3 col-sm-6 offset-sm-3 col-6 offset-3">\n              <img *ngIf="!isLoaded || !user_profile.profile_picture" src="../../../../../assets/images/profile.svg" class="avatar img-responsive">\n              <img *ngIf="isLoaded && user_profile.profile_picture" [src]="user_profile.profile_picture" class="avatar img-responsive">\n            </div>\n            <div class="col-xl-10 col-lg-9 col-md-12 col-sm-12 col-12 pl-0 mt-11">\n              <div class="row ml-0 mr-0">\n                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                  <p class="mb-5 fs-12">First Name</p>\n                  <h1 class="mini-heading fw-500">{{ user_profile.profile_first_name }}</h1>\n                </div>\n                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                  <p class="mb-5 fs-12">Last Name</p>\n                  <h1 class="mini-heading fw-500">{{ user_profile.profile_last_name }}</h1>\n                </div>\n                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                  <p class="mb-8 fs-12">Username</p>\n                  <h1 class="fs-16">{{ user_profile.username }}</h1>\n                </div>\n              </div>\n              <div class="row mt-19 ml-0 mr-0">\n                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                  <p class="mb-8 fs-12">User Role</p>\n                  <h1 class="fs-16">{{ user_profile.user_role_label }}</h1>\n                </div>\n                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                  <p class="mb-8 fs-12">User ID</p>\n                  <h1 class="fs-16">{{ user_profile.id }}</h1>\n                </div>\n                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                  <p class="mb-8 fs-12">Mobile Number</p>\n                  <h1 class="fs-16">+63{{ user_profile.contact_number }}</h1>\n                </div>\n                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0" *ngIf="user_profile.user_role_id == 4 || user_profile.user_role_id == 5">\n                  <p class="mb-8 fs-12">Email</p>\n                  <h1 class="fs-16">{{ user_profile.email }}</h1>\n                </div>\n              </div>\n              <div class="row mt-19 ml-0 mr-0">\n                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                  <p class="mb-8 fs-12">Address</p>\n                  <h1 class="fs-16">{{ user_profile.profile_location }}</h1>\n                </div>\n                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                  <p class="mb-8 fs-12">Password</p>\n                  <h1 class="fs-16">{{ user_profile.real_password }}</h1>\n                </div>\n              </div>\n              <div class="row mt-19 ml-0 mr-0">\n                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                  <p class="mb-8 fs-12">Date Added</p>\n                  <h1 class="fs-16">{{ user_profile.created_at | date : \'MM/dd/yyyy\' }}</h1>\n                </div>\n                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                  <p class="mb-8 fs-12">Last Login</p>\n                  <h1 class="fs-16">{{ user_profile.last_login ? (user_profile.last_login | date : \'MM/dd/yyyy, hh:mm aaa\') : \'Not yet logged in\' }}</h1>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12">\n        <div class="body-card pt-18 pl-24 pr-24 pb-43">\n          <h1 class="mini-heading fs-16 fw-500 mb-10">Actions</h1>\n          <p class="fs-14 action-note">Here are the actions you can apply for this order details.</p>\n          <button type="button" class="btn btn-secondary mt-30 btn-block" mat-flat-button [routerLink]="[\'/staffs/update\', user_profile.id]">\n            <div class="cus-layer ml-auto mr-auto">\n              <i class="icon-edit"></i>\n              <span class="ml-8 fs-14">Edit Profile</span>\n            </div>\n          </button>\n        </div>\n      </div>\n    </div>\n  </section>\n  \n  <section class="main-container p-35">\n    <div class="row mb-35">\n      <div class="col-xl-6 col-lg-6 col-md-8 col-sm-12 col-12">\n        <h1 class="heading">Activity Log</h1>\n      </div>\n    </div>\n    \n    <div class="container-card p-30 mb-25" *ngIf="show_filter">\n      <div class="row">\n        <div class="col-12">\n          <h6 class="card-heading">Filters</h6>\n        </div>\n      </div>\n      <div class="row">\n  \x3c!--       <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n          <div class="row">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n              <div class="form-group">\n                <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block" (click)="created_at_picker.open()">{{ from && to ? \'Date Created - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date Created\' }}\n                  <i class="icon-arrow-drop-down ml-5"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div> --\x3e\n  \x3c!--       <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n          <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n              Clear Filters\n            </button>\n          </div>\n        </div> --\x3e\n      </div>\n    </div>\n    <div class="container-card p-30">\n      <div class="row mb-25">\n        <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n          <div class="form-group">\n            <div class="inner-group in-line">\n              <label class="mr-15">Show</label>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                  <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n              </mat-select>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                  <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n              </mat-select>\n              <label>of {{ totalItems | number }} entries</label>\n            </div>\n          </div>\n        </div>\n  \x3c!--       <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n          <div class="form-group">\n            <div class="inner-group">\n              <mat-select multiple class="btn btn-block btn-primary multiple-select" (selectionChange)="changeColumnVisibility($event)" placeholder="Column Visibility" [(ngModel)]="visible_columns">\n                <mat-select-trigger>Column Visibility</mat-select-trigger>\n                <mat-option *ngFor="let item of ths; let i = index" [value]="i">{{ item.label }}</mat-option>\n              </mat-select>\n            </div>\n          </div>\n        </div> --\x3e\n        <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n          <div class="form-group">\n            <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)"\n              [(ngModel)]="created_at">\n            <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n            <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block"\n              (click)="created_at_picker.open()">{{ from && to ? \'Date Created - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date Created\' }}\n              <i class="icon-arrow-drop-down ml-5"></i>\n            </button>\n          </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n          <div class="form-group">\n            <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="code"\n              (selectionChange)="changeCode($event)" placeholder="Staff Activity">\n              <mat-option *ngFor="let code_option of code_options" [value]="code_option.value">{{ code_option.label }}</mat-option>\n            </mat-select>\n          </div>\n        </div>\n  \x3c!--       <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n          <div class="form-group">\n            <div class="inner-group search">\n              <i class="icon-search"></i>\n              <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n                (keydown.enter)="searchItem()" />\n            </div>\n          </div>\n        </div> --\x3e\n  \x3c!--       <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n          <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n              <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n              <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n            </button>\n          </div>\n        </div> --\x3e\n        <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n          <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n              Clear Filters\n            </button>\n          </div>\n        </div>\n      </div>\n      <ng-container *ngIf="visible_columns.length > 1">\n        <div class="data-table p-relative table-listing" style="overflow: auto;">\n          <table>\n            <thead>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </thead>\n            <tbody>\n              <ng-container *ngIf="isLoaded && items.length > 0">\n                <tr *ngFor="let item of items; let i = index">\n                  <td *ngIf="ths[0].isVisible" [innerHTML]="item.action">{{ item.action }}</td>\n                  <td *ngIf="ths[1].isVisible">{{ item.created_at }}</td>\n  \x3c!--                 <td *ngIf="ths[2].isVisible">\n                    <mat-chip-list>\n                      <mat-chip>{{ item.recordStatus }}</mat-chip>\n                    </mat-chip-list>\n                  </td>\n                  <td *ngIf="ths[3].isVisible">{{ item.bird_count | number }}</td>\n                  <td *ngIf="ths[4].isVisible">{{ item.real_egg_count | number }}</td>\n                  <td *ngIf="ths[5].isVisible">\n                    <button type="button" mat-flat-button class="btn btn-clear" [routerLink]="[ \'/transactions/view\', item.id]">\n                      <i class="icon-datatables-view"></i>\n                      View\n                    </button>\n                  </td> --\x3e\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="!isLoaded">\n                <tr>\n                  <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                    <ngx-skeleton-loader [theme]="{\n                      \'border-radius\' : \'5px\',\n                      \'margin-bottom\' : \'0px\',\n                      \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                  </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="isLoaded && items.length == 0">\n                <tr>\n                  <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                </tr>\n              </ng-container>\n            </tbody>\n            <tfoot>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </ng-container>\n      <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n        <div class="row">\n          <div class="col-12 text-center">\n            <p class="mb-0">Please choose column visibility</p>\n          </div>\n        </div>\n      </ng-container>\n      <div class="row mt-35">\n        <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n          <div class="form-group">\n            <div class="inner-group in-line">\n              <label class="mr-15">Show</label>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                  <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n              </mat-select>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                  <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n              </mat-select>\n              <label>of {{ totalItems | number }} entries</label>\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n          <ul class="paginate pull-right">\n            <li class="link cursor-pointer" *ngIf="prev_page">\n              <a (click)="gotoPage(prev_page)">\n                Previous\n              </a>\n            </li>\n            <ng-container *ngFor="let x of counter(totalPages); let i = index">\n              <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n            </ng-container>\n            <li class="link cursor-pointer" *ngIf="next_page">\n              <a (click)="gotoPage(next_page)">\n                Next\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </section>'},ERZh:function(t,e,n){"use strict";n.r(e),e.default='<div class="login-container">\n  <div class="inner-container">\n    <div class="col1">\n      <div class="login-wrapper ml-100 mr-100">\n        <div class="row">\n          <div class="col-12 text-center">\n            <img class="img2" class="mt-60" src="../../../assets/images/gapan-logo.svg" alt="" width="50%"/>\n          </div>\n        </div>\n        <h3 class="fs-20 mt-26 mb-0 fw-500">Welcome to Gapan Fresh Eggs, Inc.</h3>\n        <p id="welcome" class="fs-16 lh-24 mb-0 mt-11 text-secondary">\n          Welcome back, login now to get started.\n        </p>\n        <div class="mt-35">\n          <form [formGroup]="loginForm" (ngSubmit)="login()">\n            <div class="row">\n              <div class="col-md-12">\n                <div class="form-group">\n                  <label class="text-secondary">Email or Username</label>\n                  <input type="text" class="form-control mb-10" formControlName="email" (keydown.enter)="login()" placeholder="Enter your email or username"/>\n                  <ng-container *ngIf="loginForm.controls.email.touched">\n                    <p class="text-danger" *ngIf="loginForm.controls.email.hasError(\'required\')">Email or username is required</p>\n                    <p class="text-danger" *ngIf="loginForm.controls.email.hasError(\'pattern\')">Please enter a valid email address</p>\n                    \x3c!-- <p class="text-danger" *ngIf="loginForm.controls.username.hasError(\'email\')">Please enter a valid email address</p> --\x3e\n                  </ng-container>\n                </div>\n              </div>\n            </div>\n            <div class="row">\n              <div class="col-md-12">\n                <div class="form-group">\n                  <label class="text-secondary">Password</label>\n                  <div class="p-relative">\n                    <input type="{{ show_password ? \'text\' : \'password\' }}" formControlName="password" class="form-control mb-10" (keydown.enter)="login()" placeholder="Enter your password" />\n                    <button type="button" class="btn btn-clear p-absolute t-2 r-0" (click)="showPassword()">\n                        <i [ngClass]="{ \'icon-eye-close\' : !show_password, \'icon-eye-open\' : show_password }"></i>\n                    </button>\n                  </div>\n                  <ng-container *ngIf="loginForm.controls.password.touched">\n                    <p class="text-danger" *ngIf="loginForm.controls.password.hasError(\'required\')">Password is required</p>\n                    <p class="text-danger" *ngIf="loginForm.controls.password.hasError(\'minlength\')">Password must contain at least 8 characters</p>\n                  </ng-container>\n                </div>\n              </div>\n            </div>\n            <div class="row">\n              <div class="col-md-6">\n                <div class="form-group">\n                  <mat-checkbox formControlName="remember_me">Remember me</mat-checkbox>\n                </div>\n              </div>\n              <div class="col-md-6 text-right">\n                <div class="form-group">\n                  <button class="btn btn-forgot p-0">Forgot Password?</button>\n                </div>\n              </div>\n            </div>\n            <div class="row">\n              <div class="col-md-12 text-right">\n                <button type="submit" mat-flat-button class="btn btn-primary btn-block fs-16 lh-24 h-46 fw-400" [disabled]="!loginForm.valid">Login</button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    <div class="col2">\n      <img class="img1" src="../../../assets/images/image.png" />\n    </div>\n  </div>\n</div>\n'},"F67/":function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35" [ngClass]="{ \'h-100-per\' : !house_id }">\n    <div class="row mb-15">\n        <div class="col-xl-auto offset-xl-2">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary" (click)="openModal(\'go_back\', \'feedmedconsumption_create\')">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-15">\n        <div class="col-xl-8 offset-xl-2">\n            <h1 class="heading">Add new monthly record</h1>\n            <p class="sub-heading">For this month of {{ monthdatetoday | date : \'MMMM yyyy\' }}</p>\n        </div>\n    </div>\n    <form [formGroup]="medicineConsumptionForm">\n        <div class="row">\n            <div class="col-xl-8 offset-xl-2">\n                <div class="container-card view-record">\n                        <div class="p-30">\n                            <h1 class="heading">Record Details</h1>\n                        </div>\n                        <div class="pr-30 pl-30 pb-30">\n                            <div class="row">\n                                <div class="col-xl-6 col-lg-6 col-md-6">\n                                    <div class="form-group">\n                                        <label class="text-secondary">House/Building no. <span class="required">*</span></label>\n                                        <mat-select class="btn btn-drop-down btn-block text-left mb-10" formControlName="house_id" placeholder="Please select a house/bldg no." (selectionChange)="getHousedetails($event)">\n                                            <mat-option *ngFor="let house of house_options" [value]="house.id">House/bldg no. {{ house.house_name }}</mat-option>\n                                        </mat-select>\n                                        <ng-container *ngIf="medicineConsumptionForm.controls.house_id.touched">\n                                            <p class="text-danger" *ngIf="medicineConsumptionForm.controls.house_id.hasError(\'required\')">House is required</p>\n                                        </ng-container>\n                                    </div>\n                                </div>\n                                <div class="col-xl-6 col-lg-6 col-md-6">\n                                    <div class="form-group">\n                                        <label class="text-secondary">Add Beginning Population of Chickens <span class="required">*</span></label>\n                                        <div class="input-group">\n                                            <ng-container *ngIf="disable_main_input">\n                                                <input type="number" class="form-control mb-10" formControlName="bird_count" placeholder="0" maxlength="10" [disabled]="disable_main_input" disabled/>\n                                            </ng-container>\n                                            <ng-container *ngIf="!disable_main_input">\n                                                <input type="number" class="form-control mb-10" formControlName="bird_count" placeholder="0" maxlength="10" [disabled]="disable_main_input"/>\n                                            </ng-container>\n                                        </div>\n                                        <ng-container *ngIf="medicineConsumptionForm.controls.bird_count.touched">\n                                            <p class="text-danger" *ngIf="medicineConsumptionForm.controls.bird_count.hasError(\'required\')">Beginning population is\n                                                required</p>\n                                        </ng-container>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-xl-6 col-lg-6 col-md-6">\n                                    <div class="form-group">\n                                        <label class="text-secondary">Beginning age of Chickens<span class="required">*</span></label>\n                                            <div class="input-group">\n                                                <div class="input-group-prepend">\n                                                    <span class="input-group-text mb-10">Weeks</span>\n                                                </div>\n                                                <ng-container *ngIf="disable_main_input">\n                                                    <input type="number" class="form-control mb-10" formControlName="age_week" placeholder="0" maxlength="10" disabled/>\n                                                </ng-container>\n                                                <ng-container *ngIf="!disable_main_input">\n                                                    <input type="number" class="form-control mb-10" formControlName="age_week" placeholder="0" maxlength="10"/>\n                                                </ng-container>\n                                            </div>\n                                        <ng-container *ngIf="medicineConsumptionForm.controls.age_week.touched">\n                                            <p class="text-danger" *ngIf="medicineConsumptionForm.controls.age_week.hasError(\'required\')">Week is\n                                                required</p>\n                                        </ng-container>\n                                    </div>\n                                </div>\n                                <div class="col-xl-6 col-lg-6 col-md-6">\n                                    <div class="form-group">\n                                        <label class="text-secondary"><span class="required"></span></label>\n                                        <div class="input-group">\n                                            <div class="input-group-prepend">\n                                                <span class="input-group-text mb-10">Days</span>\n                                            </div>\n                                            <ng-container *ngIf="disable_main_input">\n                                                <input type="number" class="form-control mb-10" formControlName="age_day" placeholder="0" maxlength="10" disabled/>\n                                            </ng-container>\n                                            <ng-container *ngIf="!disable_main_input">\n                                                <input type="number" class="form-control mb-10" formControlName="age_day" placeholder="0" maxlength="10"/>\n                                            </ng-container>\n                                        </div>\n                                        <ng-container *ngIf="medicineConsumptionForm.controls.age_day.touched">\n                                            <p class="text-danger" *ngIf="medicineConsumptionForm.controls.age_day.hasError(\'required\')">Day is\n                                                required</p>\n                                        </ng-container>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    \n                </div>\n            </div>\n        </div>\n        <div class="row pt-30" *ngIf="house_id && medicine && medicine.length > 0">\n            <div class="col-xl-8 offset-xl-2">\n                <div class="container-card view-record">\n                    <div class="p-30">\n                        <h1 class="heading">Prescribed Medicine per day</h1>\n                    </div>\n                    <div class="pr-30 pl-30 pb-30">\n                        <div class="row">\n                            <div class="col-xl-12 col-lg-12 col-md-12">\n                                <div class="form-group">\n                                    <div class="row">\n                                        <div class="col-1">\n                                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Day</p>\n                                        </div>\n                                        <div class="col-11">\n                                            <p class="mini-heading fs-16 mb-10 font-weight-normal">Medicine Name</p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="row" *ngFor="let day of days; let i = index" [ngClass]="{ \'mb-30 border-bottom\' : i < days.length - 1 }">\n                                    <div class="col-xl-1 col-lg-1 col-md-1">\n                                        <p class="mini-heading mb-10 mt-10 fs-16 fw-500">{{ day.day | date : \'dd\' }}</p>\n                                    </div>\n                                    <div class="col-xl-8 col-lg-8 col-md-8 mb-30">\n                                        <div class="row">\n                                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                                <div class="form-group">\n                                                    <label class="fs-16 mb-10">Choose a feed</label>\n                                                    <mat-select class="btn btn-drop-down btn-block text-left mb-10" placeholder="Please choose feed" [value]="medicine[i].feed.feed_id" (selectionChange)="chooseFeed($event, i)" [disabled]="medicine[i].day <= (date_today | date : \'yyyy-MM-dd\') ? true : false">\n                                                        <mat-option *ngFor="let feed of feed_options" [value]="feed.id">{{ feed.feed }}</mat-option>\n                                                    </mat-select>\n                                                </div>\n                                            </div>\n                                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                                <div class="form-group">\n                                                    <label class="fs-16 mb-10">Feed Consumption</label>\n                                                    <input type="number" class="form-control mb-10" placeholder="0" maxlength="10" (input)="setFeedValue($event.target.value, i)" [value]="medicine[i].feed.feed_consumption" [disabled]="medicine[i].day <= (date_today | date : \'yyyy-MM-dd\') ? true : false"/>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="row">\n                                            <div class="col-xl-6 col-lg-6 col-md-6" *ngFor="let med of medicines; let x = index">\n                                                <mat-checkbox [value]="med.id" (change)="checkbox($event, i, x)" [checked]="medicine[i].med[x].value > 0 ? true : false" [disabled]="medicine[i].day <= (date_today | date : \'yyyy-MM-dd\') ? true : false">{{ med.medicine }}</mat-checkbox>\n                                            <div class="input-group">\n                                                <input class="form-control mb-10" type="number" min="0" step="0.01" placeholder="0" (input)="setMedvalue($event.target.value,i,x)" [value]="medicine[i].med[x].value" [disabled]="medicine[i].day <= (date_today | date : \'yyyy-MM-dd\') ? true : false"/>\n                                                <div class="input-group-append">\n                                                    <span class="input-group-text mb-10">{{ med.medicine_unit.unit }}</span>\n                                                </div> \n                                            </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                \x3c!-- <div class="col-lg-5 mt-30 mb-30">\n                                    <button mat-flat-button class="btn btn-primary btn-block">\n                                        <i class="icon-add"></i>\n                                        <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none" (click)="addDay()">Add Daily\n                                            Medication</span>\n                                    </button>\n                                </div> --\x3e\n                                <hr class="m-0">\n                                <div class="p-30 fixed-div">\n                                    <div class="row">\n                                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 ml-xl-auto ml-lg-auto ml-md-auto">\n                                            <button type="button" mat-flat-button class="btn btn-clear btn-block" (click)="openModal(\'form_cancel\', \'feedmedconsumption_create\')">\n                                                Cancel\n                                            </button>\n                                        </div>\n                                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6">\n                                            <button type="submit" mat-flat-button class="btn btn-primary btn-block" (click)="openModal(medicineConsumptionForm.value, \'medicine_add\')">\n                                                Save Changes\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n</section>\n\x3c!-- <div class="footer" #footer>\n    Your sticky footer with a variable height.\n</div>\n<footer fxFlexOffset="auto">\n    <div class="container">\n        <div class="row row mt-20 mb-20">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 ml-xl-auto ml-lg-auto ml-md-auto">\n                <button type="button" mat-flat-button class="btn btn-clear btn-block" (click)="openModal(\'form_cancel\', \'feedmedconsumption_create\')">\n                    Cancel\n                </button>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6">\n                <button type="submit" mat-flat-button class="btn btn-primary btn-block" (click)="openModal(medicineConsumptionForm.value, \'medicine_add\')">\n                    Save Changes\n                </button>\n            </div>\n        </div>\n    </div>\n</footer> --\x3e'},FVEx:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n  <div class="row mb-35">\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-9 col-9">\n      <h1 class="heading">Customer Management</h1>\n      <p class="sub-heading mb-8">Total number of customers: <strong>{{ totalItems }}</strong></p>\n      <ng-container *ngIf="showtimeago">\n        <p class="sub-heading italic" *ngIf="activity && activity.update_at">last updated {{ activity.update_at | timeago }}</p>\n        <ngx-skeleton-loader *ngIf="!activity || !activity.update_at" [theme]="{\n          \'border-radius\' : \'5px\',\n          \'margin-bottom\' : \'10px\',\n          \'height\' : \'20px\'\n        }"></ngx-skeleton-loader>\n      </ng-container>\n    </div>\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-3 col-3 ml-auto">\n      <button class="btn btn-primary btn-block" routerLink="/customers/create">\n        <i class="icon-add"></i>\n        <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">Add new customer</span>\n      </button>\n    </div>\n  </div>\n  <div class="container-card p-30">\n    <div class="row mb-25">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-4 offset-xl-3 col-lg-4 offset-lg-5 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group search">\n            <i class="icon-search"></i>\n            <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n              (keydown.enter)="searchItem()" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf="visible_columns.length > 0">\n      <div class="data-table p-relative table-listing" style="overflow: auto;">\n        <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n          <thead>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf="isLoaded && items.length > 0">\n              <tr *ngFor="let item of items; let i = index">\n                <td>{{ item.customer_id }}</td>\n                <td>{{ item.profile_first_name }} {{ item.profile_last_name }}</td>\n                <td>{{ item.customer_type ? item.customer_type.type : \'\' }}</td>\n                <td>{{ item.contact_number ? \'+63\' : \'\' }}<span *ngIf="item.contact_number">{{item.contact_number}}</span></td>\n                <td>{{ item.address_address }}</td>\n                <td>{{ item.created_at | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                <td>\n                  <button type="button" mat-flat-button class="btn btn-clear text-blue" [routerLink]="[ \'/customers/view\', item.id]">\n                    <i class="icon-datatables-view"></i>\n                    View\n                  </button>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="!isLoaded">\n              <tr>\n                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                  <ngx-skeleton-loader [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'0px\',\n                    \'height\' : \'20px\'\n                  }"></ngx-skeleton-loader>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && items.length == 0">\n              <tr>\n                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n              </tr>\n            </ng-container>\n          </tbody>\n          <tfoot>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n      <div class="row">\n        <div class="col-12 text-center">\n          <p class="mb-0">Please choose column visibility</p>\n        </div>\n      </div>\n    </ng-container>\n    <div class="row mt-35">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n        <ul class="paginate pull-right">\n          <li class="link cursor-pointer" *ngIf="prev_page">\n              <a (click)="gotoPage(prev_page)">\n                  Previous\n              </a>\n          </li>\n          <ng-container *ngFor="let x of counter(totalPages); let i = index">\n            <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n          </ng-container>\n          <li class="link cursor-pointer" *ngIf="next_page">\n              <a (click)="gotoPage(next_page)">\n                  Next\n              </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</section>'},FaBt:function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="border">\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h5 class="mb-30">Monthly Record</h5>\n                </div>\n            </div>\n            <div class="row pb-10 ml-0 mr-0 border-bottom">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">Prepared by:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                    <p class="mb-0 fs-14">Date:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n\n            <div class="row ml-0 mr-0">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-9 col-9">\n                    <h1 class="heading">House/Building Details</h1>\n                </div>\n            </div>\n\n            <div class="row mb-30">\n                <div class="col-12">\n                    <div class="container-card view-record p-0">\n                        <div class="row">\n                            <div class="col-12">\n                                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                                    <table>\n                                        <tbody>\n                                            <tr>\n                                                <td class="w-30-per alt">House/Building</td>\n                                                <td class="w-70-per">\n                                                    <ng-container *ngIf="isLoaded">{{ house_data.house }}</ng-container>\n                                                    <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                        \'border-radius\': \'5px\',\n                                                        \'margin-bottom\': \'0px\',\n                                                        \'height\': \'20px\',\n                                                        \'width\': \'50%\'\n                                                    }"></ngx-skeleton-loader>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class="w-30-per alt">Daily Report Progress</td>\n                                                <td class="w-70-per">\n                                                    <ng-container *ngIf="isLoaded">{{ house_data.daily_report_progress }}</ng-container>\n                                                    <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                        \'border-radius\': \'5px\',\n                                                        \'margin-bottom\': \'0px\',\n                                                        \'height\': \'20px\',\n                                                        \'width\': \'50%\'\n                                                    }"></ngx-skeleton-loader>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class="w-30-per alt">Month</td>\n                                                <td class="w-70-per">\n                                                    <ng-container *ngIf="isLoaded">{{ house_data.current_age_of_chicken ? (house_data.current_age_of_chicken.created_at | date : \'MMMM\') : \'\' }}</ng-container>\n                                                    <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                        \'border-radius\': \'5px\',\n                                                        \'margin-bottom\': \'0px\',\n                                                        \'height\': \'20px\',\n                                                        \'width\': \'50%\'\n                                                    }"></ngx-skeleton-loader>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class="w-30-per alt">Year</td>\n                                                <td class="w-70-per">\n                                                    <ng-container *ngIf="isLoaded">{{ house_data.current_age_of_chicken ? (house_data.current_age_of_chicken.created_at | date : \'yyyy\') : \'\' }}</ng-container>\n                                                    <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                        \'border-radius\': \'5px\',\n                                                        \'margin-bottom\': \'0px\',\n                                                        \'height\': \'20px\',\n                                                        \'width\': \'50%\'\n                                                    }"></ngx-skeleton-loader>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class="w-30-per alt">Beginning Population of Chickens</td>\n                                                <td class="w-70-per">\n                                                    <ng-container *ngIf="isLoaded">{{ house_data.beginning_population }}</ng-container>\n                                                    <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                        \'border-radius\': \'5px\',\n                                                        \'margin-bottom\': \'0px\',\n                                                        \'height\': \'20px\',\n                                                        \'width\': \'50%\'\n                                                    }"></ngx-skeleton-loader>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class="w-30-per alt">Age of Chickens</td>\n                                                <td class="w-70-per">\n                                                    <ng-container *ngIf="isLoaded">{{ house_data.age_chicken.age }}</ng-container>\n                                                    <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                        \'border-radius\': \'5px\',\n                                                        \'margin-bottom\': \'0px\',\n                                                        \'height\': \'20px\',\n                                                        \'width\': \'50%\'\n                                                    }"></ngx-skeleton-loader>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="row ml-0 mr-0">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-9 col-9">\n                    <h1 class="heading">Feeds and Medicine Consumption Daily Report</h1>\n                </div>\n            </div>\n        \n            <div class="container-card p-0">\n                <ng-container *ngIf="visible_columns.length > 0">\n                    <div class="data-table p-relative table-listing" style="overflow: auto;">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <ng-container *ngFor="let th of ths; let i = index">\n                                        <th class="p-10 fs-12">{{ th.label }}</th>\n                                    </ng-container>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container *ngIf="isLoaded && feeds_and_medicine.length > 0">\n                                    <ng-container *ngFor="let feeds_medicine of feeds_and_medicine; let i = index">\n                                        <tr>\n                                            <td *ngIf="ths[0].isVisible" class="p-10 fs-12">{{ feeds_medicine.created_at | date: \'d\' }}</td>\n                                            <td *ngIf="ths[1].isVisible" class="p-10 fs-12">\n                                                {{ feeds_medicine.age_week > 1 ? feeds_medicine.age_week+\' weeks\' : feeds_medicine.age_week+\' week\' }},\n                                                {{ feeds_medicine.age_day > 1 ? feeds_medicine.age_day+\' days\' : feeds_medicine.age_day+\' day\' }}</td>\n                                            <td *ngIf="ths[2].isVisible" class="p-10 fs-12">{{ feeds_medicine.mortality }}</td>\n                                            <td *ngIf="ths[3].isVisible" class="p-10 fs-12">{{ feeds_medicine.mortality_rate | percent:\'1.1-2\' }}</td>\n                                            <td *ngIf="ths[4].isVisible" class="p-10 fs-12">{{ feeds_medicine.cull }}</td>\n                                            <td *ngIf="ths[5].isVisible" class="p-10 fs-12">{{ feeds_medicine.end_bird_population }}</td>\n                                            <td *ngIf="ths[6].isVisible" class="p-10 fs-12">{{ feeds_medicine.real_egg_count }}</td>\n                                            <td *ngIf="ths[7].isVisible" class="p-10 fs-12">{{ feeds_medicine.production_rate | number:\'2.1-2\' }}%</td>\n                                            <td *ngIf="ths[8].isVisible" class="p-10 fs-12">\n                                                {{ feeds_medicine.feed_info ? feeds_medicine.feed_info.feed : \'\' }} ({{ feeds_medicine.feed_consumption }} g)</td>\n                                            <td *ngIf="ths[9].isVisible" class="p-10 fs-12">{{ feeds_medicine.feeds ? feeds_medicine.feeds.string : \'\' }}</td>\n                                            <td *ngIf="ths[10].isVisible" class="p-10 fs-12">{{ feeds_medicine.feed_info ? feeds_medicine.feed_info.feed : \'\' }} ({{ feeds_medicine.rec_feed_consumption }} g)</td>\n                                            <td *ngIf="ths[11].isVisible" class="p-10 fs-12">{{ feeds_medicine.req_feeds ? feeds_medicine.req_feeds.string : \'\' }}</td>\n                                            <td *ngIf="ths[12].isVisible" class="p-10 fs-12">\n                                                <ng-container *ngFor="let med of feeds_medicine.medicine_name; let m = index">\n                                                    {{ med.medicine }} ({{ med.medicine_value }} {{ med.medicine_unit.unit }}){{ m < feeds_medicine.medicine_name.length - 1 ? \',\' : \'\' }}<br *ngIf="m < feeds_medicine.medicine_name.length - 1">\n                                                </ng-container>\n                                            </td>\n                                        </tr>\n                                    </ng-container>\n                                </ng-container>\n        \x3c!--                         <ng-container *ngIf="!isLoaded">\n                                    <tr>\n                                        <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                            <ngx-skeleton-loader [theme]="{\n                                                \'border-radius\' : \'5px\',\n                                                \'margin-bottom\' : \'0px\',\n                                                \'height\' : \'20px\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                </ng-container> --\x3e\n                                <ng-container *ngIf="isLoaded && feeds_and_medicine.length == 0">\n                                    <tr>\n                                        <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <ng-container *ngFor="let th of ths; let i = index">\n                                        <th class="p-10 fs-12">{{ th.label }}</th>\n                                    </ng-container>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </div>\n                </ng-container>\n                <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n                    <div class="row">\n                        <div class="col-12 col-lg-4 text-center">\n                            <p class="mb-0">Please choose column visibility</p>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n\n\n            <div class="row ml-0 mr-0 mt-20 border-bottom">\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Prepared By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Approved By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 h-22"></p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},G5K1:function(t,e,n){"use strict";n.r(e),e.default=""},Gr6q:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-20">\n        <div class="col-xl-9 col-lg-8 col-md-7 col-sm-6 col-12">\n            <h1 class="heading">View Price Trend</h1>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-12 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary btn-block" (click)="goBack()">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="container-card p-30 mb-25">\n        <div class="row">\n            <div class="col-12">\n                <h6 class="card-heading">Filters</h6>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group">\n                            <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="type" (selectionChange)="changeType($event)" placeholder="Egg Size">\n                                <mat-option *ngFor="let egg_type of egg_type_options" [value]="egg_type.id">{{ egg_type.type }}</mat-option>\n                            </mat-select>\n                        </div>\n                    </div>\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group">\n                            <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                            <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? \'Date Range - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date Range\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                <div class="form-group">\n                    <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n                        Clear Filters\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="container-card p-30 mb-25">\n        <div class="row mb-30">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                \x3c!-- <p class="mb-10">Overall Harvested Eggs</p> --\x3e\n                <h1 class="heading"><span class="sub-heading">Egg Size: </span>{{ type_name }}</h1>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n                <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="downloadModal()" [disabled]="!isLoaded">\n                    <i class="icon-download"></i>\n                    <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n                    <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n                </button>\n            </div>\n        </div>\n        <div class="row mb-30" *ngIf="isLoaded">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                <canvas baseChart \n                    [datasets]="lineChartData"\n                    [labels]="lineChartLabels"\n                    [options]="lineChartOptions"\n                    [plugins]="lineChartPlugins"\n                    [legend]="lineChartLegend"\n                    [chartType]="lineChartType">\n                </canvas>\n            </div>\n            <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p>All Dates</p>\n            </div>\n            <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n            </div>\n        </div>\n    </div>\n    <div class="container-card p-30">\n        <div class="row mb-30">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0">Price Table</p>\n            </div>\n        </div>\n        <ng-container *ngIf="visible_columns.length > 1">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <table>\n                    <thead>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                        <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    <ng-container *ngIf="isLoaded && items.length > 0">\n                        <tr *ngFor="let item of items; let i = index">\n                            <td *ngIf="ths[0].isVisible">{{ item.updated_at | date: \'MM/dd/yyyy\' }}</td>\n                            <td *ngIf="ths[1].isVisible">₱ {{ item.price | number : \'1.2-2\' }}</td>\n                        </tr>\n                    </ng-container>\n                    <ng-container *ngIf="!isLoaded">\n                        <tr>\n                            <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                <ngx-skeleton-loader [theme]="{\n                                    \'border-radius\' : \'5px\',\n                                    \'margin-bottom\' : \'0px\',\n                                    \'height\' : \'20px\'\n                                }"></ngx-skeleton-loader>\n                            </td>\n                        </tr>\n                    </ng-container>\n                    <ng-container *ngIf="isLoaded && items.length == 0">\n                        <tr>\n                            <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                        </tr>\n                    </ng-container>\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                        <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n            <div class="row">\n                <div class="col-12 text-center">\n                    <p class="mb-0">Please choose column visibility</p>\n                </div>\n            </div>\n        </ng-container>\n        <div class="row mt-35">\n            <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12 ml-auto" *ngIf="totalPages > 1">\n                <ul class="paginate pull-right">\n                    <li class="link cursor-pointer" *ngIf="prev_page">\n                        <a (click)="gotoPage(prev_page)">\n                            Previous\n                        </a>\n                    </li>\n                    <ng-container *ngFor="let x of counter(totalPages); let i = index">\n                        <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n                    </ng-container>\n                    <li class="link cursor-pointer" *ngIf="next_page">\n                        <a (click)="gotoPage(next_page)">\n                            Next\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</section>'},HS27:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n  <div class="row mb-35">\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n      <h1 class="heading">All Transactions</h1>\n      <p class="sub-heading mb-8">Total number of transactions: <strong>{{ totalItems | number }}</strong></p>\n      <ng-container *ngIf="showtimeago">\n        <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n        <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n            \'border-radius\' : \'5px\',\n            \'margin-bottom\' : \'10px\',\n            \'height\' : \'20px\'\n        }"></ngx-skeleton-loader>\n      </ng-container>\n    </div>\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-3 col-3 ml-auto">\n      <button mat-flat-button class="btn btn-primary btn-block" routerLink="/transactions/create">\n        <i class="icon-add"></i>\n        <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">Add new transaction</span>\n      </button>\n    </div>\n  </div>\n  \n  <div class="container-card p-30 mb-25" *ngIf="show_filter">\n    <div class="row">\n      <div class="col-12">\n        <h6 class="card-heading">Filters</h6>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n        <div class="row">\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n              <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n              <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? \'Date Ordered - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date Ordered\' }}\n                <i class="icon-arrow-drop-down ml-5"></i>\n              </button>\n            </div>\n          </div>\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="payment_status" (selectionChange)="changePaymentStatus($event)" placeholder="Payment Status">\n                <mat-option *ngFor="let item of payment_status_options" [value]="item.value">{{ item.label }}</mat-option>\n              </mat-select>\n            </div>\n          </div>\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="order_status" (selectionChange)="changeOrderStatus($event)" placeholder="Order Status">\n                <mat-option *ngFor="let item of order_status_options" [value]="item.value">{{ item.label }}</mat-option>\n              </mat-select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n            Clear Filters\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="container-card p-30">\n    <div class="row mb-25">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n        <div class="form-group">\n          <div class="inner-group">\n            <mat-select multiple class="btn btn-block btn-primary multiple-select" (selectionChange)="changeColumnVisibility($event)" placeholder="Column Visibility" [(ngModel)]="visible_columns">\n              <mat-select-trigger>Column Visibility</mat-select-trigger>\n              <ng-container *ngFor="let item of ths; let i = index">\n                <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n              </ng-container>\n            </mat-select>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n        <div class="form-group">\n          <div class="inner-group search">\n            <i class="icon-search"></i>\n            <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n              (keydown.enter)="searchItem()" />\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n            <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf="visible_columns.length > 1">\n      <div class="data-table p-relative table-listing" style="overflow: auto;">\n        <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n          <thead>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf="isLoaded && items.length > 0">\n              <tr *ngFor="let item of items; let i = index">\n                <td *ngIf="ths[0].isVisible">{{ item.transaction_id }}</td>\n                <td *ngIf="ths[1].isVisible">{{ item.created_at | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                <td *ngIf="ths[2].isVisible">{{ item.customer_name }}</td>\n                <td *ngIf="ths[3].isVisible">\n                  <mat-chip-list>\n                    <mat-chip *ngIf="item.order_status == 1" color="primary">{{ item.status }}</mat-chip>\n                    <mat-chip *ngIf="item.order_status == 2" color="secondary">{{ item.status }}</mat-chip>\n                    <mat-chip *ngIf="item.order_status == 3" color="warning">{{ item.status }}</mat-chip>\n                    <mat-chip *ngIf="item.order_status == 4" color="success">{{ item.status }}</mat-chip>\n                    <mat-chip *ngIf="item.order_status == 7 || item.order_status == 8" color="danger">{{ item.status }}</mat-chip>\n                  </mat-chip-list>\n                </td>\n                <td *ngIf="ths[4].isVisible">\n                  <ng-container *ngFor="let egg of item.order_items; let i = index">\n                    {{ egg.egg_type.type }}{{ i < item.order_items.length -1 ? \', \':\'\' }}\n                  </ng-container>\n                </td>\n                <td *ngIf="ths[5].isVisible">{{ item.total_pieces | number }}</td>\n                <td *ngIf="ths[6].isVisible">₱ {{ item.total_price | number : \'1.2-2\' }}</td>\n                <td *ngIf="ths[7].isVisible">{{ item.payment_type }}</td>\n                <td *ngIf="ths[8].isVisible">\n                  <mat-chip-list>\n                    <mat-chip *ngIf="item.payment_status == 0" color="secondary">{{ item.payment_status_label }}</mat-chip>\n                    <mat-chip *ngIf="item.payment_status == 1" color="success">{{ item.payment_status_label }}</mat-chip>\n                  </mat-chip-list>\n                </td>\n                <td *ngIf="ths[9].isVisible">\n                  <button type="button" mat-flat-button class="btn btn-clear text-blue" [routerLink]="[ \'/transactions/view\', item.id]">\n                    <i class="icon-datatables-view"></i>\n                    View\n                  </button>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="!isLoaded">\n              <tr>\n                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                  <ngx-skeleton-loader [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'0px\',\n                    \'height\' : \'20px\'\n                  }"></ngx-skeleton-loader>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && items.length == 0">\n              <tr>\n                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n              </tr>\n            </ng-container>\n          </tbody>\n          <tfoot>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n      <div class="row">\n        <div class="col-12 text-center">\n          <p class="mb-0">Please choose column visibility</p>\n        </div>\n      </div>\n    </ng-container>\n    <div class="row mt-35">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n        <ul class="paginate pull-right">\n          <li class="link cursor-pointer" *ngIf="prev_page">\n            <a (click)="gotoPage(prev_page)">\n              Previous\n            </a>\n          </li>\n          <ng-container *ngFor="let x of counter(totalPages); let i = index">\n            <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n          </ng-container>\n          <li class="link cursor-pointer" *ngIf="next_page">\n            <a (click)="gotoPage(next_page)">\n              Next\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</section>'},HZQ3:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-15">\n        <div class="col-xl-auto offset-xl-2">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary" (click)="goBack(\'go_back\', \'medicine_create\')">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-15">\n        <div class="col-xl-8 offset-xl-2">\n            <h1 class="heading">Add new medicine</h1>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl-8 offset-xl-2">\n            <div class="container-card view-record">\n                <form [formGroup]="medicineForm">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Medicine Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="medicine"/>\n                                    <ng-container *ngIf="medicineForm.controls.medicine.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.medicine.hasError(\'required\')">Medicine name is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group row">\n                                    <div class="col-12">\n                                        <label class="text-secondary">Unit <span class="required">*</span></label>\n                                    </div>\n                                    <div class="col-10">\n                                        <mat-select class="btn btn-drop-down btn-block text-left mb-10" formControlName="unit_id" placeholder="Select a unit of measurement">\n                                            <mat-option *ngFor="let unit of units" [value]="unit.id">{{ unit.unit }}</mat-option>\n                                        </mat-select>\n                                    </div>\n                                    <div class="col-2 pl-0">\n                                        <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()">\n                                            <i class="icon-add"></i>\n                                        </button>\n                                    </div>\n                                    <ng-container *ngIf="medicineForm.controls.unit_id.touched">\n                                        <div class="col-12">\n                                            <p class="text-danger" *ngIf="medicineForm.controls.unit_id.hasError(\'required\')">Unit is required</p>\n                                        </div>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Net weight <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="net_weight" placeholder="0"/>\n                                    <ng-container *ngIf="medicineForm.controls.net_weight.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.net_weight.hasError(\'required\')">Net weight is required</p>\n                                        <p class="text-danger" *ngIf="medicineForm.controls.net_weight.hasError(\'min\')">Net weight must not be less than 0</p>\n                                        <p class="text-danger" *ngIf="medicineForm.controls.net_weight.hasError(\'max\')">Net weight must not exceed 10 digits</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">No. of Orders <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="pieces" placeholder="0"/>\n                                        <div class="input-group-append">\n                                            <span class="input-group-text mb-10">pcs</span>\n                                        </div>\n                                    </div>\n                                    <ng-container *ngIf="medicineForm.controls.pieces.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.pieces.hasError(\'required\')">Number of orders is required</p>\n                                        <p class="text-danger" *ngIf="medicineForm.controls.pieces.hasError(\'min\')">Number of orders must not be less than 0</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group p-relative">\n                                    <label class="text-secondary">Delivery Date <span class="required">*</span></label>\n                                    <input matInput [max]="max_date" [matDatepicker]="delivery_date_picker" placeholder="mm/dd/yyyy" formControlName="delivery_date" class="form-control mb-10">\n                                    <mat-datepicker-toggle matSuffix [for]="delivery_date_picker" class="p-absolute r-0 t-30"></mat-datepicker-toggle>\n                                    <mat-datepicker #delivery_date_picker></mat-datepicker>\n                                    <ng-container *ngIf="medicineForm.controls.delivery_date.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.delivery_date.hasError(\'required\')">Delivery date is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Unit Price <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <div class="input-group-prepend">\n                                            <span class="input-group-text mb-10">Php</span>\n                                        </div>\n                                        <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="unit_price" placeholder="0.00"/>\n                                    </div>\n                                    <ng-container *ngIf="medicineForm.controls.unit_price.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.unit_price.hasError(\'required\')">Price is required</p>\n                                        <p class="text-danger" *ngIf="medicineForm.controls.unit_price.hasError(\'min\')">Price must not be less than 0</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group p-relative">\n                                    <label class="text-secondary">Expiration Date <span class="required">*</span></label>\n                                    <input matInput [min]="min_date" [matDatepicker]="expiration_date_picker" placeholder="mm/dd/yyyy" formControlName="expiration_date" class="form-control mb-10">\n                                    <mat-datepicker-toggle matSuffix [for]="expiration_date_picker" class="p-absolute r-0 t-30"></mat-datepicker-toggle>\n                                    <mat-datepicker #expiration_date_picker></mat-datepicker>\n                                    <ng-container *ngIf="medicineForm.controls.expiration_date.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.expiration_date.hasError(\'required\')">Expiration date is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-12">\n                                <div class="form-group">\n                                    <label class="text-secondary">Remarks</label>\n                                    <textarea class="form-control mb-10" rows="3" maxlength="250" formControlName="remarks"></textarea>\n                                    <ng-container *ngIf="medicineForm.controls.remarks.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.remarks.hasError(\'maxlength\')">Remarks should not exceed 250 characters</p>\n                                    </ng-container>\n                                    <p class="text-right text-secondary">{{ medicineForm.controls.remarks.value.length }}/250</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 ml-xl-auto ml-lg-auto ml-md-auto">\n                                <button type="button" mat-flat-button class="btn btn-clear btn-block" (click)="goBack(\'form_cancel\', \'medicine_create\')">\n                                    Cancel\n                                </button>\n                            </div>\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6">\n                                <button type="submit" mat-flat-button class="btn btn-primary btn-block" (click)="openModal(medicineForm.value, \'medicine_save\')" [disabled]="!medicineForm.valid">\n                                    <i class="icon-add"></i>\n                                    <span class="ml-15">Add Item</span>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>'},HeGO:function(t,e,n){"use strict";n.r(e),e.default=".fixed-div {\n  position: fixed;\n  bottom: 0;\n  /* right: 0; */\n  width: 20%;\n  height: 15%;\n  left: 65%;\n}"},HijM:function(t,e,n){"use strict";n.r(e),e.default=""},Izxn:function(t,e,n){"use strict";n.r(e),e.default=""},J3Zg:function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="row">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <h3 class="mt-25">Gapan Fresh Eggs, Inc.</h3>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <h5 class="mb-30">Egg Price Report</h5>\n            </div>\n        </div>\n        <div class="row pb-10 ml-0 mr-0 border-bottom">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14">Prepared by:</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14 fw-500">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                <p class="mb-0 fs-14">Date:</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14 fw-500">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n            </div>\n        </div>\n        \n        <ng-container *ngIf="visible_columns.length > 1">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <table>\n                        <thead>\n                            <tr>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible && th.canToggle" class="p-10 fs-12">\n                                    {{ th.label }}\n                                </th>\n                                </ng-container>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <ng-container *ngIf="isLoaded && items.length > 0">\n                                <tr *ngFor="let item of items; let i = index" [ngClass]="{\'break-now\' : (i + 1) % 11 == 0}">\n                                    <td *ngIf="ths[0].isVisible" class="p-10 fs-12">{{ item.egg_type_type }}</td>\n                                    <td *ngIf="ths[1].isVisible" class="p-10 fs-12">₱ {{ item.per_piece | number : \'1.2-2\' }}</td>\n                                    <td *ngIf="ths[2].isVisible" class="p-10 fs-12">₱ {{ item.per_tray | number : \'1.2-2\' }}</td>\n                                    <td *ngIf="ths[3].isVisible" class="p-10 fs-12">₱ {{ item.per_case | number : \'1.2-2\' }}</td>\n                                    <td *ngIf="ths[4].isVisible" class="p-10 fs-12">{{ item.updated_at | date: \'MM/dd/yyyy\' }}</td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="!isLoaded">\n                                <tr>\n                                    <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                    <ngx-skeleton-loader [theme]="{\n                                        \'border-radius\' : \'5px\',\n                                        \'margin-bottom\' : \'0px\',\n                                        \'height\' : \'20px\'\n                                    }"></ngx-skeleton-loader>\n                                    </td>\n                                </tr>\n                                </ng-container>\n                                <ng-container *ngIf="isLoaded && items.length == 0">\n                                <tr>\n                                    <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                </tr>\n                                </ng-container>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n            <div class="row">\n                <div class="col-12 text-center">\n                <p class="mb-0">Please choose egg type</p>\n                </div>\n            </div>\n        </ng-container>\n        \n        <div class="row ml-0 mr-0 mt-20">\n            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                        <p class="fw-500 fs-14">Prepared By:</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                        <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                        <hr class="m-0">\n                        <p class="fs-12">Signature over Printed Name</p>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                        <p class="fw-500 fs-14">Approved By:</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                        <p class="mb-0 h-22"></p>\n                        <hr class="m-0">\n                        <p class="fs-12">Signature over Printed Name</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},JMJj:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-15">\n      <div class="col-auto">\n        <button type="button" mat-flat-button class="btn btn-sm btn-secondary btn-block" (click)="goBack()">\n          <i class="icon-back"></i>\n          <span class="ml-15">Go back</span>\n        </button>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-3 col-3 ml-auto">\n        <button mat-flat-button class="btn btn-primary btn-block" [routerLink]="[\'/transactions/payments/print\', order_id, \'view\']">\n          <i class="icon-add"></i>\n          <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">Generate Forms</span>\n        </button>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-3 col-3">\n        <button mat-flat-button class="btn btn-primary btn-block" (click)="openModal(null, \'attachment_create\')">\n          <i class="icon-add"></i>\n          <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">Upload Signed Form</span>\n        </button>\n      </div>\n    </div>\n    <div class="row mb-15">\n      <div class="col-12">\n          <h1 class="heading">View Payment</h1>\n          <ng-container *ngIf="showtimeago">\n            <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n            <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n                \'border-radius\' : \'5px\',\n                \'margin-bottom\' : \'10px\',\n                \'height\' : \'20px\'\n            }"></ngx-skeleton-loader>\n          </ng-container>\n      </div>\n    </div>\n    <div class="container-card p-30 mb-25" *ngIf="show_filter">\n      <div class="row">\n        <div class="col-12">\n          <h6 class="card-heading">Filters</h6>\n        </div>\n      </div>\n      <div class="row">\n        <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n          <div class="row">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n              <div class="form-group">\n                <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? \'Date - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date\' }}\n                  <i class="icon-arrow-drop-down ml-5"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n          <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n              Clear Filters\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="container-card p-30 mb-30">\n      <div class="row mb-25">\n        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">\n          <p class="mini-heading mb-10">Official Receipts</p>\n        </div>\n        \x3c!-- <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n          <div class="form-group">\n            <div class="inner-group in-line">\n              <label class="mr-15">Show</label>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                  <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n              </mat-select>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                  <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n              </mat-select>\n              <label>of {{ totalItems | number }} entries</label>\n            </div>\n          </div>\n        </div> --\x3e\n        \x3c!-- <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n            <div class="form-group">\n                <div class="inner-group">\n                  <mat-select multiple class="btn btn-block btn-primary multiple-select" (selectionChange)="changeColumnVisibility($event)" placeholder="Column Visibility" [(ngModel)]="visible_columns" >\n                    <mat-select-trigger>Column Visibility</mat-select-trigger>\n                    <ng-container *ngFor="let item of ths; let i = index">\n                      <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                    </ng-container>\n                  </mat-select>\n                </div>\n            </div>\n        </div> --\x3e\n        \x3c!-- <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n          <div class="form-group">\n            <div class="inner-group search">\n              <i class="icon-search"></i>\n              <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n                (keydown.enter)="searchItem()" />\n            </div>\n          </div>\n        </div> --\x3e\n        \x3c!-- <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n          <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n              <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n              <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n            </button>\n          </div>\n        </div> --\x3e\n      </div>\n      <ng-container *ngIf="visible_columns.length > 1">\n        <div class="data-table p-relative table-listing" style="overflow: auto;">\n          <table>\n            <thead>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </thead>\n            <tbody>\n              <ng-container *ngIf="isLoaded && items.length > 0">\n                <tr *ngFor="let item of items; let i = index">\n                    <td *ngIf="ths[0].isVisible">{{ item.attachment_no }}</td>\n                    <td *ngIf="ths[1].isVisible">{{ item.payment_amount }}</td>\n                    <td *ngIf="ths[2].isVisible">{{ item.user_profile_first_name }} {{ item.user_profile_last_name }}</td>\n                    <td *ngIf="ths[3].isVisible">{{ item.updated_at | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                    <td *ngIf="ths[4].isVisible">\n                        <button type="button" mat-flat-button class="btn btn-clear" (click)="openModal(item, \'attachment_update\')">\n                            <i class="icon-datatables-view"></i>\n                            View\n                        </button>\n                        <button mat-flat-button class="btn btn-clear" (click)="openModal(item, \'attachment_delete\')">\n                          <i class="icon-datatables-delete"></i>\n                          Delete\n                        </button>\n                    </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="!isLoaded">\n                <tr>\n                  <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                    <ngx-skeleton-loader [theme]="{\n                      \'border-radius\' : \'5px\',\n                      \'margin-bottom\' : \'0px\',\n                      \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                  </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="isLoaded && items.length == 0">\n                <tr>\n                  <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                </tr>\n              </ng-container>\n            </tbody>\n            <tfoot>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </ng-container>\n      <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n        <div class="row">\n          <div class="col-12 text-center">\n            <p class="mb-0">Please choose column visibility</p>\n          </div>\n        </div>\n      </ng-container>\n      \x3c!-- <div class="row mt-35">\n        <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n          <div class="form-group">\n            <div class="inner-group in-line">\n              <label class="mr-15">Show</label>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                  <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n              </mat-select>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                  <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n              </mat-select>\n              <label>of {{ totalItems | number }} entries</label>\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n          <ul class="paginate pull-right">\n            <li class="link" *ngIf="prev_page">\n                <a (click)="gotoPage(prev_page)">\n                    Previous\n                </a>\n            </li>\n            <ng-container *ngFor="let x of counter(totalPages); let i = index">\n              <li (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n            </ng-container>\n            \n            <li class="link" *ngIf="next_page">\n                <a (click)="gotoPage(next_page)">\n                    Next\n                </a>\n            </li>\n          </ul>\n        </div>\n      </div> --\x3e\n    </div>\n    <div class="container-card p-30">\n      <div class="row mb-25">\n        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">\n          <p class="mini-heading mb-10">Signed Forms</p>\n        </div>\n        \x3c!-- <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n          <div class="form-group">\n            <div class="inner-group in-line">\n              <label class="mr-15">Show</label>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                  <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n              </mat-select>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                  <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n              </mat-select>\n              <label>of {{ totalItems | number }} entries</label>\n            </div>\n          </div>\n        </div> --\x3e\n        \x3c!-- <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n            <div class="form-group">\n                <div class="inner-group">\n                  <mat-select multiple class="btn btn-block btn-primary multiple-select" (selectionChange)="changeColumnVisibility($event)" placeholder="Column Visibility" [(ngModel)]="visible_columns" >\n                    <mat-select-trigger>Column Visibility</mat-select-trigger>\n                    <ng-container *ngFor="let item of ths; let i = index">\n                      <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                    </ng-container>\n                  </mat-select>\n                </div>\n            </div>\n        </div> --\x3e\n        \x3c!-- <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n          <div class="form-group">\n            <div class="inner-group search">\n              <i class="icon-search"></i>\n              <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n                (keydown.enter)="searchItem()" />\n            </div>\n          </div>\n        </div> --\x3e\n        \x3c!-- <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n          <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n              <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n              <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n            </button>\n          </div>\n        </div> --\x3e\n      </div>\n      <ng-container *ngIf="visible_columns_others.length > 1">\n        <div class="data-table p-relative table-listing" style="overflow: auto;">\n          <table>\n            <thead>\n              <tr>\n                <ng-container *ngFor="let th of ths_others; let i = index">\n                  <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </thead>\n            <tbody>\n              <ng-container *ngIf="isLoaded && items_others.length > 0">\n                <tr *ngFor="let item of items_others; let i = index">\n                    <td *ngIf="ths[0].isVisible">{{ item.type_label }}</td>\n                    <td *ngIf="ths[1].isVisible">{{ item.user_profile_first_name }} {{ item.user_profile_last_name }}</td>\n                    <td *ngIf="ths[2].isVisible">{{ item.updated_at | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                    <td *ngIf="ths[3].isVisible">\n                        <button type="button" mat-flat-button class="btn btn-clear" (click)="openModal(item, \'attachment_update\')">\n                            <i class="icon-datatables-view"></i>\n                            View\n                        </button>\n                        <button mat-flat-button class="btn btn-clear" (click)="openModal(item, \'attachment_delete\')">\n                          <i class="icon-datatables-delete"></i>\n                          Delete\n                        </button>\n                    </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="!isLoaded">\n                <tr>\n                  <td class="text-uppercase" *ngFor="let x of counter(visible_columns_others.length); let i = index">\n                    <ngx-skeleton-loader [theme]="{\n                      \'border-radius\' : \'5px\',\n                      \'margin-bottom\' : \'0px\',\n                      \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                  </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="isLoaded && items_others.length == 0">\n                <tr>\n                  <td [attr.colspan]="visible_columns_others.length" class="text-center">No Results found</td>\n                </tr>\n              </ng-container>\n            </tbody>\n            <tfoot>\n              <tr>\n                <ng-container *ngFor="let th of ths_others; let i = index">\n                  <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </ng-container>\n      <ng-container *ngIf="isLoaded && visible_columns_others.length == 1">\n        <div class="row">\n          <div class="col-12 text-center">\n            <p class="mb-0">Please choose column visibility</p>\n          </div>\n        </div>\n      </ng-container>\n      \x3c!-- <div class="row mt-35">\n        <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n          <div class="form-group">\n            <div class="inner-group in-line">\n              <label class="mr-15">Show</label>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                  <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n              </mat-select>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                  <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n              </mat-select>\n              <label>of {{ totalItems | number }} entries</label>\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n          <ul class="paginate pull-right">\n            <li class="link" *ngIf="prev_page">\n                <a (click)="gotoPage(prev_page)">\n                    Previous\n                </a>\n            </li>\n            <ng-container *ngFor="let x of counter(totalPages); let i = index">\n              <li (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n            </ng-container>\n            \n            <li class="link" *ngIf="next_page">\n                <a (click)="gotoPage(next_page)">\n                    Next\n                </a>\n            </li>\n          </ul>\n        </div>\n      </div> --\x3e\n    </div>\n  </section>'},Jpie:function(t,e,n){"use strict";n.r(e),e.default=""},KF12:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <button type="button" mat-flat-button class="btn btn-secondary" (click)="goBack()">\n                <i class="material-icons">arrow_back</i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <h1 class="heading">Tray Inventory/Stocks</h1>\n            <p class="sub-heading mb-8">Date: <strong>{{ items.created_at | date: \'MMMM dd, yyyy\' }}</strong></p>\n            <p class="sub-heading mb-8">Warehouseman: <strong>{{ items.name }}</strong></p>\n            <ng-container *ngIf="showtimeago">\n              <p class="sub-heading italic" *ngIf="activity && activity.created_at">last updated {{ activity.created_at | timeago }}</p>\n              <ngx-skeleton-loader *ngIf="!activity || !activity.created_at" [theme]="{\n                  \'border-radius\' : \'5px\',\n                  \'margin-bottom\' : \'10px\',\n                  \'height\' : \'20px\'\n              }"></ngx-skeleton-loader>\n            </ng-container>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n          <button type="button" mat-flat-button class="btn btn-primary btn-block" [disabled]="!isLoaded">\n            <i class="icon-download"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n            <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n          </button>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6">\n          <button type="button" mat-flat-button class="btn btn-primary btn-block" [disabled]="!isLoaded">\n            <i class="icon-download"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as CSV</span>\n            <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">CSV</span>\n          </button>\n        </div>\n    </div>\n    <div class="row mb-35">\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 mb-15">\n            <div class="container-card p-20">\n                <p>Beginning stocks</p>\n                <h1 class="heading">{{ items.beginning_stock | number  }}</h1>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 mb-15">\n            <div class="container-card p-20">\n                <p>In/Return of Stocks</p>\n                <h1 class="heading">{{ items.returned | number  }}</h1>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 mb-15">\n            <div class="container-card p-20">\n                <p>No. of Out/Sales</p>\n                <h1 class="heading">{{ items.number_of_out_sales | number  }}</h1>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 mb-15">\n            <div class="container-card p-20">\n                <p>Total Remaining for this day</p>\n                <h1 class="heading">{{ items.total_remaining | number  }}</h1>\n            </div>\n        </div>\n    </div>\n    <div class="container-card p-30">\n      <ng-container *ngIf="visible_columns.length > 0">\n        <div class="data-table p-relative table-listing" style="overflow: auto;">\n          <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n            <thead>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </thead>\n            <tbody>\n              <ng-container *ngIf="isLoaded && items.tray_inventory_report.length > 0">\n                <tr *ngFor="let item of items.tray_inventory_report; let i = index">\n                  <td>{{ item.tray_type.type }}</td>\n                  <td>{{ item.total_end > 0 ? \'Available\' : \'Out of Stock\' }}</td>\n                  <td>{{ item.last_data ? (item.last_data.total_end | number) : 0  }}</td>\n                  <td>{{ item.in_return | number }}</td>\n                  <td>{{ item.sorting | number }}</td>\n                  <td>{{ item.marketing | number }}</td>\n                  <td>{{ item.out_hiram | number }}</td>\n                  <td>{{ item.total_end }}</td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="!isLoaded">\n                <tr>\n                  <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                    <ngx-skeleton-loader [theme]="{\n                      \'border-radius\' : \'5px\',\n                      \'margin-bottom\' : \'0px\',\n                      \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                  </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="isLoaded && items.tray_inventory_report.length == 0">\n                <tr>\n                  <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                </tr>\n              </ng-container>\n            </tbody>\n            <tfoot>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </ng-container>\n      <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n        <div class="row">\n          <div class="col-12 text-center">\n            <p class="mb-0">Please choose column visibility</p>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </section>'},L8yz:function(t,e,n){"use strict";n.r(e),e.default=""},LRir:function(t,e,n){"use strict";n.r(e),e.default=""},LbD4:function(t,e,n){"use strict";n.r(e),e.default='<div class="row">\n    <div class="col-12">\n        <h6 class="mini-heading">{{ modal_title }}</h6>\n    </div>\n</div>\n<form [formGroup]="houseForm" (ngSubmit)="submit()">\n    <ng-container *ngIf="action == \'delete\'">\n        <div class="row">\n            <div class="col-12">\n                <div class="form-group">\n                    <label class="text-secondary">{{ modal_message }}</label>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf="action != \'delete\'">\n        <div class="row">\n            <div class="col-12">\n                <div class="form-group">\n                    <label class="text-secondary">Enter House/Building no. <span class="required">*</span></label>\n                    <input type="number" formControlName="house_name" class="form-control mb-10"/>\n                    <ng-container *ngIf="houseForm.controls.house_name.touched">\n                        <p class="text-danger" *ngIf="houseForm.controls.house_name.hasError(\'required\')">House name is required</p>\n                        <p class="text-danger" *ngIf="houseForm.controls.house_name.hasError(\'pattern\')">House/Building no. must be a whole number</p>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-12">\n                <div class="form-group">\n                    <label class="text-secondary">Enter Chicken Capacity <span class="required">*</span></label>\n                    <input type="number" formControlName="capacity" class="form-control mb-10"/>\n                    <ng-container *ngIf="houseForm.controls.capacity.touched">\n                        <p class="text-danger" *ngIf="houseForm.controls.capacity.hasError(\'required\')">Capacity is required</p>\n                        <p class="text-danger" *ngIf="houseForm.controls.capacity.hasError(\'min\') && !item">Capacity must be a whole number</p>\n                        <p class="text-danger" *ngIf="houseForm.controls.capacity.hasError(\'min\') && item && item.beginning">Capacity must be more than the beginning bird count from the existing daily report</p>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <div class="row">\n        <ng-container *ngIf="action==\'create\' || action==\'edit\' || (action==\'delete\' && item.canDelete)">\n            <div class="col-6 text-right">\n                <button type="button" mat-flat-button class="btn btn-sm btn-clear" (click)="closeModal()" [disabled]="isLoading">Cancel</button>\n            </div>\n            <div class="col-6">\n                <button type="submit" mat-flat-button class="btn btn-sm btn-block" [ngClass]="{\'btn-primary\' : action != \'delete\', \'btn-danger\' : action == \'delete\' }" [disabled]="!houseForm.valid || isLoading">{{ modal_primary_button }}</button>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="action == \'delete\' && !item.canDelete">\n            <div class="col-6 ml-auto">\n                <button type="button" mat-flat-button class="btn btn-sm btn-block btn-primary" (click)="closeModal()">{{ modal_primary_button }}</button>\n            </div>\n        </ng-container>\n    </div>\n</form>\n'},LyMw:function(t,e,n){"use strict";n.r(e),e.default=""},MQ7m:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-15">\n        <div class="col-xl-auto offset-xl-2">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary" (click)="goBack(\'go_back\', \'staff_create\')">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-15">\n        <div class="col-xl-8 offset-xl-2">\n            <h1 class="heading">Add new staff</h1>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl-8 offset-xl-2">\n            <div class="container-card view-record">\n                <form [formGroup]="userForm">\n                    <div class="p-30">\n                        <h1 class="heading">Basic Info.</h1>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Select a role <span class="required">*</span></label>\n                                    <mat-select class="btn btn-drop-down btn-block text-left mb-10" formControlName="role" placeholder="Select staff role" (selectionChange)="changeRole($event)">\n                                        <mat-option *ngFor="let role of roles" [value]="role.value">{{ role.label }}</mat-option>\n                                    </mat-select>\n                                    <ng-container *ngIf="userForm.controls.role.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.role.hasError(\'required\')">Staff role is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">First Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="first_name" maxlength="50"/>\n                                    <ng-container *ngIf="userForm.controls.first_name.touched">\n                                        <p class="text-danger"\n                                            *ngIf="userForm.controls.first_name.hasError(\'required\')">First name is\n                                            required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.first_name.hasError(\'maxLength\')">First name must not exceed 50 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Last Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="last_name" maxlength="50"/>\n                                    <ng-container *ngIf="userForm.controls.last_name.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.last_name.hasError(\'required\')">\n                                            Last name is required</p>\n                                            <p class="text-danger" *ngIf="userForm.controls.last_name.hasError(\'maxLength\')">Last name must not exceed 50 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Username <span\n                                            class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="username" maxlength="50"/>\n                                    <ng-container *ngIf="userForm.controls.username.touched">\n                                        <p class="text-danger"\n                                            *ngIf="userForm.controls.username.hasError(\'required\')">Username is required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.username.hasError(\'maxLength\')">Username must not exceed 50 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6" *ngIf="userForm.controls.role.value == 4 || userForm.controls.role.value == 5">\n                                <div class="form-group">\n                                    <label class="text-secondary">Email <span\n                                            class="required">*</span></label>\n                                    <input class="form-control mb-10" type="email" formControlName="email" maxlength="50" minlength="6"/>\n                                    <ng-container *ngIf="userForm.controls.email.touched">\n                                        <p class="text-danger"\n                                            *ngIf="userForm.controls.email.hasError(\'required\')">Email is required</p>\n                                            <p class="text-danger"\n                                            *ngIf="userForm.controls.email.hasError(\'pattern\')">Email is invalid</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.email.hasError(\'maxLength\')">Email must not exceed 50 characters</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.email.hasError(\'minLength\')">Email must not contain at least 6 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Mobile Phone <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <div class="input-group-prepend">\n                                            <span class="input-group-text mb-10">+63</span>\n                                        </div>\n                                        <input type="tel" class="form-control mb-10" formControlName="number" placeholder="xxx xxx xxxx" maxlength="10"/>\n                                    </div>\n                                    <ng-container *ngIf="userForm.controls.number.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'required\')">\n                                            Mobile phone is required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'pattern\')">\n                                            Mobile phone is invalid</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'maxlength\')">\n                                            Mobile phone must not exceed 10 digits</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'minlength\')">\n                                            Mobile phone must be atleast 10 digits</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Address <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="location" maxlength="60"/>\n                                    <ng-container *ngIf="userForm.controls.location.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.location.hasError(\'required\')">\n                                            Address is required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.location.hasError(\'maxlength\')">Address must not exceed 60 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="p-30">\n                        <h1 class="heading mb-30">Profile Photo</h1>\n                        <div class="row">\n                            <div class="col-xl-2 col-lg-2 col-md-2 col-sm-3 col-3">\n                                <img *ngIf="!isProfileImageLoaded" class="avatar img-responsive" src="../../../../../assets/images/profile.svg">\n                                <image-cropper \n                                    class="avatar img-responsive {{isProfileImageLoaded ? \'\' : \'d-none\' }}"\n                                    [imageChangedEvent]="profilePhoto"\n                                    [maintainAspectRatio]="true"\n                                    [aspectRatio]="5 / 5"\n                                    [resizeToWidth]="100"\n                                    format="png,jpg,jpeg,ico"\n                                    (imageCropped)="imageProfilePhotoCropped($event)"\n                                    (imageLoaded)="imageProfileLoaded()"\n                                    [autoCrop]= "true"\n                                ></image-cropper>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-10 col-sm-9 col-9">\n                                <p>Choose a file to upload:</p>\n                                <div class="form-group row">\n                                    <input id="file-upload" class="d-none" type="file" (change)="fileChange($event)" accept="image/jpeg, image/png"/>\n                                    <div class="col-6">\n                                        <label for="file-upload" mat-flat-button class="btn btn-primary btn-block">\n                                            Choose a file\n                                        </label>\n                                    </div>\n                                    <div class="col-6 flex-align-center" *ngIf="!isProfileImageLoaded">\n                                        <p class="m-0 font-italic">No file chosen</p>\n                                    </div>\n                                </div>\n                                <p class="text-danger" *ngIf="profileUploadWrongFile">Image is not valid</p>\n                                <p class="text-danger" *ngIf="uploadMaxLimitReached">Image must not exceed 1MB</p>\n                            </div>\n                            <div class="col-xl-4 col-lg-4 col-md-12">\n                                <p class="note fs-12">Maximum image file size is 1MB. Try resizing it to atleast 500x500 px in resolution.</p>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 ml-xl-auto ml-lg-auto ml-md-auto">\n                                <button type="button" mat-flat-button class="btn btn-clear btn-block"\n                                    (click)="goBack(\'go_back\', \'staff_create\')">\n                                    Back\n                                </button>\n                            </div>\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6">\n                                <button type="submit" mat-flat-button class="btn btn-primary btn-block"\n                                    (click)="openModal(userForm.value, \'user_add\')" [disabled]="!userForm.valid">\n                                    <i class="icon-add"></i>\n                                    <span class="ml-15">Add new staff</span>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>'},NIyI:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <h1 class="heading">Harvest Performance Report</h1>\n            \x3c!-- <ng-container *ngIf="showtimeago">\n                <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n                <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'10px\',\n                    \'height\' : \'20px\'\n                }"></ngx-skeleton-loader>\n            </ng-container> --\x3e\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()" [disabled]="!isLoaded">\n                <i class="icon-download"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n                <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n            </button>\n        </div>\n    </div>\n    <div class="container-card p-30">\n        <div class="row">\n            <div class="col-xl-auto col-lg-auto col-md-12 col-sm-12 col-12">\n                <p class="mb-10">Harvested production per house/building</p>\n                <ng-container *ngIf="showtimeago">\n                    <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n                    <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n                        \'border-radius\' : \'5px\',\n                        \'margin-bottom\' : \'10px\',\n                        \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                </ng-container>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-12 col-sm-12 col-12 ml-auto">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                        <div class="form-group mb-0">\n                            <div class="inner-group in-line">\n                                <label class="mr-15">Show:</label>\n\n                                <mat-select multiple class="btn btn-drop-down btn-block text-left" (selectionChange)="changeColumnVisibility($event)" placeholder="All house/building" [(ngModel)]="visible_columns" >\n                                    <mat-select-trigger>All house/building</mat-select-trigger>\n                                    <ng-container *ngFor="let item of ths; let i = index">\n                                        <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                                    </ng-container>\n                                </mat-select>\n\n                                \x3c!-- <mat-select multiple class="btn btn-drop-down text-left" placeholder="All egg type" (selectionChange)="eggTypeSelected($event, i)" [(ngModel)]="selected_eggs">\n                                    <mat-select-trigger>All egg type</mat-select-trigger>\n                                    <mat-option *ngFor="let egg_type of egg_type_options" [value]="egg_type.id">{{ egg_type.type }}</mat-option>\n                                </mat-select> --\x3e\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group mb-0">\n                            <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                            <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? (from | date: \'MMMM dd, yyyy\') + \' - \' + (to | date: \'MMMM dd, yyyy\') : \'Choose harvest dates\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div>\n                    \n                </div>\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto" *ngIf="from && to">\n                        <button type="button" mat-flat-button class="btn btn-clear btn-sm" (click)="clearFilters()">Reset Filter</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="row mb-30">\n            \x3c!-- <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-10">Overall Harvested Eggs</p>\n                <h1 class="heading">{{ overall_harvested_eggs | number }}</h1>\n            </div> --\x3e\n        </div>\n        <div class="row mb-30" *ngIf="isLoaded && items.length > 0">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                <canvas baseChart \n                    [datasets]="barChartData"\n                    [labels]="barChartLabels"\n                    [options]="barChartOptions"\n                    [plugins]="barChartPlugins"\n                    [legend]="barChartLegend"\n                    [chartType]="barChartType">\n                </canvas>\n            </div>\n            <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p>All Dates</p>\n            </div>\n            <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n            </div>\n        </div>\n        <ng-container *ngIf="visible_columns.length > 1">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n                        <thead>\n                            <tr>\n                                <th class="sort" (click)="orderList(true, \'received_by_date\', order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    Date\n                                   \x3c!--  <i *ngIf="order.order_by_column == \'received_by_date\'" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != \'received_by_date\' }"></i> --\x3e\n                                </th>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                                </ng-container>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            <ng-container *ngIf="isLoaded && items.length > 0">\n                                <tr *ngFor="let item of items; let i = index">\n                                <td>{{ item.grouped_date | date: \'MM/dd/yyyy\' }}</td>\n                                <ng-container *ngFor="let item of item.house; let i = index">\n                                    <td *ngIf="ths[i].isVisible">{{ item && item.daily_sorting_report ? (item.daily_sorting_report.sum | number) : 0 }}</td>\n                                </ng-container>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="!isLoaded">\n                                <tr>\n                                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                    <ngx-skeleton-loader [theme]="{\n                                    \'border-radius\' : \'5px\',\n                                    \'margin-bottom\' : \'0px\',\n                                    \'height\' : \'20px\'\n                                    }"></ngx-skeleton-loader>\n                                </td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="isLoaded && items.length == 0">\n                                <tr>\n                                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                </tr>\n                            </ng-container>\n                            </tbody>\n                    </table>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n            <div class="row">\n                <div class="col-12 text-center">\n                <p class="mb-0">Please choose egg type</p>\n                </div>\n            </div>\n        </ng-container>\n        <div class="row mt-35">\n            <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12 ml-auto" *ngIf="totalPages > 1">\n                <ul class="paginate pull-right">\n                <li class="link cursor-pointer" *ngIf="prev_page">\n                    <a (click)="gotoPage(prev_page)">\n                        Previous\n                    </a>\n                </li>\n                <ng-container *ngFor="let x of counter(totalPages); let i = index">\n                    <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n                </ng-container>\n                \n                <li class="link cursor-pointer" *ngIf="next_page">\n                    <a (click)="gotoPage(next_page)">\n                        Next\n                    </a>\n                </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</section>'},NWxB:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary" (click)="goBack()">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <h1 class="heading">Fresh Eggs Stocks</h1>\n            <p class="sub-heading mb-8">Date: <strong>{{ dateToday | date: \'MMMM dd, yyyy\' }}</strong></p>\n            <ng-container *ngIf="showtimeago">\n              <p class="sub-heading italic" *ngIf="activity && activity.created_at">last updated {{ activity.created_at | timeago }}</p>\n              <ngx-skeleton-loader *ngIf="!activity || !activity.created_at" [theme]="{\n                  \'border-radius\' : \'5px\',\n                  \'margin-bottom\' : \'10px\',\n                  \'height\' : \'20px\'\n              }"></ngx-skeleton-loader>\n            </ng-container>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n          <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()" [disabled]="!isLoaded">\n            <i class="icon-download"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n            <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n          </button>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6">\n          <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportToCsv()" [disabled]="!isLoaded">\n            <i class="icon-download"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as CSV</span>\n            <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">CSV</span>\n          </button>\n        </div>\n    </div>\n    <div class="row mb-35">\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 mb-15">\n            <div class="container-card p-15 fs-14">\n                <p>Beginning stocks</p>\n                <h1 class="heading">{{ item.beginning_stocks | number }}</h1>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 mb-15">\n            <div class="container-card p-15 fs-14">\n                <p>Harvested Eggs for this day</p>\n                <h1 class="heading">{{ item.total_harvested | number }}</h1>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 mb-15">\n            <div class="container-card p-15 fs-14">\n                <p>No. of Waste/Sales</p>\n                <h1 class="heading">{{ item.waste_sales | number }}</h1>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 mb-15">\n            <div class="container-card p-15 fs-14">\n                <p>Total Remaining for this day</p>\n                <h1 class="heading">{{ item.total_remaining_stocks | number }}</h1>\n            </div>\n        </div>\n    </div>\n    <div class="container-card p-30">\n      <ng-container *ngIf="visible_columns.length > 0">\n        <div class="data-table p-relative table-listing" style="overflow: auto;">\n          <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n            <thead>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </thead>\n            <tbody>\n              <ng-container *ngIf="isLoaded && items.length > 0">\n                <tr *ngFor="let item of items; let i = index">\n                  <td>{{ item.egg_type.type }}</td>\n                  <td>\n                    <mat-chip-list>\n                      <mat-chip *ngIf="item.remaining > 0" color="primary">Available</mat-chip>\n                      <mat-chip *ngIf="item.remaining == 0" color="danger">Out of Stock</mat-chip>\n                    </mat-chip-list>\n                  </td>\n                  <td>{{ item.beginning ? (item.beginning | number) : 0  }}</td>\n                  <td>{{ item.harvested ? (item.harvested | number) : 0  }}</td>\n                  <td>{{ item.sales ? (item.sales | number) : 0  }}</td>\n                  <td>{{ item.remaining ? (item.remaining | number) : 0  }}</td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="!isLoaded">\n                <tr>\n                  <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                    <ngx-skeleton-loader [theme]="{\n                      \'border-radius\' : \'5px\',\n                      \'margin-bottom\' : \'0px\',\n                      \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                  </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="isLoaded && items.length == 0">\n                <tr>\n                  <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                </tr>\n              </ng-container>\n            </tbody>\n            <tfoot>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </ng-container>\n      <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n        <div class="row">\n          <div class="col-12 text-center">\n            <p class="mb-0">Please choose column visibility</p>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </section>'},Nah4:function(t,e,n){"use strict";n.r(e),e.default="p {\n  font-size: 16px;\n  color: #72787F;\n  text-transform: none;\n}\n\n.heading {\n  font-size: 24px;\n  font-weight: bold;\n  color: #1E2631;\n  text-transform: none;\n}\n\n.sub-heading {\n  color: #72787F;\n}\n\n.sub-heading.italic {\n  font-style: italic;\n}\n\n.sub-heading strong {\n  color: #1E2631;\n}\n\n.mini-heading {\n  font-size: 20px;\n  font-weight: 500;\n  color: #1E2631;\n  text-transform: none;\n}\n\n.card-heading {\n  font-size: 13px;\n  font-weight: normal;\n  text-transform: uppercase;\n  color: #72787F;\n}\n\n.sidebar {\n  color: #1E2631;\n}\n\n.sidebar ul li {\n  font-size: 16px;\n}\n\n.sidebar ul li a.main-nav {\n  color: #72787F;\n}\n\n.sidebar ul li a.main-nav.sub {\n  font-size: 14px;\n}\n\n.sidebar ul li a.main-nav:hover {\n  font-weight: 500;\n  color: #1E2631;\n}\n\n.sidebar ul li.active a {\n  font-weight: 500;\n  color: #1E2631;\n}\n\nmat-checkbox label {\n  font-size: 16px !important;\n}\n\n.vertical-text {\n  transform: rotate(-90deg);\n  -webkit-transform: rotate(-90deg);\n  -moz-transform: rotate(-90deg);\n  -ms-transform: rotate(-90deg);\n  -o-transform: rotate(-90deg);\n}\n\n.vertical-text-full {\n  width: -webkit-max-content;\n  width: -moz-max-content;\n  width: max-content;\n  position: absolute;\n  left: -25%;\n  top: 50%;\n}\n\n.select-type {\n  padding: 12px 31px;\n  background: #DDE1E5;\n  border-radius: 2px 0px 0px 2px;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  border-bottom: 2px solid #1E2631;\n}\n\n.select-type p {\n  color: #1E2631;\n}\n\n.alt {\n  /* background: color(container, border) !important; */\n  background: rgba(229, 229, 229, 0.4) !important;\n}"},NmWE:function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="border">\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h5 class="mb-30">Total Sales by Egg Size</h5>\n                </div>\n            </div>\n            <div class="row pb-10 mb-30 ml-0 mr-0 border-bottom">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">Prepared by:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                    <p class="mb-0 fs-14">Date:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            \n            <div class="row mb-30 ml-0 mr-0 break-now" *ngIf="isLoaded && items.length > 0">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                    <canvas baseChart \n                        [datasets]="barChartData"\n                        [labels]="barChartLabels"\n                        [options]="barChartOptions"\n                        [plugins]="barChartPlugins"\n                        [legend]="barChartLegend"\n                        [chartType]="barChartType">\n                    </canvas>\n                </div>\n                <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>All Dates</p>\n                </div>\n                <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <ng-container *ngIf="visible_columns.length > 1">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <div class="data-table p-relative table-listing" style="overflow: auto;">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Date</th>\n                                    <ng-container *ngFor="let th of ths; let i = index">\n                                    <th *ngIf="th.isVisible">\n                                        {{ th.label }}\n                                    </th>\n                                    </ng-container>\n                                </tr>\n                            </thead>\n    \n                            <tbody>\n                                <ng-container *ngIf="isLoaded && items.length > 0">\n                                    <tr *ngFor="let item of items; let i = index">\n                                    <td>{{ item.grouped_date | date: \'MM/dd/yyyy\' }}</td>\n                                    <ng-container *ngFor="let item of item.egg_types; let i = index">\n                                        <td *ngIf="ths[i].isVisible">{{ item.total | number }}</td>\n                                    </ng-container>\n                                    </tr>\n                                </ng-container>\n                                <ng-container *ngIf="!isLoaded">\n                                    <tr>\n                                    <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                        <ngx-skeleton-loader [theme]="{\n                                        \'border-radius\' : \'5px\',\n                                        \'margin-bottom\' : \'0px\',\n                                        \'height\' : \'20px\'\n                                        }"></ngx-skeleton-loader>\n                                    </td>\n                                    </tr>\n                                </ng-container>\n                                <ng-container *ngIf="isLoaded && items.length == 0">\n                                    <tr>\n                                    <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                    </tr>\n                                </ng-container>\n                                </tbody>\n                        </table>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n                <div class="row">\n                    <div class="col-12 text-center">\n                    <p class="mb-0">Please choose egg type</p>\n                    </div>\n                </div>\n            </ng-container>\n            \n            <div class="row ml-0 mr-0 mt-20 border-bottom">\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Prepared By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Approved By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 h-22"></p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},"ODH/":function(t,e,n){"use strict";n.r(e),e.default='<div class="col-6">\n    <button type="button" mat-flat-button class="btn btn-primary btn-block">\n      <i class="icon-download"></i>\n      <span class="ml-15">Download as PDF</span>\n    </button>\n  </div>\n  <div class="col-6">\n    <button type="button" mat-flat-button class="btn btn-primary btn-block">\n      <i class="icon-download"></i>\n      <span class="ml-15">Download as CSV</span>\n    </button>\n  </div>'},PcXm:function(t,e,n){"use strict";n.r(e),e.default=".order-summary {\n  background-color: #EAEDF0;\n}\n\nhr.h-2 {\n  background-color: #72787F;\n}"},PoNx:function(t,e,n){"use strict";n.r(e),e.default='<div class="row">\n    <div class="col-12">\n        <h6 class="mini-heading">{{ modal_title }}</h6>\n    </div>\n</div>\n<form [formGroup]="attachmentForm" (ngSubmit)="openModal()">\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">Attachment Type</label>\n                <mat-select class="btn btn-drop-down btn-block text-left" formControlName="type" (selectionChange)="changeType($event)" placeholder="Choose attachment type">\n                    <mat-option *ngFor="let paymentattachment of paymentattachment_options" [value]="paymentattachment.value">{{ paymentattachment.label }}</mat-option>\n                </mat-select>\n            </div>\n        </div>\n    </div>\n    <div class="row" *ngIf="attachmentForm.controls.type.value == 1">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">Enter Official Receipt no. <span class="required">*</span></label>\n                <input type="text" formControlName="attachment_no" class="form-control mb-10"/>\n                <ng-container *ngIf="attachmentForm.controls.attachment_no.touched">\n                    <p class="text-danger" *ngIf="attachmentForm.controls.attachment_no.hasError(\'required\')">Official receipt no. is required</p>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">{{ type_label }} <span class="required">*</span></label>\n                <div class="row">\n                    <div class="col-12 mb-10" [ngClass]="{ \'d-none\' : !isPhotoLoaded }">\n                        <image-cropper \n                            class="img-responsive"\n                            [imageChangedEvent]="photo"\n                            [maintainAspectRatio]="false"\n                            format="png,jpg,jpeg,ico"\n                            (imageCropped)="imagePhotoCropped($event)"\n                            (imageLoaded)="imageLoaded()"\n                            [autoCrop]= "true"\n                        ></image-cropper>\n                    </div>\n                    <div class="col-12 mb-10" *ngIf="temp_photo">\n                        <img class="img-responsive" [src]="temp_photo"/>\n                    </div>\n                    <div class="col-auto">\n                        <input id="payment-upload" class="d-none" type="file" (change)="photoChange($event)" accept="image/jpeg, image/png"/>\n                        <label for="payment-upload" mat-flat-button class="btn btn-secondary btn-block">\n                            {{ isPhotoLoaded || temp_photo ? \'Choose another file\' : \'Choose a file\' }}\n                        </label>\n                    </div>\n                    <div class="col-auto flex-align-center" *ngIf="!isPhotoLoaded && !temp_photo">\n                        <p class="m-0 font-italic">No file chosen</p>\n                    </div>\n                    <p class="text-danger" *ngIf="photoUploadWrongFile">Attachment is not valid</p>\n                    <p class="text-danger" *ngIf="uploadPhotoMaxLimitReached">Attachment must not exceed 1MB</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-6 text-right">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear" (click)="closeModal()" [disabled]="isLoading">Cancel</button>\n        </div>\n        <div class="col-6">\n            <button type="submit" mat-flat-button class="btn btn-sm btn-block" [ngClass]="{\'btn-primary\' : action != \'delete\', \'btn-danger\' : action == \'delete\' }" [disabled]="(!attachmentForm.valid && action != \'delete\') || isLoading">{{ modal_primary_button }}</button>\n        </div>\n    </div>\n</form>'},QSWX:function(t,e,n){"use strict";n.r(e),e.default=""},Qxmw:function(t,e,n){"use strict";n.r(e),e.default=""},"R/pk":function(t,e,n){"use strict";n.r(e),e.default=""},R8wO:function(t,e,n){"use strict";n.r(e),e.default='<div class="row">\n    <div class="col-12">\n        <h6 class="mini-heading">{{ modal_title }}</h6>\n    </div>\n</div>\n<div class="row">\n    <div class="col-12">\n        <div class="form-group">\n            <label class="text-secondary">{{ modal_message }}</label>\n        </div>\n    </div>\n</div>\n<div class="row mb-30">\n    <div class="col-12">\n        <div class="data-table p-relative table-listing h-300" style="overflow: auto;">\n            <table>\n                <tbody>\n                    <ng-container *ngIf="isLoaded">\n                        <tr *ngFor="let item of items.egg_inventory; let i = index">\n                            <td class="w-30-per alt">{{ item.type }}</td>\n                            <td class="w-70-per">\n                                <ng-container>{{ item.egg_count | number }}</ng-container>\n                            </td>\n                        </tr>\n                    </ng-container>\n                    <ng-container *ngIf="!isLoaded">\n                        <tr>\n                            <td class="w-30-per alt">\n                                <ngx-skeleton-loader [theme]="{\n                                    \'border-radius\': \'5px\',\n                                    \'margin-bottom\': \'0px\',\n                                    \'height\': \'20px\',\n                                    \'width\': \'50%\'\n                                }"></ngx-skeleton-loader>\n                            </td>\n                            <td class="w-70-per">\n                                <ngx-skeleton-loader [theme]="{\n                                    \'border-radius\': \'5px\',\n                                    \'margin-bottom\': \'0px\',\n                                    \'height\': \'20px\',\n                                    \'width\': \'50%\'\n                                }"></ngx-skeleton-loader>\n                            </td>\n                        </tr>\n                    </ng-container>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n<div class="row">\n    <div class="col-auto ml-auto">\n        <button type="submit" mat-flat-button class="btn btn-sm btn-block" [ngClass]="modal_primary_button_class" (click)="closeModal()">{{ modal_primary_button }}</button>\n    </div>\n</div>'},RnhZ:function(t,e,n){var o={"./af":"K/tc","./af.js":"K/tc","./ar":"jnO4","./ar-dz":"o1bE","./ar-dz.js":"o1bE","./ar-kw":"Qj4J","./ar-kw.js":"Qj4J","./ar-ly":"HP3h","./ar-ly.js":"HP3h","./ar-ma":"CoRJ","./ar-ma.js":"CoRJ","./ar-sa":"gjCT","./ar-sa.js":"gjCT","./ar-tn":"bYM6","./ar-tn.js":"bYM6","./ar.js":"jnO4","./az":"SFxW","./az.js":"SFxW","./be":"H8ED","./be.js":"H8ED","./bg":"hKrs","./bg.js":"hKrs","./bm":"p/rL","./bm.js":"p/rL","./bn":"kEOa","./bn.js":"kEOa","./bo":"0mo+","./bo.js":"0mo+","./br":"aIdf","./br.js":"aIdf","./bs":"JVSJ","./bs.js":"JVSJ","./ca":"1xZ4","./ca.js":"1xZ4","./cs":"PA2r","./cs.js":"PA2r","./cv":"A+xa","./cv.js":"A+xa","./cy":"l5ep","./cy.js":"l5ep","./da":"DxQv","./da.js":"DxQv","./de":"tGlX","./de-at":"s+uk","./de-at.js":"s+uk","./de-ch":"u3GI","./de-ch.js":"u3GI","./de.js":"tGlX","./dv":"WYrj","./dv.js":"WYrj","./el":"jUeY","./el.js":"jUeY","./en-SG":"zavE","./en-SG.js":"zavE","./en-au":"Dmvi","./en-au.js":"Dmvi","./en-ca":"OIYi","./en-ca.js":"OIYi","./en-gb":"Oaa7","./en-gb.js":"Oaa7","./en-ie":"4dOw","./en-ie.js":"4dOw","./en-il":"czMo","./en-il.js":"czMo","./en-nz":"b1Dy","./en-nz.js":"b1Dy","./eo":"Zduo","./eo.js":"Zduo","./es":"iYuL","./es-do":"CjzT","./es-do.js":"CjzT","./es-us":"Vclq","./es-us.js":"Vclq","./es.js":"iYuL","./et":"7BjC","./et.js":"7BjC","./eu":"D/JM","./eu.js":"D/JM","./fa":"jfSC","./fa.js":"jfSC","./fi":"gekB","./fi.js":"gekB","./fo":"ByF4","./fo.js":"ByF4","./fr":"nyYc","./fr-ca":"2fjn","./fr-ca.js":"2fjn","./fr-ch":"Dkky","./fr-ch.js":"Dkky","./fr.js":"nyYc","./fy":"cRix","./fy.js":"cRix","./ga":"USCx","./ga.js":"USCx","./gd":"9rRi","./gd.js":"9rRi","./gl":"iEDd","./gl.js":"iEDd","./gom-latn":"DKr+","./gom-latn.js":"DKr+","./gu":"4MV3","./gu.js":"4MV3","./he":"x6pH","./he.js":"x6pH","./hi":"3E1r","./hi.js":"3E1r","./hr":"S6ln","./hr.js":"S6ln","./hu":"WxRl","./hu.js":"WxRl","./hy-am":"1rYy","./hy-am.js":"1rYy","./id":"UDhR","./id.js":"UDhR","./is":"BVg3","./is.js":"BVg3","./it":"bpih","./it-ch":"bxKX","./it-ch.js":"bxKX","./it.js":"bpih","./ja":"B55N","./ja.js":"B55N","./jv":"tUCv","./jv.js":"tUCv","./ka":"IBtZ","./ka.js":"IBtZ","./kk":"bXm7","./kk.js":"bXm7","./km":"6B0Y","./km.js":"6B0Y","./kn":"PpIw","./kn.js":"PpIw","./ko":"Ivi+","./ko.js":"Ivi+","./ku":"JCF/","./ku.js":"JCF/","./ky":"lgnt","./ky.js":"lgnt","./lb":"RAwQ","./lb.js":"RAwQ","./lo":"sp3z","./lo.js":"sp3z","./lt":"JvlW","./lt.js":"JvlW","./lv":"uXwI","./lv.js":"uXwI","./me":"KTz0","./me.js":"KTz0","./mi":"aIsn","./mi.js":"aIsn","./mk":"aQkU","./mk.js":"aQkU","./ml":"AvvY","./ml.js":"AvvY","./mn":"lYtQ","./mn.js":"lYtQ","./mr":"Ob0Z","./mr.js":"Ob0Z","./ms":"6+QB","./ms-my":"ZAMP","./ms-my.js":"ZAMP","./ms.js":"6+QB","./mt":"G0Uy","./mt.js":"G0Uy","./my":"honF","./my.js":"honF","./nb":"bOMt","./nb.js":"bOMt","./ne":"OjkT","./ne.js":"OjkT","./nl":"+s0g","./nl-be":"2ykv","./nl-be.js":"2ykv","./nl.js":"+s0g","./nn":"uEye","./nn.js":"uEye","./pa-in":"8/+R","./pa-in.js":"8/+R","./pl":"jVdC","./pl.js":"jVdC","./pt":"8mBD","./pt-br":"0tRk","./pt-br.js":"0tRk","./pt.js":"8mBD","./ro":"lyxo","./ro.js":"lyxo","./ru":"lXzo","./ru.js":"lXzo","./sd":"Z4QM","./sd.js":"Z4QM","./se":"//9w","./se.js":"//9w","./si":"7aV9","./si.js":"7aV9","./sk":"e+ae","./sk.js":"e+ae","./sl":"gVVK","./sl.js":"gVVK","./sq":"yPMs","./sq.js":"yPMs","./sr":"zx6S","./sr-cyrl":"E+lV","./sr-cyrl.js":"E+lV","./sr.js":"zx6S","./ss":"Ur1D","./ss.js":"Ur1D","./sv":"X709","./sv.js":"X709","./sw":"dNwA","./sw.js":"dNwA","./ta":"PeUW","./ta.js":"PeUW","./te":"XLvN","./te.js":"XLvN","./tet":"V2x9","./tet.js":"V2x9","./tg":"Oxv6","./tg.js":"Oxv6","./th":"EOgW","./th.js":"EOgW","./tl-ph":"Dzi0","./tl-ph.js":"Dzi0","./tlh":"z3Vd","./tlh.js":"z3Vd","./tr":"DoHr","./tr.js":"DoHr","./tzl":"z1FC","./tzl.js":"z1FC","./tzm":"wQk9","./tzm-latn":"tT3J","./tzm-latn.js":"tT3J","./tzm.js":"wQk9","./ug-cn":"YRex","./ug-cn.js":"YRex","./uk":"raLr","./uk.js":"raLr","./ur":"UpQW","./ur.js":"UpQW","./uz":"Loxo","./uz-latn":"AQ68","./uz-latn.js":"AQ68","./uz.js":"Loxo","./vi":"KSF8","./vi.js":"KSF8","./x-pseudo":"/X5v","./x-pseudo.js":"/X5v","./yo":"fzPg","./yo.js":"fzPg","./zh-cn":"XDpg","./zh-cn.js":"XDpg","./zh-hk":"SatO","./zh-hk.js":"SatO","./zh-tw":"kOpN","./zh-tw.js":"kOpN"};function i(t){var e=s(t);return n(e)}function s(t){if(!n.o(o,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return o[t]}i.keys=function(){return Object.keys(o)},i.resolve=s,t.exports=i,i.id="RnhZ"},SIyb:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n  <div class="row mb-35">\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n      <h1 class="heading">Fresh Eggs Inventory/Stocks</h1>\n      <p class="sub-heading mb-8">Grand total quantity of eggs: <strong>{{ totalItems | number }}</strong></p>\n      <ng-container *ngIf="showtimeago">\n        <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n        <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n            \'border-radius\' : \'5px\',\n            \'margin-bottom\' : \'10px\',\n            \'height\' : \'20px\'\n        }"></ngx-skeleton-loader>\n      </ng-container>\n    </div>\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n      <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()" [disabled]="!isLoaded">\n        <i class="icon-download"></i>\n        <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n        <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n      </button>\n    </div>\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6">\n      <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportToCsv()" [disabled]="!isLoaded">\n        <i class="icon-download"></i>\n        <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as CSV</span>\n        <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">CSV</span>\n      </button>\n    </div>\n  </div>\n\n  <div class="container-card p-30 mb-25" *ngIf="show_filter">\n    <div class="row">\n      <div class="col-12">\n        <h6 class="card-heading">Filters</h6>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n        <div class="row">\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n              <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n              <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? \'Dates - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Dates\' }}\n                <i class="icon-arrow-drop-down ml-5"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n        <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n              Clear Filters\n            </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="container-card p-30">\n    <div class="row mb-25">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-3 offset-xl-2 col-lg-4 offset-lg-2 col-md-8 col-sm-9 col-8">\n        <div class="form-group">\n          <div class="inner-group search">\n            <i class="icon-search"></i>\n            <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n              (keydown.enter)="searchItem()" />\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n            <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf="visible_columns.length > 0">\n      <div class="data-table p-relative table-listing" style="overflow: auto;">\n        <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n          <thead>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf="isLoaded && items.length > 0">\n              <tr *ngFor="let item of items; let i = index">\n                <td>{{ item.created_at | date: \'MM/dd/yyyy\' }}</td>\n                <td>{{ item.beginning_stocks | number }}</td>\n                <td>{{ item.total_harvested | number }}</td>\n                <td>{{ item.waste_sales | number }}</td>\n                <td>{{ item.total_remaining_stocks | number }}</td>\n                <td>\n                  <button type="button" mat-flat-button class="btn btn-clear text-blue" [routerLink]="[ \'/inventory-stocks/fresh-eggs/view\', item.date]">\n                    <i class="icon-datatables-view"></i>\n                    View\n                  </button>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="!isLoaded">\n              <tr>\n                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                  <ngx-skeleton-loader [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'0px\',\n                    \'height\' : \'20px\'\n                  }"></ngx-skeleton-loader>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && items.length == 0">\n              <tr>\n                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n              </tr>\n            </ng-container>\n          </tbody>\n          <tfoot>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n      <div class="row">\n        <div class="col-12 text-center">\n          <p class="mb-0">Please choose column visibility</p>\n        </div>\n      </div>\n    </ng-container>\n    <div class="row mt-35">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n        <ul class="paginate pull-right">\n          <li class="link cursor-pointer" *ngIf="prev_page">\n              <a (click)="gotoPage(prev_page)">\n                  Previous\n              </a>\n          </li>\n          <ng-container *ngFor="let x of counter(totalPages); let i = index">\n            <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n          </ng-container>\n          <li class="link cursor-pointer" *ngIf="next_page">\n              <a (click)="gotoPage(next_page)">\n                  Next\n              </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</section>'},SZC3:function(t,e,n){"use strict";n.r(e),e.default=""},"TQ/h":function(t,e,n){"use strict";n.r(e),e.default='<div class="row">\n    <div class="col-12">\n        <h6 class="mini-heading">{{ modal_title }}</h6>\n    </div>\n</div>\n<form [formGroup]="medicineUnitForm" (ngSubmit)="submit()">\n    <ng-container *ngIf="action == \'delete\'">\n        <div class="row">\n            <div class="col-12">\n                <div class="form-group">\n                    <label class="text-secondary">{{ modal_message }}</label>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf="action != \'delete\'">\n        <div class="row">\n            <div class="col-12">\n                <div class="form-group">\n                    <label class="text-secondary">Enter Medicine Unit <span class="required">*</span></label>\n                    <input type="text" formControlName="unit" class="form-control mb-10"/>\n                    <ng-container *ngIf="medicineUnitForm.controls.unit.touched">\n                        <p class="text-danger" *ngIf="medicineUnitForm.controls.unit.hasError(\'required\')">Medicine unit is required</p>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <div class="row">\n        <div class="col-6 text-right">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear" (click)="closeModal()" [disabled]="isLoading">Cancel</button>\n        </div>\n        <div class="col-6">\n            <button type="submit" mat-flat-button class="btn btn-sm btn-block" [ngClass]="{\'btn-primary\' : action != \'delete\', \'btn-danger\' : action == \'delete\' }" [disabled]="(!medicineUnitForm.valid && action != \'delete\') || isLoading">{{ modal_primary_button }}</button>\n        </div>\n    </div>\n</form>\n'},TRWD:function(t,e,n){"use strict";n.r(e),e.default=""},TWb5:function(t,e,n){"use strict";n.r(e),e.default=".btn-background {\n  background-color: #fff;\n}\n\n.btn-medicine {\n  color: #000000;\n}\n\n.btn-medicine:hover {\n  background-color: #c0c0c0;\n}"},"TgR/":function(t,e,n){"use strict";n.r(e),e.default=""},V20C:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-15">\n        <div class="col-auto">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary" (click)="goBack(\'go_back\', \'customer_update\')">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to customer profile</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-15">\n        <div class="col-12">\n            <h1 class="heading">Edit customer details</h1>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl-9 col-lg-7 col-md-7 col-sm-12 col-12">\n            <div class="container-card view-record">\n                <form [formGroup]="userForm">\n                    <div class="p-30">\n                        <h1 class="heading">Basic Info.</h1>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">First Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="first_name" maxlength="50"/>\n                                    <ng-container *ngIf="userForm.controls.first_name.touched">\n                                        <p class="text-danger"\n                                            *ngIf="userForm.controls.first_name.hasError(\'required\')">First name is\n                                            required</p>\n                                            <p class="text-danger" *ngIf="userForm.controls.first_name.hasError(\'maxlength\')">First name must not exceed 50 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Last Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="last_name" maxlength="50"/>\n                                    <ng-container *ngIf="userForm.controls.last_name.touched">\n                                        <p class="text-danger"\n                                            *ngIf="userForm.controls.last_name.hasError(\'required\')">Last name is\n                                            required</p>\n                                            <p class="text-danger" *ngIf="userForm.controls.last_name.hasError(\'maxlength\')">Last name must not exceed 50 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Customer Profile <span class="required">*</span></label>\n                                    <mat-select class="btn btn-drop-down btn-block text-left mb-10" formControlName="customer_type_id" placeholder="Select customer profile">\n                                        <mat-option *ngFor="let customer_type of customer_type_options" [value]="customer_type.id">{{ customer_type.type }}</mat-option>\n                                    </mat-select>\n                                    <ng-container *ngIf="userForm.controls.customer_type_id.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.customer_type_id.hasError(\'required\')">Customer profile is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Mobile Phone <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <div class="input-group-prepend">\n                                            <span class="input-group-text mb-10">+63</span>\n                                        </div>\n                                        <input type="tel" class="form-control mb-10" formControlName="number" placeholder="xxx xxx xxxx" maxlength="10"/>\n                                    </div>\n                                    <ng-container *ngIf="userForm.controls.number.touched">\n                                        <p class="text-danger"\n                                            *ngIf="userForm.controls.number.hasError(\'required\')">Mobile\n                                            phone is required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'pattern\')">\n                                            Mobile phone is invalid</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'maxlength\')">\n                                            Mobile phone must not exceed 10 digits</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'minlength\')">\n                                            Mobile phone must be atleast 10 digits</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Email <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="email" maxlength="50" minlength="6"/>\n                                    <ng-container *ngIf="userForm.controls.email.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.email.hasError(\'required\')">\n                                            Email is required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.email.hasError(\'pattern\')">\n                                            Email is invalid</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.email.hasError(\'maxlength\')">Email must not exceed 50 characters</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.email.hasError(\'minlength\')">Email must not contain at least 6 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Address <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="location" maxlength="60"/>\n                                    <ng-container *ngIf="userForm.controls.location.touched">\n                                        <p class="text-danger"\n                                            *ngIf="userForm.controls.location.hasError(\'required\')">Address is\n                                            required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.location.hasError(\'maxlength\')">Address must not exceed 60 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Password</label>\n                                    <input class="form-control mb-10" type="text" formControlName="password"/>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                            \n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 text-right">\n                                <div class="form-group">\n                                    <button type="button" class="btn btn-primary" (click)="generatePassword()">Generate</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="p-30">\n                        <h1 class="heading mb-30">Profile Photo</h1>\n                        <div class="row">\n                            <div class="col-xl-2 col-lg-3 col-md-3 col-sm-3 col-3">\n                                <img *ngIf="!isProfileImageLoaded && !profilePhoto" class="avatar img-responsive" src="../../../../../assets/images/profile.svg">\n                                <img *ngIf="!isProfileImageLoaded && profilePhoto" class="avatar img-responsive" [src]="profilePhoto">\n                                <image-cropper \n                                    class="avatar img-responsive {{isProfileImageLoaded ? \'\' : \'d-none\' }}"\n                                    [imageChangedEvent]="profilePhoto"\n                                    [maintainAspectRatio]="true"\n                                    [aspectRatio]="5 / 5"\n                                    [resizeToWidth]="100"\n                                    format="png,jpg,jpeg,ico"\n                                    (imageCropped)="imageProfilePhotoCropped($event)"\n                                    (imageLoaded)="imageProfileLoaded()"\n                                    [autoCrop]= "true"\n                                ></image-cropper>\n                            </div>\n                            <div class="col-xl-6 col-lg-9 col-md-9 col-sm-9 col-9">\n                                <p>Choose a file to upload:</p>\n                                <div class="form-group row">\n                                    <input id="file-upload" class="d-none" type="file" (change)="fileChange($event)" accept="image/jpeg, image/png"/>\n                                    <div class="col-xl-6 col-lg-6 col-md-12">\n                                        <label for="file-upload" class="btn btn-primary btn-block">\n                                            Choose a file\n                                        </label>\n                                    </div>\n                                    <div class="col-xl-6 col-lg-6 col-md-12 flex-align-center" *ngIf="!isProfileImageLoaded && !profilePhoto">\n                                        <p class="m-0 font-italic">No file chosen</p>\n                                    </div>\n                                    <p class="text-danger" *ngIf="profileUploadWrongFile">Image is not valid</p>\n                                    <p class="text-danger" *ngIf="uploadMaxLimitReached">Image must not exceed 1MB</p>\n                                    <div class="col-xl-8 col-lg-12 col-md-12">\n                                        <p class="note fs-12">Maximum image file size is 1MB. Try resizing it to atleast 500x500 px in resolution.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-auto col-lg-auto col-md-6 ml-xl-auto ml-lg-auto">\n                                <button type="button" mat-flat-button class="btn btn-clear btn-block"\n                                (click)="goBack(\'form_cancel\', \'customer_update\')">\n                                    Cancel\n                                </button>\n                            </div>\n                            <div class="col-xl-auto col-lg-auto col-md-6">\n                                <button type="submit" mat-flat-button class="btn btn-primary btn-block"\n                                    (click)="openModal(userForm.value, \'user_update\')" [disabled]="!userForm.valid">\n                                    Save Changes\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-5 col-md-5 col-sm-12 col-12">\n            <div class="body-card pt-18 pl-24 pr-24 pb-43">\n                <h1 class="mini-heading fs-16 fw-500 mb-10">Delete User?</h1>\n                <p class="fs-14 action-note">Deleting a user removes all the data on this dashboard.</p>\n                <button type="button" mat-flat-button class="btn btn-danger mt-30 btn-block" (click)="openModal(userForm.value, \'user_delete\')">\n                    <span class="fs-14">Yes, I understand - delete user</span>\n                </button>\n            </div>\n        </div>\n    </div>\n</section>'},VHkw:function(t,e,n){"use strict";n.r(e),e.default=""},VQx6:function(t,e,n){"use strict";n.r(e),e.default=""},VTOx:function(t,e,n){"use strict";n.r(e),e.default="p {\n  font-size: 16px;\n  color: #72787F;\n  text-transform: none;\n}\n\n.heading {\n  font-size: 24px;\n  font-weight: bold;\n  color: #1E2631;\n  text-transform: none;\n}\n\n.sub-heading {\n  color: #72787F;\n}\n\n.sub-heading.italic {\n  font-style: italic;\n}\n\n.sub-heading strong {\n  color: #1E2631;\n}\n\n.mini-heading {\n  font-size: 20px;\n  font-weight: 500;\n  color: #1E2631;\n  text-transform: none;\n}\n\n.card-heading {\n  font-size: 13px;\n  font-weight: normal;\n  text-transform: uppercase;\n  color: #72787F;\n}\n\n.sidebar {\n  color: #1E2631;\n}\n\n.sidebar ul li {\n  font-size: 16px;\n}\n\n.sidebar ul li a.main-nav {\n  color: #72787F;\n}\n\n.sidebar ul li a.main-nav.sub {\n  font-size: 14px;\n}\n\n.sidebar ul li a.main-nav:hover {\n  font-weight: 500;\n  color: #1E2631;\n}\n\n.sidebar ul li.active a {\n  font-weight: 500;\n  color: #1E2631;\n}\n\nmat-checkbox label {\n  font-size: 16px !important;\n}\n\n.vertical-text {\n  transform: rotate(-90deg);\n  -webkit-transform: rotate(-90deg);\n  -moz-transform: rotate(-90deg);\n  -ms-transform: rotate(-90deg);\n  -o-transform: rotate(-90deg);\n}\n\n.vertical-text-full {\n  width: -webkit-max-content;\n  width: -moz-max-content;\n  width: max-content;\n  position: absolute;\n  left: -25%;\n  top: 50%;\n}\n\nhr {\n  margin: 0;\n  border-bottom: 1px solid #DDE1E5;\n}\n\n.c-fields .c-field label {\n  color: #666666;\n}\n\n.c-fields .c-field label span {\n  color: #DB2B2B;\n}\n\n.c-fields .c-field .form-control {\n  min-height: 50px;\n}\n\n.prof-img {\n  display: -webkit-box;\n  display: flex;\n}\n\n.note {\n  max-width: 240px;\n  color: #72787F;\n}\n\n.input-group-prepend .input-group-text {\n  border-radius: 5px 0 0 5px;\n  background-color: #D9DCDE;\n  border: 1px solid #C1C2C3;\n}\n\n.input-group-prepend input {\n  border-radius: 0 5px 5px 0;\n}\n\ninput[type=file] {\n  display: none;\n}"},VcuE:function(t,e,n){"use strict";n.r(e),e.default=""},VfB6:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n  <div class="row mb-20">\n      <div class="col-xl-9 col-lg-8 col-md-7 col-sm-6 col-12">\n          <h1 class="heading">View Customer\'s Profile</h1>\n      </div>\n      <div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12">\n          <button type="button" mat-flat-button class="btn btn-sm btn-secondary btn-block" (click)="goBack()">\n              <i class="icon-back"></i>\n              <span class="ml-15">Go back to list</span>\n          </button>\n      </div>\n  </div>\n  <div class="row">\n    <div class="col-xl-9 col-lg-8 col-md-7 col-sm-6 col-12">\n      <div class="container-card view-record p-30">\n        <div class="row">\n          <div class="col-xl-2 offset-xl-0 col-lg-3 offset-lg-0 col-md-6 offset-md-3 col-sm-6 offset-sm-3 col-6 offset-3">\n            <img *ngIf="!isLoaded || !user_profile.profile_picture" src="../../../../../assets/images/profile.svg" class="avatar img-responsive">\n            <img *ngIf="isLoaded && user_profile.profile_picture" [src]="user_profile.profile_picture" class="avatar img-responsive">\n          </div>\n          <div class="col-xl-10 col-lg-9 col-md-12 col-sm-12 col-12 pl-0 mt-11">\n            <div class="row ml-0 mr-0">\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-5 fs-12">First Name</p>\n                <h1 class="mini-heading fw-500" *ngIf="isLoaded">{{ user_profile.profile_first_name }}</h1>\n                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                        \'border-radius\': \'5px\',\n                        \'margin-bottom\': \'0px\',\n                        \'height\': \'20px\',\n                        \'width\': \'50%\'\n                    }"></ngx-skeleton-loader>\n              </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-5 fs-12">Last Name</p>\n                <h1 class="mini-heading fw-500" *ngIf="isLoaded">{{ user_profile.profile_last_name }}</h1>\n                                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                          \'border-radius\': \'5px\',\n                                                          \'margin-bottom\': \'0px\',\n                                                          \'height\': \'20px\',\n                                                          \'width\': \'50%\'\n                                                      }"></ngx-skeleton-loader>\n              </div>\n            </div>\n            <div class="row mt-19 ml-0 mr-0">\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">ID no.</p>\n                <h1 class="fs-16" *ngIf="isLoaded">{{ user_profile.customer_id }}</h1>\n                                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                          \'border-radius\': \'5px\',\n                                                          \'margin-bottom\': \'0px\',\n                                                          \'height\': \'20px\',\n                                                          \'width\': \'50%\'\n                                                      }"></ngx-skeleton-loader>\n              </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">Customer Profile</p>\n                <h1 class="fs-16" *ngIf="isLoaded">{{ user_profile.customer_type ? user_profile.customer_type.type : \'\' }}</h1>\n                                <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                        \'border-radius\': \'5px\',\n                                                        \'margin-bottom\': \'0px\',\n                                                        \'height\': \'20px\',\n                                                        \'width\': \'50%\'\n                                                    }"></ngx-skeleton-loader>\n              </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">Date Added</p>\n                <h1 class="fs-16" *ngIf="isLoaded">{{ user_profile.created_at | date : \'MM/dd/yyyy\' }}</h1>\n                                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                          \'border-radius\': \'5px\',\n                                                          \'margin-bottom\': \'0px\',\n                                                          \'height\': \'20px\',\n                                                          \'width\': \'50%\'\n                                                      }"></ngx-skeleton-loader>\n              </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">Email</p>\n                <h1 class="fs-16" *ngIf="isLoaded">{{ user_profile.email }}</h1>\n                                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                          \'border-radius\': \'5px\',\n                                                          \'margin-bottom\': \'0px\',\n                                                          \'height\': \'20px\',\n                                                          \'width\': \'50%\'\n                                                      }"></ngx-skeleton-loader>\n\n              </div>\n            </div>\n            <div class="row mt-19 ml-0 mr-0">\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">Mobile Number</p>\n                <h1 class="fs-16" *ngIf="isLoaded">+63{{ user_profile.contact_number }}</h1>\n                                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                          \'border-radius\': \'5px\',\n                                                          \'margin-bottom\': \'0px\',\n                                                          \'height\': \'20px\',\n                                                          \'width\': \'50%\'\n                                                      }"></ngx-skeleton-loader>\n              </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">Address</p>\n                <h1 class="fs-16" *ngIf="isLoaded">{{ user_profile.profile_location }}</h1>\n                                  <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                          \'border-radius\': \'5px\',\n                                                          \'margin-bottom\': \'0px\',\n                                                          \'height\': \'20px\',\n                                                          \'width\': \'50%\'\n                                                      }"></ngx-skeleton-loader>\n              </div>\n              <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-6 pr-0">\n                <p class="mb-8 fs-12">Password</p>\n                <div class="row">\n                  <input type="{{ show_password ? \'text\' : \'password\' }}" value="{{ user_profile.real_password }}"\n                    class="mb-10 ml-15 field-pasword" readonly placeholder="" />\n                  <button type="button" class="btn btn-clear p-absolute t-2 r-0 mt-15" (click)="showPassword()">\n                    <i [ngClass]="{ \'icon-eye-close\' : !show_password, \'icon-eye-open\' : show_password }"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class="data-table p-relative table-listing mt-33" style="overflow: auto;" *ngIf="collectibles">\n              <table>\n                <thead>\n                  <tr>\n                    <th>\n                      No. of Collectibles\n                    </th>\n                    <th>\n                      Collectibles Amount\n                    </th>\n                    <th>\n                      Fully paid orders\n                    </th>\n                    <th>\n                      Total Revenue\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{{ collectibles.collectible_no | number }}</td>\n                    <td>₱ {{ collectibles.collectible_amount | number : \'1.2-2\' }}</td>\n                    <td>₱ {{ collectibles.fully_paid_amount | number : \'1.2-2\' }}</td>\n                    <td>₱ {{ collectibles.total_revenue | number : \'1.2-2\' }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12">\n      <div class="body-card pt-18 pl-24 pr-24 pb-43">\n        <h1 class="mini-heading fs-16 fw-500 mb-10">Actions</h1>\n        <p class="fs-14 action-note">Here are the actions you can apply for this order details.</p>\n        <button type="button" class="btn btn-secondary mt-30 btn-block" mat-flat-button [routerLink]="[\'/customers/update\', user_profile.id]">\n          <div class="cus-layer ml-auto mr-auto">\n            <i class="icon-edit"></i>\n            <span class="ml-8 fs-14">Edit Profile</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section class="main-container p-35">\n  <div class="row mb-35">\n    <div class="col-xl-6 col-lg-6 col-md-8 col-sm-12 col-12">\n      <h1 class="heading">List of Orders</h1>\n    </div>\n  </div>\n  \n  <div class="container-card p-30 mb-25" *ngIf="show_filter">\n    <div class="row">\n      <div class="col-12">\n        <h6 class="card-heading">Filters</h6>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n        <div class="row">\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n              <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n              <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block" (click)="created_at_picker.open()">{{ from && to ? \'Date Range - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date Range\' }}\n                <i class="icon-arrow-drop-down ml-5"></i>\n              </button>\n            </div>\n          </div>\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <mat-select class="btn btn-drop-down btn-sm btn-block" [(ngModel)]="order_status" (selectionChange)="changeOrderStatus($event)" placeholder="Order Status">\n                <mat-option *ngFor="let item of order_status_options" [value]="item.value">{{ item.label }}</mat-option>\n              </mat-select>\n            </div>\n          </div>\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <mat-select class="btn btn-drop-down btn-sm btn-block" [(ngModel)]="mode_of_payment" (selectionChange)="changeModeOfPayment($event)" placeholder="Mode of Payment">\n                <mat-option *ngFor="let item of mode_of_payment_options" [value]="item.value">{{ item.label }}</mat-option>\n              </mat-select>\n            </div>\n          </div>\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <mat-select class="btn btn-drop-down btn-sm btn-block" [(ngModel)]="payment_status" (selectionChange)="changePaymentStatus($event)" placeholder="Payment Status">\n                <mat-option *ngFor="let item of payment_status_options" [value]="item.value">{{ item.label }}</mat-option>\n              </mat-select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n            Clear Filters\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="container-card p-30">\n    <div class="row mb-25">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n        <div class="form-group">\n          <div class="inner-group">\n            <mat-select multiple class="btn btn-block btn-primary multiple-select" (selectionChange)="changeColumnVisibility($event)" placeholder="Column Visibility" [(ngModel)]="visible_columns">\n              <mat-select-trigger>Column Visibility</mat-select-trigger>\n              <ng-container *ngFor="let item of ths; let i = index">\n                <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n              </ng-container>\n            </mat-select>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n        <div class="form-group">\n          <div class="inner-group search">\n            <i class="icon-search"></i>\n            <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n              (keydown.enter)="searchItem()" />\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n            <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf="visible_columns.length > 1">\n      <div class="data-table p-relative table-listing" style="overflow: auto;">\n        <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n          <thead>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf="isLoaded && items.length > 0">\n              <tr *ngFor="let item of items; let i = index">\n                <td *ngIf="ths[0].isVisible">{{ item.transaction_id }}</td>\n                <td *ngIf="ths[1].isVisible">{{ item.created_at | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                <td *ngIf="ths[2].isVisible">{{ item.status }}</td>\n                <td *ngIf="ths[3].isVisible">\n                  <ng-container *ngFor="let egg of item.order_items; let i = index">\n                    {{ egg.egg_type.type }}{{ i < item.order_items.length -1 ? \', \':\'\' }}\n                  </ng-container>\n                </td>\n                <td *ngIf="ths[4].isVisible">{{ item.total_pieces | number }}</td>\n                <td *ngIf="ths[5].isVisible">{{ item.total_price | number : \'1.2-2\' }}</td>\n                <td *ngIf="ths[6].isVisible">{{ item.payment_type }}</td>\n                <td *ngIf="ths[7].isVisible">\n                  <button type="button" mat-flat-button class="btn btn-clear text-blue" [routerLink]="[ \'/transactions/view\', item.id]">\n                    <i class="icon-datatables-view"></i>\n                    View\n                  </button>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="!isLoaded">\n              <tr>\n                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                  <ngx-skeleton-loader [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'0px\',\n                    \'height\' : \'20px\'\n                  }"></ngx-skeleton-loader>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && items.length == 0">\n              <tr>\n                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n              </tr>\n            </ng-container>\n          </tbody>\n          <tfoot>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n      <div class="row">\n        <div class="col-12 text-center">\n          <p class="mb-0">Please choose column visibility</p>\n        </div>\n      </div>\n    </ng-container>\n    <div class="row mt-35">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n        <ul class="paginate pull-right">\n          <li class="link cursor-pointer" *ngIf="prev_page">\n            <a (click)="gotoPage(prev_page)">\n              Previous\n            </a>\n          </li>\n          <ng-container *ngFor="let x of counter(totalPages); let i = index">\n            <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n          </ng-container>\n          <li class="link" *ngIf="next_page">\n            <a (click)="gotoPage(next_page)">\n              Next\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</section>'},Vh4n:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-20">\n        <div class="col-xl-9 col-lg-8 col-md-7 col-sm-6 col-12">\n            <h1 class="heading">Generated Forms</h1>\n        </div>\n        <div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary btn-block" (click)="goBack()">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back</span>\n            </button>\n        </div>\n    </div>\n    <div class="container-card view-record p-30">\n        <div id="printable-section">\n            <div id="print-payment-section" class="mb-30 break-now">\n                <div class="border">\n                    <div class="row mt-15 ml-0 mr-0">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="fw-500 fs-12">Payment Date:</p>\n                        </div>\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="fs-12">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                        </div>\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                            <p class="fw-500 fs-12">Order No.:</p>\n                        </div>\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="fs-12">{{ item ? item.transaction_id : \'\' }}</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                            <h5 class="mb-30">Payment Form</h5>\n                        </div>\n                    </div>\n                    <div class="row mb-10 ml-0 mr-0">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="fw-500 fs-12">Recipient:</p>\n                        </div>\n                        <div class="col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 text-center">\n                            <p class="mb-0 fs-12">{{ item ? item.customer_details.profile_last_name : \'\' }}</p>\n                            <p class="fs-10">(Family Name)</p>\n                        </div>\n                        <div class="col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 text-center">\n                            <p class="mb-0 fs-12">{{ item ? item.customer_details.profile_first_name : \'\' }}</p>\n                            <p class="fs-10">(Given Name)</p>\n                        </div>\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="fw-500 fs-12">Business Address:</p>\n                        </div>\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="mb-0 fs-12">{{ item ? item.customer_details.profile_location : \'\' }}</p>\n                        </div>\n                    </div>\n                    <ng-container *ngIf="visible_columns.length > 1">\n                        <div class="data-table p-relative table-listing mb-30" style="overflow: auto;">\n                          <table>\n                            <thead>\n                              <tr>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                  <th class="fs-12" *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                  </th>\n                                </ng-container>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <ng-container *ngIf="isLoaded && order_items.length > 0">\n                                <tr *ngFor="let item of order_items; let i = index">\n                                    <td class="fs-12" *ngIf="ths[0].isVisible">{{ item.egg_type.type_shortcode }}</td>\n        \n                                    <ng-container *ngFor="let egg of item.order_item_details; let i = index">\n                                        <td class="fs-12" *ngIf="ths[1+1].isVisible">{{ egg.qty | number }}</td>\n                                    </ng-container>\n                                    <td class="fs-12" *ngIf="ths[4].isVisible">{{ item.total_pieces | number }}</td>\n                                    <td *ngIf="ths[5].isVisible" class="text-right fs-12">₱ {{ item.price | number : \'1.2-2\' }}</td>\n                                    <td *ngIf="ths[6].isVisible" class="text-right fs-12">₱ {{ item.total_price | number : \'1.2-2\' }}</td>\n                                </tr>\n                              </ng-container>\n                              <ng-container *ngIf="!isLoaded">\n                                <tr>\n                                  <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                    <ngx-skeleton-loader [theme]="{\n                                      \'border-radius\' : \'5px\',\n                                      \'margin-bottom\' : \'0px\',\n                                      \'height\' : \'20px\'\n                                    }"></ngx-skeleton-loader>\n                                  </td>\n                                </tr>\n                              </ng-container>\n                              <ng-container *ngIf="isLoaded && order_items.length == 0">\n                                <tr>\n                                  <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                </tr>\n                              </ng-container>\n                            </tbody>\n                          </table>\n                        </div>\n                    </ng-container>\n                    <div class="row ml-0 mr-0">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-12">Paid By:</p>\n                        </div>\n                        <div class="col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 text-center mt-40">\n                            <p class="mb-0 fs-12">{{ item ? item.customer_details.profile_first_name : \'\' }} {{ item ? item.customer_details.profile_last_name : \'\' }}</p>\n                            <hr class="m-0">\n                            <p class="fs-10">Customer/Buyer/Client</p>\n                        </div>\n        \n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-12">Received By:</p>\n                        </div>\n                        <div class="col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 text-center mt-40">\n                            <p class="mb-0 h-17"></p>\n                            <hr class="m-0">\n                            <p class="fs-10">Authorized Representative</p>\n                        </div>\n        \n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                            <div class="row">\n                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6">\n                                    <p class="fw-500 mb-10 fs-12">Sub Total:</p>\n                                </div>\n                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6 text-right">\n                                    <p class="mb-10 fs-12">₱ {{ item.sub_total_price | number : \'1.2-2\' }}</p>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6">\n                                    <p class="fw-500 mb-10 fs-12">Discount:</p>\n                                </div>\n                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6 text-right">\n                                    <p class="mb-10 fs-12">₱ {{ item.discount | number : \'1.2-2\' }}</p>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6">\n                                    <p class="fw-500 mb-10 fs-12">Grand Total:</p>\n                                </div>\n                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6 text-right">\n                                    <p class="mb-10 fs-12">₱ {{ item.total_price | number : \'1.2-2\' }}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div id="print-credit-section" class="mb-30 break-now" *ngIf="item && item.mode_of_payment == 2">\n                <div class="border">\n                    <div class="row">\n                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                            <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                            <h5 class="mb-30">Credit Form</h5>\n                        </div>\n                    </div>\n                    <div class="row mb-10 ml-0 mr-0">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="fw-500 mb-0 fs-12">Pangalan:</p>\n                        </div>\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="mb-0 fs-12">{{ item ? item.customer_details.profile_first_name : \'\' }} {{ item ? item.customer_details.profile_last_name : \'\' }}</p>\n                        </div>\n                    </div>\n                    <div class="row ml-0 mr-0">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="fw-500 fs-12">Petsa:</p>\n                        </div>\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="fs-12">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                        </div>\n                    </div>\n                    <div class="row ml-0 mr-0 border-bottom border-top">\n                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">\n                            <p class="mb-15 mt-15 fs-12">Ako ay humihingi ng pahintulot na makahiram ng halagang ₱ <span class="border-bottom fw-500">{{ item ? (item.payment.balance | number : \'1.2-2\') : \'\' }}</span>, at nangangako na babayaran sa araw na <span class="border-bottom fw-500">{{ item ? (item.payment.due_date | date : \'MMM dd, yyyy\') : \'\' }}</span></p>\n                        </div>\n                    </div>\n                    <div class="row ml-0 mr-0 mt-20 border-bottom">\n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                            <div class="row">\n                                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                                    <p class="fw-500 fs-12">Buyer:</p>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                                    <p class="mb-0 fs-12">{{ item ? item.customer_details.profile_first_name : \'\' }} {{ item ? item.customer_details.profile_last_name : \'\' }}</p>\n                                    <hr class="m-0">\n                                    <p class="fs-10">Signature over printed name</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                            <div class="row">\n                                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                                    <p class="fw-500 fs-12">Prepared By:</p>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                                    <p class="mb-0 fs-12">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                                    <hr class="m-0">\n                                    <p class="fs-10">Signature over Printed Name</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                            <div class="row">\n                                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                                    <p class="fw-500 fs-12">Approved By:</p>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                                    <p class="mb-0 h-17"></p>\n                                    <hr class="m-0">\n                                    <p class="fs-10">Signature over Printed Name</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row ml-0 mr-0 mt-20">\n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                            <div class="row">\n                                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 mt-40">\n                                    <p class="fw-500 fs-12">Date Paid:</p>\n                                </div>\n                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6 text-center mt-40">\n                                    <p class="mb-0 fs-12">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                                    <hr class="m-0">\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                            <div class="row">\n                                \x3c!-- <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                                    <p class="fw-500">Prepared By:</p>\n                                </div> --\x3e\n                                <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                                    <p class="mb-0 fs-12">{{ item ? item.customer_details.profile_first_name : \'\' }} {{ item ? item.customer_details.profile_last_name : \'\' }}</p>\n                                    <hr class="m-0">\n                                    <p class="fs-10 mb-0">Signature over Printed Name</p>\n                                    <p class="fs-10">(Buyer Paid)</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                            <div class="row">\n                                \x3c!-- <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                                    <p class="fw-500">Approved By:</p>\n                                </div> --\x3e\n                                <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                                    <p class="mb-0 fs-12">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                                    <hr class="m-0">\n                                    <p class="fs-10 mb-0">Signature over Printed Name</p>\n                                    <p class="fs-10">(Received Payment)</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div id="print-credit-section" class="mb-30 break-now" *ngIf="item && item.mode_of_payment == 3">\n                <div class="border">\n                    <div class="row">\n                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                            <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                            <h5 class="mb-30">Balance Form</h5>\n                        </div>\n                    </div>\n                    <div class="row mb-10 ml-0 mr-0">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="fw-500 mb-0 fs-12">Pangalan:</p>\n                        </div>\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="mb-0 fs-12">{{ item ? item.customer_details.profile_first_name : \'\' }} {{ item ? item.customer_details.profile_last_name : \'\' }}</p>\n                        </div>\n                    </div>\n                    <div class="row ml-0 mr-0">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="fw-500 fs-12">Petsa:</p>\n                        </div>\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                            <p class="fs-12">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                        </div>\n                    </div>\n                    <div class="row ml-0 mr-0 border-bottom border-top">\n                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">\n                            <p class="mb-15 mt-15 fs-12">Ako ay humihingi ng pahintulot na makapag balance ng halagang <span class="border-bottom fw-500">₱ {{ item ? (item.payment.balance | number : \'1.2-2\') : \'\' }}</span> presyo ng <span class="border-bottom fw-500">₱ {{ item ? (item.total_price | number : \'1.2-2\') : 0 }}</span>, at nangangako na babayaran sa araw na <span class="border-bottom fw-500">{{ item ? (item.payment.due_date | date : \'MMM dd, yyyy\') : \'\' }}</span></p>\n                        </div>\n                    </div>\n                    <div class="row ml-0 mr-0 mt-20 border-bottom">\n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                            <div class="row">\n                                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                                    <p class="fw-500 fs-12">Buyer:</p>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                                    <p class="mb-0 fs-12">{{ item ? item.customer_details.profile_first_name : \'\' }} {{ item ? item.customer_details.profile_last_name : \'\' }}</p>\n                                    <hr class="m-0">\n                                    <p class="fs-10">Signature over printed name</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                            <div class="row">\n                                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                                    <p class="fw-500 fs-12">Prepared By:</p>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                                    <p class="mb-0 fs-12">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                                    <hr class="m-0">\n                                    <p class="fs-10">Signature over Printed Name</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                            <div class="row">\n                                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                                    <p class="fw-500 fs-12">Approved By:</p>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                                    <p class="mb-0 h-17"></p>\n                                    <hr class="m-0">\n                                    <p class="fs-10">Signature over Printed Name</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row ml-0 mr-0 mt-20">\n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                            <div class="row">\n                                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 mt-40">\n                                    <p class="fw-500 fs-12">Date Paid:</p>\n                                </div>\n                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6 text-center mt-40">\n                                    <p class="mb-0 fs-12">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                                    <hr class="m-0">\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                            <div class="row">\n                                \x3c!-- <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                                    <p class="fw-500">Prepared By:</p>\n                                </div> --\x3e\n                                <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                                    <p class="mb-0 fs-12">{{ item ? item.customer_details.profile_first_name : \'\' }} {{ item ? item.customer_details.profile_last_name : \'\' }}</p>\n                                    <hr class="m-0">\n                                    <p class="fs-10 mb-0">Signature over Printed Name</p>\n                                    <p class="fs-10">(Buyer Paid)</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                            <div class="row">\n                                \x3c!-- <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                                    <p class="fw-500">Approved By:</p>\n                                </div> --\x3e\n                                <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                                    <p class="mb-0 fs-12">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                                    <hr class="m-0">\n                                    <p class="fs-10 mb-0">Signature over Printed Name</p>\n                                    <p class="fs-10">(Received Payment)</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-auto">\n                <button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">Download Forms</button>\n            </div>\n        </div>\n    </div>\n</section>'},Vmg8:function(t,e,n){"use strict";n.r(e),e.default='<div class="row">\n    <div class="col-12">\n        <h6 class="mini-heading">{{ modal_title }}</h6>\n    </div>\n</div>\n<form [formGroup]="orderForm" (ngSubmit)="submit()">\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">{{ modal_message }}</label>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">Mode of Payment <span class="required">*</span></label>\n                <mat-select class="btn btn-drop-down btn-sm btn-block text-left" formControlName="mode_of_payment" placeholder="Mode of Payment" (selectionChange)="changePayment($event)" [disabled]="total_price < 100000">\n                    <mat-option *ngFor="let item of mode_of_payment_options" [value]="item.value">{{ item.label }}</mat-option>\n                </mat-select>\n                <ng-container *ngIf="orderForm.controls.mode_of_payment.touched">\n                    <p class="text-danger" *ngIf="orderForm.controls.mode_of_payment.hasError(\'required\')">\n                        Mode of payment is required</p>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n    <ng-container *ngIf="mode_of_payment == 2">\n        <div class="row">\n            <div class="col-12">\n                <div class="form-group">\n                    <label class="text-secondary">Credit Amount</label>\n                    <p class="text-danger">₱ {{ orderForm.controls.balance.value | number : \'1.2-2\' }}</p>\n                    \x3c!-- <input type="number" min="1" placeholder="0" formControlName="balance" class="form-control mb-10" disabled> --\x3e\n                </div>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-12">\n                <div class="form-group p-relative">\n                    <label class="text-secondary">Date of Credit Payment <span class="required">*</span></label>\n                    <input matInput [min]="min_date" [max]="max_date" [matDatepicker]="due_date_picker" placeholder="mm/dd/yyyy" formControlName="due_date" class="form-control date-input mb-10" readonly (click)="due_date_picker.open()">\n                    <mat-datepicker-toggle matSuffix [for]="due_date_picker" class="p-absolute r-0 t-30"></mat-datepicker-toggle>\n                    <mat-datepicker #due_date_picker></mat-datepicker>\n                    <ng-container *ngIf="orderForm.controls.due_date.touched">\n                        <p class="text-danger" *ngIf="orderForm.controls.due_date.hasError(\'required\')">Date of credit payment is required</p>\n                        \x3c!-- <p class="text-danger" *ngIf="orderForm.controls.due_date.hasError(\'min\')">Date of credit payment is must not be greater than the date today</p>\n                        <p class="text-danger" *ngIf="orderForm.controls.due_date.hasError(\'max\')">Date of credit payment is must not exceed more than 1 week from now</p> --\x3e\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf="mode_of_payment == 3">\n        <div class="row">\n            <div class="col-12">\n                <div class="form-group">\n                    <label class="text-secondary">Total Price</label>\n                    <p>₱ {{ orderForm.controls.total_price.value | number: \'1.2-2\' }}</p>\n                </div>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-12">\n                <div class="form-group">\n                    <label class="text-secondary">Initial Payment <span class="required">*</span></label>\n                    <input type="number" min="1" [max]="grand_total" placeholder="0" formControlName="payment" class="form-control mb-10" (input)="calculateRemaining($event)">\n                    <ng-container *ngIf="orderForm.controls.payment.touched">\n                        <p class="text-danger" *ngIf="orderForm.controls.payment.hasError(\'required\')" >Initial payment is required</p>\n                        <p class="text-danger" *ngIf="orderForm.controls.payment.hasError(\'min\')">Initial payment must be atleast 50% of total amount</p>\n                        <p class="text-danger" *ngIf="orderForm.controls.payment.hasError(\'max\')">Initial payment must not exceed the total price</p>\n                      </ng-container>\n                </div>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-12">\n                <div class="form-group">\n                    <label class="text-secondary">Remaining Balance</label>\n                    <p class="text-danger">₱ {{ orderForm.controls.balance.value | number: \'1.2-2\' }}</p>\n                </div>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-12">\n                <div class="form-group p-relative">\n                    <label class="text-secondary">Date of Balance Payment <span class="required">*</span></label>\n                    <input matInput [min]="min_date" [max]="max_date" [matDatepicker]="due_date_picker" placeholder="mm/dd/yyyy" formControlName="due_date" class="form-control date-input mb-10" readonly (click)="due_date_picker.open()">\n                    <mat-datepicker-toggle matSuffix [for]="due_date_picker" class="p-absolute r-0 t-30"></mat-datepicker-toggle>\n                    <mat-datepicker #due_date_picker></mat-datepicker>\n                    <ng-container *ngIf="orderForm.controls.due_date.touched">\n                        <p class="text-danger" *ngIf="orderForm.controls.due_date.hasError(\'required\')">Date of balance payment is required</p>\n                        \x3c!-- <p class="text-danger" *ngIf="orderForm.controls.due_date.hasError(\'min\')">Date of balance payment is must not be greater than the date today</p>\n                        <p class="text-danger" *ngIf="orderForm.controls.due_date.hasError(\'max\')">Date of balance payment is must not exceed more than 1 week from now</p> --\x3e\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <div class="row">\n        <div class="col-6 text-right">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear" (click)="closeModal()">Cancel</button>\n        </div>\n        <div class="col-6">\n            <button type="submit" mat-flat-button class="btn btn-sm btn-block" [ngClass]="modal_primary_button_class" [disabled]="!orderForm.valid || !mode_of_payment">{{ modal_primary_button }}</button>\n        </div>\n    </div>\n</form>'},Vwsj:function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="row">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <h5 class="mb-30">Daily House Harvest Report</h5>\n            </div>\n        </div>\n        <div class="row pb-10 ml-0 mr-0 border-bottom">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14">Prepared by:</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14 fw-500">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                <p class="mb-0 fs-14">Date:</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14 fw-500">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n            </div>\n        </div>\n        \n        <div class="row mb-0 ml-0 mr-0 mt-10" *ngIf="item">\n            <div class="col-2 stats">\n                <p>House/Building no.</p>\n                <h1>{{ item.house_name ? item.house_name.house_name : \'\' }}</h1>\n            </div>\n            <div class="col-2 stats">\n                <p>Beginning population</p>\n                <h1>{{ item.beginning_population ? (item.beginning_population | number) : 0 }}</h1>\n            </div>\n            <div class="col stats">\n                <p>Beginning age</p>\n                <h1>{{ item.beginning_age ? item.beginning_age : \'0\' }}</h1>\n            </div>\n        </div>\n\n        <ng-container *ngIf="visible_columns.length > 1">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <table>\n                        <thead>\n                            <tr>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible && th.canToggle" class="p-10 fs-12">\n                                    {{ th.label }}\n                                </th>\n                                </ng-container>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <ng-container *ngIf="isLoaded && items.length > 0">\n                                <tr *ngFor="let item of items; let i = index" [ngClass]="{\'break-now\' : (i + 1) % 11 == 0}">\n                                    <td *ngIf="ths[0].isVisible" class="p-10 fs-10">{{ item.prepared_by_date | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                                    <td *ngIf="ths[1].isVisible" class="p-10 fs-10">{{ item.age }}</td>\n                                    <td *ngIf="ths[2].isVisible" class="p-10 fs-10">{{ item.mortality | number }}</td>\n                                    <td *ngIf="ths[3].isVisible" class="p-10 fs-10">{{ item.mortality_rate | number : \'1.2-2\' }} %</td>\n                                    <td *ngIf="ths[4].isVisible" class="p-10 fs-10">{{ item.cull | number }}</td>\n                                    <td *ngIf="ths[5].isVisible" class="p-10 fs-10">{{ item.bird_count | number }}</td>\n                                    <td *ngIf="ths[6].isVisible" class="p-10 fs-10">{{ item.real_egg_count | number }} pcs</td>\n                                    <td *ngIf="ths[7].isVisible" class="p-10 fs-10">{{ item.production_rate | number : \'1.2-2\' }} %</td>\n                                    <td *ngIf="ths[8].isVisible" class="p-10 fs-10">{{ item.feeds.bags | number }}</td>\n                                    <td *ngIf="ths[9].isVisible" class="p-10 fs-10">{{ item.feeds.string }}</td>\n                                    <td *ngIf="ths[10].isVisible" class="p-10 fs-10">\n                                        <ng-container *ngFor="let medicine of item.medicine_name; let i = index">\n                                            {{ medicine.medicine }}{{ i < item.medicine_name.length - 1 ? \', \': \'\' }}\n                                        </ng-container>\n                                    </td>\n                                    <td *ngIf="ths[11].isVisible" class="p-10 fs-10">{{ item.sortingRecordstatus ? item.sortingRecordstatus : item.recordStatus }}</td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="!isLoaded">\n                                <tr>\n                                    <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                        <ngx-skeleton-loader [theme]="{\n                                        \'border-radius\' : \'5px\',\n                                        \'margin-bottom\' : \'0px\',\n                                        \'height\' : \'20px\'\n                                        }"></ngx-skeleton-loader>\n                                    </td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="isLoaded && items.length == 0">\n                                <tr>\n                                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                </tr>\n                            </ng-container>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n            <div class="row">\n                <div class="col-12 text-center">\n                <p class="mb-0">Please choose egg type</p>\n                </div>\n            </div>\n        </ng-container>\n        \n        <div class="row ml-0 mr-0 mt-20">\n            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                        <p class="fw-500 fs-14">Prepared By:</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                        <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                        <hr class="m-0">\n                        <p class="fs-12">Signature over Printed Name</p>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                        <p class="fw-500 fs-14">Approved By:</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                        <p class="mb-0 h-22"></p>\n                        <hr class="m-0">\n                        <p class="fs-12">Signature over Printed Name</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},VzVu:function(t,e,n){"use strict";n.r(e),e.default="<router-outlet></router-outlet>"},W5GM:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-15">\n        <div class="col-auto">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary btn-block" (click)="goBack(\'go_back\', \'feed_update\')">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-15">\n        <div class="col-12">\n            <h1 class="heading">Edit feed details</h1>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl-9 col-lg-7 col-md-7 col-sm-12 col-12">\n            <div class="container-card view-record">\n                <form [formGroup]="feedForm">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Feed Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="feeds"/>\n                                    <ng-container *ngIf="feedForm.controls.feeds.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.feeds.hasError(\'required\')">Feed name is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6"></div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Net weight of bags <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="kg_per_bag" (input)="convertWeight($event)" placeholder="0"/>\n                                        <div class="input-group-append">\n                                            <span class="input-group-text mb-10">kg</span>\n                                        </div>\n                                    </div>\n                                    <ng-container *ngIf="feedForm.controls.kg_per_bag.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.kg_per_bag.hasError(\'required\')">Net weight is required</p>\n                                        <p class="text-danger" *ngIf="feedForm.controls.kg_per_bag.hasError(\'min\')">Net weight must not be less than 0</p>\n                                        <p class="text-danger" *ngIf="feedForm.controls.kg_per_bag.hasError(\'max\')">Net weight must not exceed 10 digits</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">No. of Orders <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="pieces" placeholder="0"/>\n                                        <div class="input-group-append">\n                                            <span class="input-group-text mb-10">pcs</span>\n                                        </div>\n                                    </div>\n                                    <ng-container *ngIf="feedForm.controls.pieces.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.pieces.hasError(\'required\')">Number of orders is required</p>\n                                        <p class="text-danger" *ngIf="feedForm.controls.pieces.hasError(\'min\')">Number of orders must not be less than 0</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Converted net weight</label>\n                                    <div class="input-group">\n                                        <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="converted" disabled placeholder="0"/>\n                                        <div class="input-group-append">\n                                            <span class="input-group-text mb-10">g</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group p-relative">\n                                    <label class="text-secondary">Delivery Date <span class="required">*</span></label>\n                                    <input matInput [max]="max_date" [matDatepicker]="delivery_date_picker" placeholder="mm/dd/yyyy" formControlName="delivery_date" class="form-control mb-10">\n                                    <mat-datepicker-toggle matSuffix [for]="delivery_date_picker" class="p-absolute r-0 t-30"></mat-datepicker-toggle>\n                                    <mat-datepicker #delivery_date_picker></mat-datepicker>\n                                    <ng-container *ngIf="feedForm.controls.delivery_date.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.delivery_date.hasError(\'required\')">Delivery date is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Unit Price <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <div class="input-group-prepend">\n                                            <span class="input-group-text mb-10">Php</span>\n                                        </div>\n                                        <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="unit_price" placeholder="0.00"/>\n                                    </div>\n                                    <ng-container *ngIf="feedForm.controls.unit_price.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.unit_price.hasError(\'required\')">Price is required</p>\n                                        <p class="text-danger" *ngIf="feedForm.controls.unit_price.hasError(\'min\')">Price must not be less than 0</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group p-relative">\n                                    <label class="text-secondary">Expiration Date <span class="required">*</span></label>\n                                    <input matInput [min]="min_date" [matDatepicker]="expiration_date_picker" placeholder="mm/dd/yyyy" formControlName="expiration_date" class="form-control mb-10">\n                                    <mat-datepicker-toggle matSuffix [for]="expiration_date_picker" class="p-absolute r-0 t-30"></mat-datepicker-toggle>\n                                    <mat-datepicker #expiration_date_picker></mat-datepicker>\n                                    <ng-container *ngIf="feedForm.controls.expiration_date.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.expiration_date.hasError(\'required\')">Expiration date is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-12">\n                                <div class="form-group">\n                                    <label class="text-secondary">Remarks</label>\n                                    <textarea class="form-control mb-10" rows="3" maxlength="250" formControlName="remarks"></textarea>\n                                    <ng-container *ngIf="feedForm.controls.remarks.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.remarks.hasError(\'maxlength\')">Remarks should not exceed 250 characters</p>\n                                    </ng-container>\n                                    <p class="text-right text-secondary">{{ feedForm.controls.remarks.value.length }}/250</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 ml-xl-auto ml-lg-auto ml-md-auto">\n                                <button type="button" mat-flat-button class="btn btn-clear btn-block" (click)="goBack(\'form_cancel\', \'feed_update\')">\n                                    Cancel\n                                </button>\n                            </div>\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6">\n                                <button type="submit" mat-flat-button class="btn btn-primary btn-block" (click)="openModal(feedForm.value, \'feed_update\')" [disabled]="!feedForm.valid">\n                                    Save Changes\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-5 col-md-5 col-sm-12 col-12">\n            <div class="body-card pt-18 pl-24 pr-24 pb-43">\n                <h1 class="mini-heading fs-16 fw-500 mb-10">Delete Item?</h1>\n                <p class="fs-14 action-note">Deleting this item removed all the data on this dashboard.</p>\n                <button type="button" mat-flat-button class="btn btn-danger mt-30 btn-block" (click)="openModal(feedForm.value, \'feed_delete\')">\n                    <span class="fs-14">Yes, I understand - delete item</span></button>\n            </div>\n        </div>\n    </div>\n</section>'},W7sf:function(t,e,n){"use strict";n.r(e),e.default=""},W8G2:function(t,e,n){"use strict";n.r(e),e.default=""},"WO/7":function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-15">\n        <div class="col-auto">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary btn-block" (click)="goBack(\'go_back\', \'medicine_update\')">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-15">\n        <div class="col-12">\n            <h1 class="heading">Edit medicine details</h1>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl-9 col-lg-7 col-md-7 col-sm-12 col-12">\n            <div class="container-card view-record">\n                <form [formGroup]="medicineForm">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Medicine Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="medicine"/>\n                                    <ng-container *ngIf="medicineForm.controls.medicine.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.medicine.hasError(\'required\')">Medicine name is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group row">\n                                    <div class="col-12">\n                                        <label class="text-secondary">Unit <span class="required">*</span></label>\n                                    </div>\n                                    <div class="col-10">\n                                        <mat-select class="btn btn-drop-down btn-block text-left mb-10" formControlName="unit_id" placeholder="Select a unit of measurement">\n                                            <mat-option *ngFor="let unit of units" [value]="unit.id">{{ unit.unit }}</mat-option>\n                                        </mat-select>\n                                    </div>\n                                    <div class="col-2 pl-0">\n                                        <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()">\n                                            <i class="icon-add"></i>\n                                        </button>\n                                    </div>\n                                    <ng-container *ngIf="medicineForm.controls.unit_id.touched">\n                                        <div class="col-12">\n                                            <p class="text-danger" *ngIf="medicineForm.controls.unit_id.hasError(\'required\')">Unit is required</p>\n                                        </div>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Net weight <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="net_weight"/>\n                                    <ng-container *ngIf="medicineForm.controls.net_weight.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.net_weight.hasError(\'required\')">Net weight is required</p>\n                                        <p class="text-danger" *ngIf="medicineForm.controls.net_weight.hasError(\'min\')">Net weight must not be less than 0</p>\n                                        <p class="text-danger" *ngIf="medicineForm.controls.net_weight.hasError(\'max\')">Net weight must not exceed 10 digits</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">No. of Orders <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="pieces" placeholder="0"/>\n                                        <div class="input-group-append">\n                                            <span class="input-group-text mb-10">pcs</span>\n                                        </div>\n                                    </div>\n                                    <ng-container *ngIf="medicineForm.controls.pieces.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.pieces.hasError(\'required\')">Number of orders is required</p>\n                                        <p class="text-danger" *ngIf="medicineForm.controls.pieces.hasError(\'min\')">Number of orders must not be less than 0</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group p-relative">\n                                    <label class="text-secondary">Delivery Date <span class="required">*</span></label>\n                                    <input matInput [max]="max_date" [matDatepicker]="delivery_date_picker" placeholder="mm/dd/yyyy" formControlName="delivery_date" class="form-control mb-10">\n                                    <mat-datepicker-toggle matSuffix [for]="delivery_date_picker" class="p-absolute r-0 t-30"></mat-datepicker-toggle>\n                                    <mat-datepicker #delivery_date_picker></mat-datepicker>\n                                    <ng-container *ngIf="medicineForm.controls.delivery_date.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.delivery_date.hasError(\'required\')">Delivery date is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Unit Price <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <div class="input-group-prepend">\n                                            <span class="input-group-text mb-10">Php</span>\n                                        </div>\n                                        <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="unit_price" placeholder="0.00"/>\n                                    </div>\n                                    <ng-container *ngIf="medicineForm.controls.unit_price.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.unit_price.hasError(\'required\')">Price is required</p>\n                                        <p class="text-danger" *ngIf="medicineForm.controls.unit_price.hasError(\'min\')">Price must not be less than 0</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group p-relative">\n                                    <label class="text-secondary">Expiration Date <span class="required">*</span></label>\n                                    <input matInput [min]="min_date" [matDatepicker]="expiration_date_picker" placeholder="mm/dd/yyyy" formControlName="expiration_date" class="form-control mb-10">\n                                    <mat-datepicker-toggle matSuffix [for]="expiration_date_picker" class="p-absolute r-0 t-30"></mat-datepicker-toggle>\n                                    <mat-datepicker #expiration_date_picker></mat-datepicker>\n                                    <ng-container *ngIf="medicineForm.controls.expiration_date.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.expiration_date.hasError(\'required\')">Expiration date is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-12">\n                                <div class="form-group">\n                                    <label class="text-secondary">Remarks</label>\n                                    <textarea class="form-control mb-10" rows="3" maxlength="250" formControlName="remarks"></textarea>\n                                    <ng-container *ngIf="medicineForm.controls.remarks.touched">\n                                        <p class="text-danger" *ngIf="medicineForm.controls.remarks.hasError(\'maxlength\')">Remarks should not exceed 250 characters</p>\n                                    </ng-container>\n                                    <p class="text-right text-secondary">{{ medicineForm.controls.remarks.value.length }}/250</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 ml-xl-auto ml-lg-auto ml-md-auto">\n                                <button type="button" mat-flat-button class="btn btn-clear btn-block" (click)="goBack(\'form_cancel\', \'medicine_update\')">\n                                    Cancel\n                                </button>\n                            </div>\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6">\n                                <button type="submit" mat-flat-button class="btn btn-primary btn-block" (click)="openModal(medicineForm.value, \'medicine_update\')" [disabled]="!medicineForm.valid">\n                                    Save Changes\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-5 col-md-5 col-sm-12 col-12">\n            <ng-container *ngIf="item.isDeleteable">\n                <div class="body-card pt-18 pl-24 pr-24 pb-43">\n                    <h1 class="mini-heading fs-16 fw-500 mb-10">Delete Item?</h1>\n                    <p class="fs-14 action-note">Deleting this item removed all the data on this dashboard.</p>\n                    <button type="button" mat-flat-button class="btn btn-danger mt-30 btn-block" (click)="openModal(medicineForm.value, \'medicine_delete\')">\n                        <span class="fs-14">Yes, I understand - delete item</span>\n                    </button>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n</section>'},WyUq:function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="row">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <h5 class="mb-30">Daily House Harvest Report</h5>\n            </div>\n        </div>\n        <div class="row pb-10 ml-0 mr-0 border-bottom">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14">Prepared by:</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14 fw-500">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                <p class="mb-0 fs-14">Date:</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14 fw-500">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n            </div>\n        </div>\n        \n        <ng-container *ngIf="visible_columns.length > 1">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <table>\n                        <thead>\n                            <tr>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible && th.canToggle" class="p-10 fs-12">\n                                    {{ th.label }}\n                                </th>\n                                </ng-container>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <ng-container *ngIf="isLoaded && items.length > 0">\n                                <tr *ngFor="let item of items; let i = index" [ngClass]="{\'break-now\' : (i + 1) % 11 == 0}">\n                                    <td *ngIf="ths[0].isVisible" class="p-10 fs-10">{{ item.prepared_by_date | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                                    <td *ngIf="ths[1].isVisible" class="p-10 fs-10">{{ item.house_name.house_name }}</td>\n                                    <td *ngIf="ths[2].isVisible" class="p-10 fs-10">{{ item.age }}</td>\n                                    <td *ngIf="ths[3].isVisible" class="p-10 fs-10">{{ item.mortality | number }}</td>\n                                    <td *ngIf="ths[4].isVisible" class="p-10 fs-10">{{ item.mortality_rate | number : \'1.2-2\' }} %</td>\n                                    <td *ngIf="ths[5].isVisible" class="p-10 fs-10">{{ item.cull | number }}</td>\n                                    <td *ngIf="ths[6].isVisible" class="p-10 fs-10">{{ item.bird_count | number }}</td>\n                                    <td *ngIf="ths[7].isVisible" class="p-10 fs-10">{{ item.real_egg_count | number }} pcs</td>\n                                    <td *ngIf="ths[8].isVisible" class="p-10 fs-10">{{ item.production_rate | number : \'1.2-2\' }} %</td>\n                                    <td *ngIf="ths[9].isVisible" class="p-10 fs-10">{{ item.feeds.bags | number }}</td>\n                                    <td *ngIf="ths[10].isVisible" class="p-10 fs-10">{{ item.feeds.string }}</td>\n                                    <td *ngIf="ths[11].isVisible" class="p-10 fs-10">\n                                        <ng-container *ngFor="let medicine of item.medicine_name; let i = index">\n                                            {{ medicine.medicine }}{{ i < item.medicine_name.length - 1 ? \', \': \'\' }}\n                                        </ng-container>\n                                    </td>\n                                    <td *ngIf="ths[12].isVisible" class="p-10 fs-10">{{ item.sortingRecordstatus ? item.sortingRecordstatus : item.recordStatus }}</td>\n                                    <td *ngIf="ths[13].isVisible" class="p-10 fs-10">{{ item.flockman }}</td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="!isLoaded">\n                                <tr>\n                                    <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                        <ngx-skeleton-loader [theme]="{\n                                        \'border-radius\' : \'5px\',\n                                        \'margin-bottom\' : \'0px\',\n                                        \'height\' : \'20px\'\n                                        }"></ngx-skeleton-loader>\n                                    </td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="isLoaded && items.length == 0">\n                                <tr>\n                                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                </tr>\n                            </ng-container>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n            <div class="row">\n                <div class="col-12 text-center">\n                <p class="mb-0">Please choose egg type</p>\n                </div>\n            </div>\n        </ng-container>\n        \n        <div class="row ml-0 mr-0 mt-20">\n            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                        <p class="fw-500 fs-14">Prepared By:</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                        <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                        <hr class="m-0">\n                        <p class="fs-12">Signature over Printed Name</p>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                        <p class="fw-500 fs-14">Approved By:</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                        <p class="mb-0 h-22"></p>\n                        <hr class="m-0">\n                        <p class="fs-12">Signature over Printed Name</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},XM0N:function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="border">\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h5 class="mb-30">Production Per House</h5>\n                </div>\n            </div>\n            <div class="row pb-10 mb-30 ml-0 mr-0 border-bottom">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">Prepared by:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fw-500 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                    <p class="mb-0 fs-14">Date:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fw-500 fs-14">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <div class="row mb-30 ml-0 mr-0 break-now" *ngIf="isLoaded && items.length > 0">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                    <canvas baseChart \n                        [datasets]="barChartData"\n                        [labels]="barChartLabels"\n                        [options]="barChartOptions"\n                        [plugins]="barChartPlugins"\n                        [legend]="barChartLegend"\n                        [chartType]="barChartType">\n                    </canvas>\n                </div>\n                <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>All Dates</p>\n                </div>\n                <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p class="fw-500">{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <ng-container *ngIf="visible_columns.length > 1">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <div class="data-table p-relative table-listing" style="overflow: auto;">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th class="p-10 fs-12">\n                                        Date\n                                        <i *ngIf="order.order_by_column == \'received_by_date\'" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != \'received_by_date\' }"></i>\n                                    </th>\n                                    <ng-container *ngFor="let th of ths; let i = index">\n                                    <th *ngIf="th.isVisible" class="p-10 fs-12">\n                                        {{ th.label }}\n                                    </th>\n                                    </ng-container>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container *ngIf="isLoaded && items.length > 0">\n                                    <tr *ngFor="let item of items; let i = index">\n                                        <td class="p-10 fs-12">{{ item.grouped_date | date: \'MM/dd/yyyy\' }}</td>\n                                        <ng-container *ngFor="let item of item.house; let i = index">\n                                            <td *ngIf="ths[i].isVisible" class="p-10 fs-12">{{ item && item.daily_sorting_report ? (item.daily_sorting_report.sum | number) : 0 }}</td>\n                                        </ng-container>\n                                        </tr>\n                                </ng-container>\n                                <ng-container *ngIf="!isLoaded">\n                                    <tr>\n                                        <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                            <ngx-skeleton-loader [theme]="{\n                                            \'border-radius\' : \'5px\',\n                                            \'margin-bottom\' : \'0px\',\n                                            \'height\' : \'20px\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                                <ng-container *ngIf="isLoaded && items.length == 0">\n                                    <tr>\n                                    <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n                <div class="row">\n                    <div class="col-12 text-center">\n                    <p class="mb-0">Please choose egg type</p>\n                    </div>\n                </div>\n            </ng-container>\n            \n            <div class="row ml-0 mr-0 mt-20 border-bottom">\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Prepared By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Approved By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 h-22"></p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},YCJ9:function(t,e,n){"use strict";n.r(e),e.default=".card-radius {\n  border-radius: 10px;\n  box-shadow: 9px 10px 20px rgba(54, 60, 69, 0.1);\n}\n\n.card-line {\n  color: #EAEDF0;\n}"},YcrU:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-15">\n        <div class="col-auto">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary btn-block" (click)="goBack(\'go_back\', \'staff_update\')">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to staff profile</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-15">\n        <div class="col-12">\n            <h1 class="heading">Edit staff details</h1>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl-9 col-lg-7 col-md-7 col-sm-12 col-12">\n            <div class="container-card view-record">\n                <form [formGroup]="userForm">\n                    <div class="p-30">\n                        <h1 class="heading">Basic Info.</h1>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Select a role <span class="required">*</span></label>\n                                    <ng-container *ngIf="user_logged_in.id == user_info.id">\n                                        <mat-select class="btn btn-drop-down btn-block text-left mb-10" formControlName="role" placeholder="Select staff role" (selectionChange)="changeRole($event)" disabled>\n                                            <mat-option *ngFor="let role of roles" [value]="role.value">{{ role.label }}</mat-option>\n                                        </mat-select>\n                                    </ng-container>\n                                    <ng-container *ngIf="user_logged_in.id !== user_info.id">\n                                        <mat-select class="btn btn-drop-down btn-block text-left mb-10" formControlName="role"\n                                            placeholder="Select staff role" (selectionChange)="changeRole($event)">\n                                            <mat-option *ngFor="let role of roles" [value]="role.value">{{ role.label }}</mat-option>\n                                        </mat-select>\n                                    </ng-container>\n                                    <ng-container *ngIf="userForm.controls.role.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.role.hasError(\'required\')">Staff role is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">First Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="first_name" maxlength="50"/>\n                                    <ng-container *ngIf="userForm.controls.first_name.touched">\n                                        <p class="text-danger"\n                                            *ngIf="userForm.controls.first_name.hasError(\'required\')">First name is\n                                            required</p>\n                                            <p class="text-danger" *ngIf="userForm.controls.first_name.hasError(\'maxlength\')">First name must not exceed 50 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Last Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="last_name" maxlength="50"/>\n                                    <ng-container *ngIf="userForm.controls.last_name.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.last_name.hasError(\'required\')">\n                                            Last name is required</p>\n                                            <p class="text-danger" *ngIf="userForm.controls.last_name.hasError(\'maxlength\')">Last name must not exceed 50 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Username <span\n                                            class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="username" maxlength="50"/>\n                                    <ng-container *ngIf="userForm.controls.username.touched">\n                                        <p class="text-danger"\n                                            *ngIf="userForm.controls.username.hasError(\'required\')">Username is required</p>\n                                            <p class="text-danger" *ngIf="userForm.controls.username.hasError(\'maxlength\')">Username must not exceed 50 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6" *ngIf="userForm.controls.role.value == 4 || userForm.controls.role.value == 5">\n                                <div class="form-group">\n                                    <label class="text-secondary">Email <span\n                                            class="required">*</span></label>\n                                    <input class="form-control mb-10" type="email" formControlName="email" maxlength="50" minlength="6"/>\n                                    <ng-container *ngIf="userForm.controls.email.touched">\n                                        <p class="text-danger"\n                                            *ngIf="userForm.controls.email.hasError(\'required\')">Email is required</p>\n                                            <p class="text-danger"\n                                            *ngIf="userForm.controls.email.hasError(\'pattern\')">Email is invalid</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.email.hasError(\'maxlength\')">Email must not exceed 50 characters</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.email.hasError(\'minlength\')">Email must not contain at least 6 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Mobile Phone <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <div class="input-group-prepend">\n                                            <span class="input-group-text mb-10">+63</span>\n                                        </div>\n                                        <input type="tel" class="form-control mb-10" formControlName="number" placeholder="xxx xxx xxxx" maxlength="10"/>\n                                    </div>\n                                    <ng-container *ngIf="userForm.controls.number.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'required\')">\n                                            Mobile phone is required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'pattern\')">\n                                            Mobile phone is invalid</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'maxlength\')">\n                                            Mobile phone must not exceed 10 digits</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'minlength\')">\n                                            Mobile phone must be atleast 10 digits</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Address <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="location" maxlength="60"/>\n                                    <ng-container *ngIf="userForm.controls.location.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.location.hasError(\'required\')">\n                                            Address is required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.location.hasError(\'maxlength\')">Address must not exceed 60 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Password</label>\n                                    <input class="form-control mb-10" type="text" formControlName="password"/>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6">\n                                <div class="form-group">\n                            \n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 text-right">\n                                <div class="form-group">\n                                    <button type="button" class="btn btn-primary" (click)="generatePassword()">Generate</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="p-30">\n                        <h1 class="heading mb-30">Profile Photo</h1>\n                        <div class="row">\n                            <div class="col-xl-2 col-lg-3 col-md-3 col-sm-3 col-3">\n                                <img *ngIf="!isProfileImageLoaded && !profilePhoto" class="avatar img-responsive" src="../../../../../assets/images/profile.svg">\n                                <img *ngIf="!isProfileImageLoaded && profilePhoto" class="avatar img-responsive" [src]="profilePhoto">\n                                <image-cropper \n                                    class="avatar img-responsive {{isProfileImageLoaded ? \'\' : \'d-none\' }}"\n                                    [imageChangedEvent]="profilePhoto"\n                                    [maintainAspectRatio]="true"\n                                    [aspectRatio]="5 / 5"\n                                    [resizeToWidth]="100"\n                                    format="png,jpg,jpeg,ico"\n                                    (imageCropped)="imageProfilePhotoCropped($event)"\n                                    (imageLoaded)="imageProfileLoaded()"\n                                    [autoCrop]= "true"\n                                ></image-cropper>\n                            </div>\n                            <div class="col-xl-6 col-lg-9 col-md-9 col-sm-9 col-9">\n                                <p>Choose a file to upload:</p>\n                                <div class="form-group row">\n                                    <input id="file-upload" class="d-none" type="file" (change)="fileChange($event)" accept="image/jpeg, image/png"/>\n                                    <div class="col-xl-6 col-lg-6 col-md-12">\n                                        <label for="file-upload" class="btn btn-primary btn-block">\n                                            Choose a file\n                                        </label>\n                                    </div>\n                                    <div class="col-xl-6 col-lg-6 col-md-12 flex-align-center" *ngIf="!isProfileImageLoaded && !profilePhoto">\n                                        <p class="m-0 font-italic">No file chosen</p>\n                                    </div>\n                                    <p class="text-danger" *ngIf="profileUploadWrongFile">Image is not valid</p>\n                                    <p class="text-danger" *ngIf="uploadMaxLimitReached">Image must not exceed 1MB</p>\n  \n                                    <div class="col-xl-8 col-lg-12 col-md-12">\n                                        <p class="note fs-12 text-justify">Maximum image file size is 1MB. Try resizing it to atleast 500x500 px in\n                                            resolution.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-auto col-lg-auto col-md-6 ml-xl-auto ml-lg-auto">\n                                <button type="button" mat-flat-button class="btn btn-clear btn-block"\n                                    (click)="goBack(\'form_cancel\', \'staff_update\')">\n                                    Cancel\n                                </button>\n                            </div>\n                            <div class="col-xl-auto col-lg-auto col-md-6">\n                                <button type="submit" mat-flat-button class="btn btn-primary btn-block"\n                                    (click)="openModal(userForm.value, \'user_update\')" [disabled]="!userForm.valid">\n                                    Save Changes\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n\x3c!--         <div class="col-xl-3 col-lg-5 col-md-5 col-sm-12 col-12">\n            <div class="body-card pt-18 pl-24 pr-24 pb-43">\n                <ng-container *ngIf="user_logged_in.id == user_info.id">\n                    <h1 class="mini-heading fs-16 fw-500 mb-10">Note</h1>\n                    <p class="fs-14 action-note">Deleting your own account is prohibited.</p>\n                    <button type="button" mat-flat-button class="btn btn-secondary mt-30 btn-block" disabled>\n                        <span class="fs-14">Yes, I understand - delete user</span>\n                    </button>\n                </ng-container>\n                <ng-container *ngIf="user_logged_in.id != user_info.id">\n                    <h1 class="mini-heading fs-16 fw-500 mb-10">Delete User?</h1>\n                    <p class="fs-14 action-note">Deleting a user removes all the data on this dashboard.</p>\n                    <button type="button" mat-flat-button class="btn btn-danger mt-30 btn-block" (click)="openModal(userForm.value, \'user_delete\')">\n                        <span class="fs-14">Yes, I understand - delete user</span>\n                    </button>\n                </ng-container>\n            </div>\n        </div> --\x3e\n    </div>\n</section>'},Yh7n:function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="border">\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h5 class="mb-30">Overall Sales</h5>\n                </div>\n            </div>\n            <div class="row pb-10 ml-0 mr-0 border-bottom">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">Prepared by:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                    <p class="mb-0 fs-14">Date:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <div class="row mb-30 ml-0 mr-0 mt-10">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                    <p>Fully Paid Orders</p>\n                    <h3>₱ {{ item ? (item.fully_paid_orders | number : \'1.2-2\') : 0 }}</h3>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                    <p>Pending Orders</p>\n                    <h3>{{ item ? (item.pending_orders | number) : 0 }}</h3>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                    <p>Collectibles</p>\n                    <h3>{{ item ? (item.collectibles | number) : 0 }}</h3>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p>Collectible Amount</p>\n                    <h3>₱ {{ item ? (item.collectibles_amount | number : \'1.2-2\') : 0 }}</h3>\n                </div>\n            </div>\n            \x3c!-- <div class="row mb-30 ml-0 mr-0">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-10">Overall Harvested Eggs</p>\n                    <h1 class="heading">{{ overall_harvested_eggs | number }}</h1>\n                </div>\n            </div> --\x3e\n            <div class="row mb-30 ml-0 mr-0 break-now" *ngIf="isLoaded && items.length > 0">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                    <canvas baseChart \n                        [datasets]="lineChartData"\n                        [labels]="lineChartLabels"\n                        [options]="lineChartOptions"\n                        [plugins]="lineChartPlugins"\n                        [legend]="lineChartLegend"\n                        [chartType]="lineChartType">\n                    </canvas>\n                </div>\n                <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>All Dates</p>\n                </div>\n                <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <ng-container *ngIf="visible_columns.length > 1">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <div class="data-table p-relative table-listing" style="overflow: auto;">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <ng-container *ngFor="let th of ths; let i = index">\n                                    <th *ngIf="th.isVisible" class="p-10 fs-12">\n                                        {{ th.label }}\n                                    </th>\n                                    </ng-container>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container *ngIf="isLoaded && items.length > 0">\n                                    <tr *ngFor="let item of items; let i = index">\n                                        <td *ngIf="ths[0].isVisible" class="p-10 fs-12">{{ item.date | date: \'MM/dd/yyyy\' }}</td>\n                                        <td *ngIf="ths[1].isVisible" class="p-10 fs-12">₱ {{ item.total | number : \'1.2-2\' }}</td>\n                                    </tr>\n                                </ng-container>\n                                <ng-container *ngIf="!isLoaded">\n                                    <tr>\n                                        <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                            <ngx-skeleton-loader [theme]="{\n                                            \'border-radius\' : \'5px\',\n                                            \'margin-bottom\' : \'0px\',\n                                            \'height\' : \'20px\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                                <ng-container *ngIf="isLoaded && items.length == 0">\n                                    <tr>\n                                    <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n                <div class="row">\n                    <div class="col-12 text-center">\n                    <p class="mb-0">Please choose egg type</p>\n                    </div>\n                </div>\n            </ng-container>\n            \n            <div class="row ml-0 mr-0 mt-20 border-bottom">\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Prepared By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Approved By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 h-22"></p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},"Z+OA":function(t,e,n){"use strict";n.r(e),e.default=""},"Z+Vu":function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="row">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <h5 class="mb-30">Fresh Eggs Inventory/Stocks</h5>\n            </div>\n        </div>\n        <div class="row pb-10 ml-0 mr-0 border-bottom">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14">Prepared by:</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14 fw-500">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                <p class="mb-0 fs-14">Date:</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-0 fs-14 fw-500">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n            </div>\n        </div>\n        \n        <ng-container *ngIf="visible_columns.length > 0">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <table>\n                    <thead>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible && th.canToggle" class="p-10 fs-12">\n                                    {{ th.label }}\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <ng-container *ngIf="isLoaded && items.length > 0">\n                            <tr *ngFor="let item of items; let i = index" [ngClass]="{\'break-now\' : (i + 1) % 11 == 0}">\n                                <td *ngIf="ths[0].isVisible" class="p-10 fs-12">{{ item.created_at | date: \'MM/dd/yyyy\' }}</td>\n                                <td *ngIf="ths[1].isVisible" class="p-10 fs-12">{{ item.beginning_stocks | number }}</td>\n                                <td *ngIf="ths[2].isVisible" class="p-10 fs-12">{{ item.total_harvested | number }}</td>\n                                <td *ngIf="ths[3].isVisible" class="p-10 fs-12">{{ item.waste_sales | number }}</td>\n                                <td *ngIf="ths[4].isVisible" class="p-10 fs-12">{{ item.total_remaining_stocks | number }}</td>\n                            </tr>\n                        </ng-container>\n                        <ng-container *ngIf="!isLoaded">\n                            <tr>\n                                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                <ngx-skeleton-loader [theme]="{\n                                    \'border-radius\' : \'5px\',\n                                    \'margin-bottom\' : \'0px\',\n                                    \'height\' : \'20px\'\n                                }"></ngx-skeleton-loader>\n                                </td>\n                            </tr>\n                        </ng-container>\n                        <ng-container *ngIf="isLoaded && items.length == 0">\n                            <tr>\n                                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                            </tr>\n                        </ng-container>\n                    </tbody>\n                </table>\n            </div>\n        </ng-container>\n        <div class="row ml-0 mr-0 mt-20">\n            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                        <p class="fw-500 fs-14">Prepared By:</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                        <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                        <hr class="m-0">\n                        <p class="fs-12">Signature over Printed Name</p>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                        <p class="fw-500 fs-14">Approved By:</p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                        <p class="mb-0 h-22"></p>\n                        <hr class="m-0">\n                        <p class="fs-12">Signature over Printed Name</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},ZeXu:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-15">\n        <div class="col-xl-auto offset-xl-2">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary" (click)="goBack(\'go_back\', \'feed_create\')">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-15">\n        <div class="col-xl-8 offset-xl-2">\n            <h1 class="heading">Add new feed</h1>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl-8 offset-xl-2">\n            <div class="container-card view-record">\n                <form [formGroup]="feedForm">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Feed Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="feeds"/>\n                                    <ng-container *ngIf="feedForm.controls.feeds.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.feeds.hasError(\'required\')">Feed name is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6"></div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Net weight of bags <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="kg_per_bag" (input)="convertWeight($event)" placeholder="0"/>\n                                        <div class="input-group-append">\n                                            <span class="input-group-text mb-10">kg</span>\n                                        </div>\n                                    </div>\n                                    <ng-container *ngIf="feedForm.controls.kg_per_bag.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.kg_per_bag.hasError(\'required\')">Net weight is required</p>\n                                        <p class="text-danger" *ngIf="feedForm.controls.kg_per_bag.hasError(\'min\')">Net weight must not be less than 0</p>\n                                        <p class="text-danger" *ngIf="feedForm.controls.kg_per_bag.hasError(\'max\')">Net weight must not exceed 10 digits</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">No. of Orders <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="pieces" placeholder="0"/>\n                                        <div class="input-group-append">\n                                            <span class="input-group-text mb-10">pcs</span>\n                                        </div>\n                                    </div>\n                                    <ng-container *ngIf="feedForm.controls.pieces.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.pieces.hasError(\'required\')">Number of orders is required</p>\n                                        <p class="text-danger" *ngIf="feedForm.controls.pieces.hasError(\'min\')">Number of orders must not be less than 0</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Converted net weight</label>\n                                    <div class="input-group">\n                                        <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="converted" disabled placeholder="0"/>\n                                        <div class="input-group-append">\n                                            <span class="input-group-text mb-10">g</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group p-relative">\n                                    <label class="text-secondary">Delivery Date <span class="required">*</span></label>\n                                    <input matInput [max]="max_date" [matDatepicker]="delivery_date_picker" placeholder="mm/dd/yyyy" formControlName="delivery_date" class="form-control mb-10">\n                                    <mat-datepicker-toggle matSuffix [for]="delivery_date_picker" class="p-absolute r-0 t-30"></mat-datepicker-toggle>\n                                    <mat-datepicker #delivery_date_picker></mat-datepicker>\n                                    <ng-container *ngIf="feedForm.controls.delivery_date.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.delivery_date.hasError(\'required\')">Delivery date is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Unit Price <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <div class="input-group-prepend">\n                                            <span class="input-group-text mb-10">Php</span>\n                                        </div>\n                                        <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="unit_price" placeholder="0.00"/>\n                                    </div>\n                                    <ng-container *ngIf="feedForm.controls.unit_price.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.unit_price.hasError(\'required\')">Price is required</p>\n                                        <p class="text-danger" *ngIf="feedForm.controls.unit_price.hasError(\'min\')">Price must not be less than 0</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group p-relative">\n                                    <label class="text-secondary">Expiration Date <span class="required">*</span></label>\n                                    <input matInput [min]="min_date" [matDatepicker]="expiration_date_picker" placeholder="mm/dd/yyyy" formControlName="expiration_date" class="form-control mb-10">\n                                    <mat-datepicker-toggle matSuffix [for]="expiration_date_picker" class="p-absolute r-0 t-30"></mat-datepicker-toggle>\n                                    <mat-datepicker #expiration_date_picker></mat-datepicker>\n                                    <ng-container *ngIf="feedForm.controls.expiration_date.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.expiration_date.hasError(\'required\')">Expiration date is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-12">\n                                <div class="form-group">\n                                    <label class="text-secondary">Remarks</label>\n                                    <textarea class="form-control mb-10" rows="3" maxlength="250" formControlName="remarks"></textarea>\n                                    <ng-container *ngIf="feedForm.controls.remarks.touched">\n                                        <p class="text-danger" *ngIf="feedForm.controls.remarks.hasError(\'maxlength\')">Remarks should not exceed 250 characters</p>\n                                    </ng-container>\n                                    <p class="text-right text-secondary">{{ feedForm.controls.remarks.value.length }}/250</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 ml-xl-auto ml-lg-auto ml-md-auto">\n                                <button type="button" mat-flat-button class="btn btn-clear btn-block" (click)="goBack(\'form_cancel\', \'feed_create\')">\n                                    Cancel\n                                </button>\n                            </div>\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6">\n                                <button type="submit" mat-flat-button class="btn btn-primary btn-block" (click)="openModal(feedForm.value, \'feed_save\')" [disabled]="!feedForm.valid">\n                                    <i class="icon-add"></i>\n                                    <span class="ml-15">Add Item</span>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>'},b8v5:function(t,e,n){"use strict";n.r(e),e.default=".date-view {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-align: center;\n          align-items: center;\n  flex-wrap: wrap;\n}\n.date-view p {\n  margin-bottom: 0;\n}\n.date-view .date {\n  border-right: 1px solid #C1C2C3;\n}\n.date-view .view-num {\n  background: #D1D7DE;\n  border-radius: 5px;\n  padding: 7px 11px;\n}\n.date-view .last {\n  font-style: italic;\n  color: #8D8F93;\n}\n.custom-card {\n  background: #FFFFFF;\n  border-radius: 5px;\n  padding-top: 22px;\n  padding-left: 17px;\n  padding-bottom: 30px;\n  margin: 14px 15px;\n  max-height: 115px;\n}\n.masonry-item {\n  width: 100%;\n  /* margin-left: -15px;\n  margin-right: -15px; */\n}\n.masonry-item .body-card {\n  width: calc(50% - 15px);\n  margin-bottom: 30px;\n}\n.body-card {\n  padding: 24px;\n  border: none;\n}\n.meds-title [class*=col-] {\n  border-bottom: 2px solid #e5eeff;\n}\n.meds-title [class*=col-] .mini-heading {\n  color: #72787F;\n}\n.meds-cont [class*=col-] {\n  border-bottom: 1px solid #e5eeff;\n  /* &:last-child {\n      border-bottom: none;\n  } */\n}\n.scrollable {\n  overflow-y: scroll;\n}"},bFxj:function(t,e,n){"use strict";n.r(e),e.default="p {\n  font-size: 16px;\n  color: #72787F;\n  text-transform: none;\n}\n\n.heading {\n  font-size: 24px;\n  font-weight: bold;\n  color: #1E2631;\n  text-transform: none;\n}\n\n.sub-heading {\n  color: #72787F;\n}\n\n.sub-heading.italic {\n  font-style: italic;\n}\n\n.sub-heading strong {\n  color: #1E2631;\n}\n\n.mini-heading {\n  font-size: 20px;\n  font-weight: 500;\n  color: #1E2631;\n  text-transform: none;\n}\n\n.card-heading {\n  font-size: 13px;\n  font-weight: normal;\n  text-transform: uppercase;\n  color: #72787F;\n}\n\n.sidebar {\n  color: #1E2631;\n}\n\n.sidebar ul li {\n  font-size: 16px;\n}\n\n.sidebar ul li a.main-nav {\n  color: #72787F;\n}\n\n.sidebar ul li a.main-nav.sub {\n  font-size: 14px;\n}\n\n.sidebar ul li a.main-nav:hover {\n  font-weight: 500;\n  color: #1E2631;\n}\n\n.sidebar ul li.active a {\n  font-weight: 500;\n  color: #1E2631;\n}\n\nmat-checkbox label {\n  font-size: 16px !important;\n}\n\n.vertical-text {\n  transform: rotate(-90deg);\n  -webkit-transform: rotate(-90deg);\n  -moz-transform: rotate(-90deg);\n  -ms-transform: rotate(-90deg);\n  -o-transform: rotate(-90deg);\n}\n\n.vertical-text-full {\n  width: -webkit-max-content;\n  width: -moz-max-content;\n  width: max-content;\n  position: absolute;\n  left: -25%;\n  top: 50%;\n}\n\n.body-card h1 {\n  font-weight: normal;\n}\n\n.body-card .action-note {\n  line-height: 21px;\n}\n\n.body-card .btn-secondary {\n  width: 100%;\n  padding-top: 9px;\n  padding-bottom: 5px;\n}\n\n.body-card .btn-secondary .cus-layer {\n  height: 100%;\n}\n\n.body-card .row .row {\n  width: 100% !important;\n}\n\n.body-card .row .row p {\n  color: #72787F;\n}\n\n.field-pasword {\n  border: transparent;\n  outline: none;\n  border: 0;\n}"},bPis:function(t,e,n){"use strict";n.r(e),e.default='<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="border">\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h5 class="mb-30">Medicine Consumption</h5>\n                </div>\n            </div>\n            <div class="row pb-10 mb-30 ml-0 mr-0 border-bottom">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">Prepared by:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                    <p class="mb-0 fs-14">Date:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <div class="row mb-30 ml-0 mr-0 break-now" *ngIf="isLoaded && items.length > 0">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                    <canvas baseChart \n                        [datasets]="barChartData"\n                        [labels]="barChartLabels"\n                        [options]="barChartOptions"\n                        [plugins]="barChartPlugins"\n                        [legend]="barChartLegend"\n                        [chartType]="barChartType">\n                    </canvas>\n                </div>\n                <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>All Dates</p>\n                </div>\n                <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <ng-container *ngIf="visible_columns.length > 1">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <div class="data-table p-relative table-listing" style="overflow: auto;">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th class="p-10 fs-12">\n                                        Date\n                                        <i *ngIf="order.order_by_column == \'received_by_date\'" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != \'received_by_date\' }"></i>\n                                    </th>\n                                    <ng-container *ngFor="let th of ths; let i = index">\n                                    <th *ngIf="th.isVisible" class="p-10 fs-12">\n                                        {{ th.label }}\n                                    </th>\n                                    </ng-container>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container *ngIf="isLoaded && items.length > 0">\n                                    <tr *ngFor="let item of items; let i = index">\n                                        <td>{{ item.date | date: \'LL/dd/yyyy\'}}</td>\n                                        <ng-container *ngFor="let house of item.house; let x = index">\n                                            <td *ngIf="ths[x].isVisible">\n                                                {{ house.medicine_volume }}\n                                            </td>\n                                        </ng-container>\n                                    </tr>\n                                </ng-container>\n                                <ng-container *ngIf="!isLoaded">\n                                    <tr>\n                                        <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                            <ngx-skeleton-loader [theme]="{\n                                            \'border-radius\' : \'5px\',\n                                            \'margin-bottom\' : \'0px\',\n                                            \'height\' : \'20px\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                                <ng-container *ngIf="isLoaded && items.length == 0">\n                                    <tr>\n                                    <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n                <div class="row">\n                    <div class="col-12 text-center">\n                    <p class="mb-0">Please choose egg type</p>\n                    </div>\n                </div>\n            </ng-container>\n            \n            <div class="row ml-0 mr-0 mt-20 border-bottom">\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Prepared By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Approved By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 h-22"></p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>\n'},cPi2:function(t,e,n){"use strict";n.r(e),e.default=""},cgRm:function(t,e,n){"use strict";n.r(e),e.default=".btn-back {\n  color: #444444;\n  border: 2px solid #444444;\n  background-color: #fafafa;\n}\n\n.btn-back:hover {\n  color: #1E2631;\n}"},cgvz:function(t,e,n){"use strict";n.r(e),e.default=""},dkWk:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <h1 class="heading">Inflow/Outflow</h1>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()" [disabled]="!isLoaded">\n                <i class="icon-download"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n                <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n            </button>\n        </div>\n    </div>\n    <div class="container-card p-30 mb-25">\n        <div class="row mb-30">\n            <div class="col-xl-auto col-lg-auto col-md-12 col-sm-12 col-12">\n                <div class="row mb-30">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                        <p>Total Eggs Inflow</p>\n                        <h3>{{ item ? (item.total_egg_inflow | number) : 0 }}</h3>\n                    </div>\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                        <p>Total Eggs Outflow</p>\n                        <h3>{{ item ? (item.total_egg_outflow | number) : 0 }}</h3>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-12 col-sm-12 col-12 ml-auto">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                        <div class="form-group mb-0">\n                            <div class="inner-group in-line">\n                                <label class="mr-15">Show:</label>\n\n                                <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                                <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                                <button type="button" mat-flat-button class="btn btn-drop-down btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? (from | date: \'MMMM dd, yyyy\') + \' - \' + (to | date: \'MMMM dd, yyyy\') : \'Choose sales dates\' }}\n                                    <i class="icon-arrow-drop-down ml-5 p-initial"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row" *ngIf="from && to">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                        <button type="button" mat-flat-button class="btn btn-clear btn-sm" (click)="clearFilters()">Reset Filter</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \x3c!-- <div class="row mb-30">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                <p>Fully Paid Orders</p>\n                <h3>₱ {{ item ? (item.fully_paid_orders | number : \'1.2-2\') : 0 }}</h3>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                <p>Pending Orders</p>\n                <h3>{{ item ? (item.pending_orders | number) : 0 }}</h3>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                <p>Collectibles</p>\n                <h3>{{ item ? (item.collectibles | number) : 0 }}</h3>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p>Collectible Amount</p>\n                <h3>₱ {{ item ? (item.collectibles_amount | number : \'1.2-2\') : 0 }}</h3>\n            </div>\n        </div> --\x3e\n        \n        <div class="row mb-30" *ngIf="isLoaded && items.length > 0">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                <canvas baseChart \n                    [datasets]="barChartData"\n                    [labels]="barChartLabels"\n                    [options]="barChartOptions"\n                    [plugins]="barChartPlugins"\n                    [legend]="barChartLegend"\n                    [chartType]="barChartType">\n                </canvas>\n            </div>\n            <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p>All Dates</p>\n            </div>\n            <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n            </div>\n        </div>\n    </div>\n    <div class="container-card p-30">\n        <div class="row mb-25">\n          <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n            <div class="form-group">\n              <div class="inner-group in-line">\n                <label class="mr-15">Show</label>\n                <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                    <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n                </mat-select>\n                <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                    <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n                </mat-select>\n                <label>of {{ totalItems | number }} entries</label>\n              </div>\n            </div>\n          </div>\n          \x3c!-- <div class="col-xl-3 offset-xl-2 col-lg-4 offset-lg-2 col-md-8 col-sm-9 col-8">\n            <div class="form-group">\n              <div class="inner-group search">\n                <i class="icon-search"></i>\n                <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n                  (keydown.enter)="searchItem()" />\n              </div>\n            </div>\n          </div> --\x3e\n          \x3c!-- <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n            <div class="form-group">\n              <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n                <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n              </button>\n            </div>\n          </div> --\x3e\n        </div>\n        <ng-container *ngIf="visible_columns.length > 0">\n          <div class="data-table p-relative table-listing" style="overflow: auto;">\n            <table>\n              <thead>\n                <tr>\n                  <ng-container *ngFor="let th of ths; let i = index">\n                    <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                      {{ th.label }}\n                      <ng-container *ngIf="th.canSort">\n                        <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                        <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                      </ng-container>\n                    </th>\n                  </ng-container>\n                </tr>\n              </thead>\n              <tbody>\n                <ng-container *ngIf="isLoaded && items.length > 0">\n                  <tr *ngFor="let item of items; let i = index">\n                    <td *ngIf="ths[0].isVisible" class="w-25-per">{{ item.created_at | date: \'MM/dd/yyyy\' }}</td>\n                    <td *ngIf="ths[1].isVisible" class="w-25-per">{{ item.egg_in | number }}</td>\n                    <td *ngIf="ths[2].isVisible" class="w-25-per">{{ item.egg_out | number }}</td>\n                    <td *ngIf="ths[3].isVisible" class="w-25-per">\n                      <button type="button" mat-flat-button class="btn btn-clear text-blue" [routerLink]="[ \'/inventory-stocks/fresh-eggs/view\', item.date]">\n                        <i class="icon-datatables-view"></i>\n                        View\n                      </button>\n                    </td>\n                  </tr>\n                </ng-container>\n                <ng-container *ngIf="!isLoaded">\n                  <tr>\n                    <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                      <ngx-skeleton-loader [theme]="{\n                        \'border-radius\' : \'5px\',\n                        \'margin-bottom\' : \'0px\',\n                        \'height\' : \'20px\'\n                      }"></ngx-skeleton-loader>\n                    </td>\n                  </tr>\n                </ng-container>\n                <ng-container *ngIf="isLoaded && items.length == 0">\n                  <tr>\n                    <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                  </tr>\n                </ng-container>\n              </tbody>\n              <tfoot>\n                <tr>\n                  <ng-container *ngFor="let th of ths; let i = index">\n                    <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                      {{ th.label }}\n                      <ng-container *ngIf="th.canSort">\n                        <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                        <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                      </ng-container>\n                    </th>\n                  </ng-container>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n          <div class="row">\n            <div class="col-12 text-center">\n              <p class="mb-0">Please choose column visibility</p>\n            </div>\n          </div>\n        </ng-container>\n        <div class="row mt-35">\n          <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n            <div class="form-group">\n              <div class="inner-group in-line">\n                <label class="mr-15">Show</label>\n                <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                    <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n                </mat-select>\n                <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                    <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n                </mat-select>\n                <label>of {{ totalItems | number }} entries</label>\n              </div>\n            </div>\n          </div>\n          <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n            <ul class="paginate pull-right">\n              <li class="link cursor-pointer" *ngIf="prev_page">\n                  <a (click)="gotoPage(prev_page)">\n                      Previous\n                  </a>\n              </li>\n              <ng-container *ngFor="let x of counter(totalPages); let i = index">\n                <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n              </ng-container>\n              <li class="link cursor-pointer" *ngIf="next_page">\n                  <a (click)="gotoPage(next_page)">\n                      Next\n                  </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n</section>'},"duk+":function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-9 col-9">\n            <h1 class="heading">Medicine Management</h1>\n            <p class="sub-heading mb-8">Types of medicines: <strong>{{ totalItems }}</strong></p>\n            <ng-container *ngIf="showtimeago">\n                <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n                <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'10px\',\n                    \'height\' : \'20px\'\n                }"></ngx-skeleton-loader>\n            </ng-container>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-3 col-3 ml-auto">\n            <button mat-flat-button class="btn btn-primary btn-block" routerLink="/feeds-medicine-management/medicine/create">\n                <i class="icon-add"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">Add new medicine</span>\n            </button>\n        </div>\n    </div>\n\n    <div class="container-card p-30 mb-25" *ngIf="show_filter">\n        <div class="row">\n            <div class="col-12">\n                <h6 class="card-heading">Filters</h6>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group">\n                            <input [matDatepicker]="delivery_date_picker" class="w-0 p-0 border-0" (dateChange)="chooseDeliveryDate($event)">\n                            <mat-datepicker #delivery_date_picker></mat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="delivery_date_picker.open()">{{ delivery_date ? \'Delivery Date - \' + (delivery_date | date: \'MM/dd/yyyy\') : \'Delivery Date\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group">\n                            <input [matDatepicker]="expiration_date_picker" class="w-0 p-0 border-0" (dateChange)="chooseExpirationDate($event)">\n                            <mat-datepicker #expiration_date_picker></mat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="expiration_date_picker.open()">{{ expiration_date ? \'Expiration Date - \' + (expiration_date | date: \'MM/dd/yyyy\') : \'Expiration Date\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                <div class="form-group">\n                    <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">Clear Filters</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="container-card p-30">\n        <div class="row mb-25">\n            <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n                <div class="form-group">\n                    <div class="inner-group in-line">\n                        <label class="mr-15">Show</label>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                            <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n                        </mat-select>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                            <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n                        </mat-select>\n                        <label>of {{ totalItems | number }} entries</label>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-3 offset-xl-2 col-lg-4 offset-lg-2 col-md-8 col-sm-9 col-8">\n                <div class="form-group">\n                    <div class="inner-group search">\n                        <i class="icon-search"></i>\n                        <input type="text" class="form-control" id="inputSearch" placeholder="Search medicine name" [(ngModel)]="search" (keydown.enter)="searchItem()" />\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n                <div class="form-group">\n                    <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n                        <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n                        <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <ng-container *ngIf="visible_columns.length > 0">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n                    <thead>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                        <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <ng-container *ngIf="isLoaded && items.length > 0">\n                            <tr *ngFor="let item of items; let i = index" [routerLink]="!item.isExpired ? [\'/feeds-medicine-management/medicine/update\', item.id] : return">\n                                <td class="w-10-per">{{ item.medicine }} <span class="text-danger font-italic" *ngIf="item.isExpired">(Expired)</span></td>\n                                <td>{{ item.medicine_unit.unit }}</td>\n                                <td>{{ item.net_weight | number : \'1.2-2\' }}</td>\n                                <td>{{ item.pieces | number }}</td>\n                                <td>{{ item.consumed | number : \'1.2-2\' }}</td>\n                                <td>{{ item.remaining | number : \'1.2-2\' }}</td>\n                                <td>{{ item.created_at | date: \'MM/dd/yyyy\' }}</td>\n                                <td>{{ item.delivery_date | date: \'MM/dd/yyyy\' }}</td>\n                                <td>{{ item.unit_price | number : \'1.2-2\' }}</td>\n                                <td [ngClass]="{ \'text-danger\' : item.isExpired }">{{ item.expiration_date | date: \'MM/dd/yyyy\' }}</td>\n                                <td class="w-20-per">{{ item.remarks }}</td>\n                                <td>\n                                    <button type="button" *ngIf="!item.isExpired" mat-flat-button class="btn btn-clear" [routerLink]="[\'/feeds-medicine-management/medicine/update\', item.id]">\n                                        <i class="icon-datatables-edit"></i>\n                                        Edit\n                                    </button>\n                                </td>\n                            </tr>\n                        </ng-container>\n                        <ng-container *ngIf="!isLoaded">\n                            <tr>\n                                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                    <ngx-skeleton-loader [theme]="{\n                                        \'border-radius\' : \'5px\',\n                                        \'margin-bottom\' : \'0px\',\n                                        \'height\' : \'20px\'\n                                    }"></ngx-skeleton-loader>\n                                </td>\n                            </tr>\n                        </ng-container>\n                        <ng-container *ngIf="isLoaded && items.length == 0">\n                            <tr>\n                                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                            </tr>\n                        </ng-container>\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                        <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n            <div class="row">\n              <div class="col-12 text-center">\n                <p class="mb-0">Please choose column visibility</p>\n              </div>\n            </div>\n        </ng-container>\n        <div class="row mt-35">\n            <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n                <div class="form-group">\n                    <div class="inner-group in-line">\n                        <label class="mr-15">Show</label>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                            <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n                        </mat-select>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                            <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n                        </mat-select>\n                        <label>of {{ totalItems | number }} entries</label>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n                <ul class="paginate pull-right">\n                    <li class="link cursor-pointer" *ngIf="prev_page">\n                        <a (click)="gotoPage(prev_page)">Previous</a>\n                    </li>\n                    <ng-container *ngFor="let x of counter(totalPages); let i = index">\n                        <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n                    </ng-container>\n                    <li class="link cursor-pointer" *ngIf="next_page">\n                        <a (click)="gotoPage(next_page)">Next</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</section>'},duur:function(t,e,n){"use strict";n.r(e),e.default=""},dwFI:function(t,e,n){"use strict";n.r(e),e.default='<div class="row">\n    <div class="col-12">\n        <h6 class="mini-heading">{{ modal_title }}</h6>\n    </div>\n</div>\n<form [formGroup]="discountForm" (ngSubmit)="submit()">\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">{{ modal_message }}</label>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group" *ngIf="item && item.mode_of_payment == 1">\n                <label class="text-secondary">Total Price</label>\n                <p>₱ {{ item ? (item.total_price | number : \'1.2-2\') : 0 }}</p>\n            </div>\n            <div class="form-group" *ngIf="item && item.mode_of_payment == 2">\n                <label class="text-secondary">Credited Price</label>\n                <p>₱ {{ item ? (item.payment.balance | number : \'1.2-2\') : 0 }}</p>\n            </div>\n            <div class="form-group" *ngIf="item && item.mode_of_payment == 3">\n                <label class="text-secondary">Initial amount to pay</label>\n                <p>₱ {{ item ? (item.payment.payment | number : \'1.2-2\') : 0 }}</p>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">Discount Amount <span class="required">*</span></label>\n                <input type="number" formControlName="discount" class="form-control mb-10" (input)="calculateFinalPrice($event)"/>\n                <ng-container *ngIf="discountForm.controls.discount.touched">\n                    <p class="text-danger" *ngIf="discountForm.controls.discount.hasError(\'required\')">Discount is required</p>\n                    <p class="text-danger" *ngIf="discountForm.controls.discount.hasError(\'min\')">Discount must be more than zero</p>\n                    <p class="text-danger" *ngIf="discountForm.controls.discount.hasError(\'max\')">Discount must not exceed the total price</p>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">Discounted Price</label>\n                <p>₱ {{ discountForm.controls.total_price.value | number : \'1.2-2\' }}</p>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-sm btn-block btn-clear" (click)="closeModal()">Cancel</button>\n        </div>\n        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6">\n            <button type="submit" mat-flat-button class="btn btn-sm btn-primary btn-block" [disabled]="!discountForm.valid">Save</button>\n        </div>\n    </div>\n</form>'},e6vJ:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-10">\n            <h1 class="heading">View House/Building Details</h1>\n        </div>\n        <div class="col-2">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary btn-block" (click)="goBack()">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-30">\n        <div class="col-9">\n            <div class="container-card view-record p-30">\n                <div class="row">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td class="w-30-per alt">House/Building</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ house_data.house }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td class="w-30-per alt">Daily Report Progress</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ house_data.daily_report_progress }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td class="w-30-per alt">Month</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ house_data.current_age_of_chicken ? (house_data.current_age_of_chicken.created_at | date : \'MMMM\') : \'\' }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td class="w-30-per alt">Year</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ house_data.current_age_of_chicken ? (house_data.current_age_of_chicken.created_at | date : \'yyyy\') : \'\' }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td class="w-30-per alt">Beginning Population of Chickens</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ house_data.beginning_population }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td class="w-30-per alt">Age of Chickens</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ house_data.age_chicken.age }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12">\n\x3c!--             <div class="body-card pt-18 pl-24 pr-24 pb-43">\n                <h1 class="mini-heading fs-16 fw-500 mb-10">Actions</h1>\n                <p class="fs-14 action-note">Here are the actions you can apply for this order details.</p>\n                <button type="button" class="btn btn-secondary mt-30 btn-block" (click)="updateMed()" mat-flat-button>\n                    <div class="cus-layer ml-auto mr-auto">\n                        <i class="icon-edit"></i>\n                        <span class="ml-8 fs-14">Edit Details</span>\n                    </div>\n                </button>\n            </div>\n            <br> --\x3e\n            <div class="body-card pt-18 pl-24 pr-24 pb-38">\n                <h1 class="mini-heading fs-16 fw-500 mb-20">Download Report</h1>\n                <p class="fs-14 action-note">You can download this report as:</p>\n                <button type="button" mat-flat-button class="btn btn-primary btn-block mb-12" (click)="openPdf()" [disabled]="!isLoaded">\n                    <span class="ml-15">Download as PDF</span>\n                </button>\n                <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportToCsv()" [disabled]="!isLoaded">\n                    <span class="ml-15">Download as CSV</span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-9 col-9">\n            <h1 class="heading">Feeds and Medicine Consumption Daily Report</h1>\n        </div>\n    </div>\n    <div class="container-card p-30 mb-25" *ngIf="show_filter">\n        <div class="row">\n            <div class="col-12">\n                <h6 class="card-heading">Filters</h6>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n                <div class="row">\n                    <div class="col-xl-2 col-lg-3 col-md-4 col-sm-12 col-12">\n                        <div class="form-group">\n\x3c!--                             <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="role_id"\n                                (selectionChange)="changeRole($event)" placeholder="Staff Role">\n                                <mat-option *ngFor="let role of roles" [value]="role.value">{{ role.label }}</mat-option>\n                            </mat-select> --\x3e\n                        </div>\n                    </div>\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group">\n\x3c!--                             <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0"\n                                (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                            <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left"\n                                (click)="created_at_picker.open()">{{ from && to ? \'Date Added - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date Added\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button> --\x3e\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                <div class="form-group">\n\x3c!--                     <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n                        Clear Filters\n                    </button> --\x3e\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="container-card p-30">\n        <div class="row mb-25">\n            <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n\x3c!--                 <div class="form-group">\n                    <div class="inner-group in-line">\n                        <label class="mr-15">Show</label>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit"\n                            (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                            <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n                        </mat-select>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled"\n                            *ngIf="totalItems < 10" disabled>\n                            <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n                        </mat-select>\n                        <label>of {{ totalItems | number }} entries</label>\n                    </div>\n                </div> --\x3e\n            </div>\n            <div class="col-xl-3 offset-xl-2 col-lg-4 offset-lg-2 col-md-8 col-sm-9 col-8">\n                <div class="form-group">\n\x3c!--                     <div class="inner-group search">\n                        <i class="icon-search"></i>\n                        <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n                            (keydown.enter)="searchItem()" />\n                    </div> --\x3e\n                </div>\n            </div>\n            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n                <div class="form-group">\n\x3c!--                     <button type="button" mat-flat-button class="btn btn-block"\n                        [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n                        <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n                        <span\n                            class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n                    </button> --\x3e\n                    <div class="inner-group in-line">\n                        <mat-select multiple class="btn btn-block btn-primary multiple-select"\n                            (selectionChange)="changeColumnVisibility($event)" placeholder="Column Visibility"\n                            [(ngModel)]="visible_columns">\n                            <mat-select-trigger>Column Visibility</mat-select-trigger>\n                            <ng-container *ngFor="let item of ths; let i = index">\n                                <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                            </ng-container>\n                        </mat-select>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-container *ngIf="visible_columns.length > 0">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n                    <thead>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }"\n                                    (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                        <i *ngIf="order.order_by_column == th.key"\n                                            [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i\n                                            [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <ng-container *ngIf="isLoaded && feeds_and_medicine.length > 0">\n                            <ng-container *ngFor="let feeds_medicine of feeds_and_medicine; let i = index">\n                                <tr [ngClass]="dateToday > feeds_medicine.created_at ? \'rowActive\' : \'\' ">\n                                    <td *ngIf="ths[0].isVisible">{{ feeds_medicine.created_at | date: \'d\' }}</td>\n                                    <td *ngIf="ths[1].isVisible">\n                                        {{ feeds_medicine.age_week > 1 ? feeds_medicine.age_week+\' weeks\' : feeds_medicine.age_week+\' week\' }},\n                                        {{ feeds_medicine.age_day > 1 ? feeds_medicine.age_day+\' days\' : feeds_medicine.age_day+\' day\' }}</td>\n                                    <td *ngIf="ths[2].isVisible">{{ feeds_medicine.mortality }}</td>\n                                    <td *ngIf="ths[3].isVisible">{{ feeds_medicine.mortality_rate | percent:\'1.1-2\' }}</td>\n                                    <td *ngIf="ths[4].isVisible">{{ feeds_medicine.cull }}</td>\n                                    <td *ngIf="ths[5].isVisible">{{ feeds_medicine.end_bird_population }}</td>\n                                    <td *ngIf="ths[6].isVisible">{{ feeds_medicine.real_egg_count }}</td>\n                                    <td *ngIf="ths[7].isVisible">{{ feeds_medicine.production_rate | number:\'2.1-2\' }}%</td>\n                                    <td [ngClass]="feeds_medicine.created_at > dateToday ? \'activeRow\' : \'\' " (click)="openModal(feeds_medicine, \'feed\')" *ngIf="ths[8].isVisible">\n                                        {{ feeds_medicine.feed_info ? feeds_medicine.feed_info.feed : \'\' }} ({{ feeds_medicine.feed_consumption }} g)</td>\n                                    <td *ngIf="ths[9].isVisible">{{ feeds_medicine.feeds ? feeds_medicine.feeds.string : \'\' }}</td>\n                                    <td *ngIf="ths[10].isVisible">{{ feeds_medicine.feed_info ? feeds_medicine.feed_info.feed : \'\' }} ({{ feeds_medicine.rec_feed_consumption }} g)</td>\n                                    <td *ngIf="ths[11].isVisible">{{ feeds_medicine.req_feeds ? feeds_medicine.req_feeds.string : \'\' }}</td>\n                                    <td *ngIf="ths[12].isVisible" [ngClass]="feeds_medicine.created_at > dateToday ? \'activeRow\' : \'\' " (click)="openModal(feeds_medicine, \'medicine\')">\n                                        <ng-container *ngFor="let med of feeds_medicine.medicine_name; let m = index">\n                                            {{ med.medicine }} ({{ med.medicine_value }} {{ med.medicine_unit.unit }}){{ m < feeds_medicine.medicine_name.length - 1 ? \',\' : \'\' }}<br *ngIf="m < feeds_medicine.medicine_name.length - 1">\n                                        </ng-container>\n                                    </td>\n                                    \n                                </tr>\n                            </ng-container>\n                        </ng-container>\n\x3c!--                         <ng-container *ngIf="!isLoaded">\n                            <tr>\n                                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                    <ngx-skeleton-loader [theme]="{\n                                        \'border-radius\' : \'5px\',\n                                        \'margin-bottom\' : \'0px\',\n                                        \'height\' : \'20px\'\n                                    }"></ngx-skeleton-loader>\n                                </td>\n                            </tr>\n                        </ng-container> --\x3e\n                        <ng-container *ngIf="isLoaded && feeds_and_medicine.length == 0">\n                            <tr>\n                                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                            </tr>\n                        </ng-container>\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }"\n                                    (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                        <i *ngIf="order.order_by_column == th.key"\n                                            [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i\n                                            [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n            <div class="row">\n                <div class="col-12 col-lg-4 text-center">\n                    <p class="mb-0">Please choose column visibility</p>\n                </div>\n            </div>\n        </ng-container>\n        <div class="row mt-35">\n            <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n\x3c!--                 <div class="form-group">\n                    <div class="inner-group in-line">\n                        <label class="mr-15">Show</label>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit"\n                            (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                            <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n                        </mat-select>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled"\n                            *ngIf="totalItems < 10" disabled>\n                            <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n                        </mat-select>\n                        <label>of {{ totalItems | number }} entries</label>\n                    </div>\n                </div> --\x3e\n            </div>\n            <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n                <ul class="paginate pull-right">\n                    <li class="link cursor-pointer" *ngIf="prev_page">\n                        <a (click)="gotoPage(prev_page)">\n                            Previous\n                        </a>\n                    </li>\n                    <ng-container *ngFor="let x of counter(totalPages); let i = index">\n                        <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">\n                            {{ i+1 }}</li>\n                    </ng-container>\n                    <li class="link cursor-pointer" *ngIf="next_page">\n                        <a (click)="gotoPage(next_page)">\n                            Next\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</section>'},eAV1:function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="border">\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h5 class="mb-30">Fresh Eggs Inventory/Stocks</h5>\n                </div>\n            </div>\n            <div class="row pb-10 ml-0 mr-0 border-bottom">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">Prepared by:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                    <p class="mb-0 fs-14">Date:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <div class="row mb-10 ml-0 mr-0 mt-10">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                    <p>Beginning stocks</p>\n                    <h3>{{ item.beginning_stocks | number }}</h3>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                    <p>Harvested Eggs for this day</p>\n                    <h3>{{ item.total_harvested | number }}</h3>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                    <p>No. of Waste/Sales</p>\n                    <h3>{{ item.waste_sales | number }}</h3>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p>Total Remaining for this day</p>\n                    <h3>{{ item.total_remaining_stocks | number }}</h3>\n                </div>\n            </div>\n            <ng-container *ngIf="visible_columns.length > 0">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <table>\n                        <thead>\n                            <tr>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                    <th *ngIf="th.isVisible && th.canToggle" class="p-10 fs-12">\n                                        {{ th.label }}\n                                    </th>\n                                </ng-container>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <ng-container *ngIf="isLoaded && items.length > 0">\n                                <tr *ngFor="let item of items; let i = index">\n                                    <td class="p-10 fs-12">{{ item.egg_type.type }}</td>\n                                    <td class="p-10 fs-12">\n                                        <mat-chip-list>\n                                        <mat-chip *ngIf="item.remaining > 0" color="primary">Available</mat-chip>\n                                        <mat-chip *ngIf="item.remaining == 0" color="danger">Out of Stock</mat-chip>\n                                        </mat-chip-list>\n                                    </td>\n                                    <td class="p-10 fs-12">{{ item.beginning ? (item.beginning | number) : 0  }}</td>\n                                    <td class="p-10 fs-12">{{ item.harvested ? (item.harvested | number) : 0  }}</td>\n                                    <td class="p-10 fs-12">{{ item.sales ? (item.sales | number) : 0  }}</td>\n                                    <td class="p-10 fs-12">{{ item.remaining ? (item.remaining | number) : 0  }}</td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="!isLoaded">\n                                <tr>\n                                    <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                    <ngx-skeleton-loader [theme]="{\n                                        \'border-radius\' : \'5px\',\n                                        \'margin-bottom\' : \'0px\',\n                                        \'height\' : \'20px\'\n                                    }"></ngx-skeleton-loader>\n                                    </td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="isLoaded && items.length == 0">\n                                <tr>\n                                    <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                </tr>\n                            </ng-container>\n                        </tbody>\n                    </table>\n                </div>\n            </ng-container>\n            <div class="row ml-0 mr-0 mt-20 border-bottom">\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Prepared By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Approved By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 h-22"></p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},eGkx:function(t,e,n){"use strict";n.r(e),e.default=""},erh8:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-9 col-9">\n            <h1 class="heading">Feeds Management</h1>\n            <p class="sub-heading mb-8">Types of feeds: <strong>{{ totalItems }}</strong></p>\n            <ng-container *ngIf="showtimeago">\n                <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n                <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'10px\',\n                    \'height\' : \'20px\'\n                }"></ngx-skeleton-loader>\n            </ng-container>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-3 col-3 ml-auto">\n            <button mat-flat-button class="btn btn-primary btn-block" routerLink="/feeds-medicine-management/feeds/create">\n                <i class="icon-add"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">Add new feed</span>\n            </button>\n        </div>\n    </div>\n\n    <div class="container-card p-30 mb-25" *ngIf="show_filter">\n        <div class="row">\n            <div class="col-12">\n                <h6 class="card-heading">Filters</h6>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group">\n                            <input [matDatepicker]="delivery_date_picker" class="w-0 p-0 border-0" (dateChange)="chooseDeliveryDate($event)">\n                            <mat-datepicker #delivery_date_picker></mat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="delivery_date_picker.open()">{{ delivery_date ? \'Delivery Date - \' + (delivery_date | date: \'MM/dd/yyyy\') : \'Delivery Date\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group">\n                            <input [matDatepicker]="expiration_date_picker" class="w-0 p-0 border-0" (dateChange)="chooseExpirationDate($event)">\n                            <mat-datepicker #expiration_date_picker></mat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="expiration_date_picker.open()">{{ expiration_date ? \'Expiration Date - \' + (expiration_date | date: \'MM/dd/yyyy\') : \'Expiration Date\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                <div class="form-group">\n                    <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">Clear Filters</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="container-card p-30">\n        <div class="row mb-25">\n            <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n                <div class="form-group">\n                    <div class="inner-group in-line">\n                        <label class="mr-15">Show</label>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                            <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n                        </mat-select>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                            <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n                        </mat-select>\n                        <label>of {{ totalItems | number }} entries</label>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-3 offset-xl-2 col-lg-4 offset-lg-2 col-md-8 col-sm-9 col-8">\n                <div class="form-group">\n                    <div class="inner-group search">\n                        <i class="icon-search"></i>\n                        <input type="text" class="form-control" id="inputSearch" placeholder="Search feed name" [(ngModel)]="search" (keydown.enter)="searchItem()" />\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n                <div class="form-group">\n                    <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n                        <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n                        <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <ng-container *ngIf="visible_columns.length > 0">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n                    <thead>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                        <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <ng-container *ngIf="isLoaded && items.length > 0">\n                            <tr *ngFor="let item of items; let i = index" [routerLink]="!item.isExpired ? [\'/feeds-medicine-management/feeds/update\', item.id] : return">\n                                <td class="w-10-per">{{ item.feed }} <span class="text-danger font-italic" *ngIf="item.isExpired">(Expired)</span></td>\n                                <td>{{ item.kg_per_bag | number : \'1.2-2\' }} kg</td>\n                                <td>{{ item.converted | number : \'1.2-2\' }} g</td>\n                                <td>{{ item.pieces | number }}</td>\n                                <td>{{ item.consumed | number : \'1.2-2\' }} g</td>\n                                <td>{{ item.remaining | number : \'1.2-2\' }} g</td>\n                                <td>{{ item.created_at | date: \'MM/dd/yyyy\' }}</td>\n                                <td>{{ item.delivery_date | date: \'MM/dd/yyyy\' }}</td>\n                                <td>{{ item.unit_price | number : \'1.2-2\' }}</td>\n                                <td [ngClass]="{ \'text-danger\' : item.isExpired }">{{ item.expiration_date | date: \'MM/dd/yyyy\' }}</td>\n                                <td class="w-20-per">{{ item.remarks }}</td>\n                                <td>\n                                    <button type="button" *ngIf="!item.isExpired" mat-flat-button class="btn btn-clear" [routerLink]="[\'/feeds-medicine-management/feeds/update\', item.id]">\n                                        <i class="icon-datatables-edit"></i>\n                                        Edit\n                                    </button>\n                                </td>\n                            </tr>\n                        </ng-container>\n                        <ng-container *ngIf="!isLoaded">\n                            <tr>\n                                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                    <ngx-skeleton-loader [theme]="{\n                                        \'border-radius\' : \'5px\',\n                                        \'margin-bottom\' : \'0px\',\n                                        \'height\' : \'20px\'\n                                    }"></ngx-skeleton-loader>\n                                </td>\n                            </tr>\n                        </ng-container>\n                        <ng-container *ngIf="isLoaded && items.length == 0">\n                            <tr>\n                                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                            </tr>\n                        </ng-container>\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                        <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n            <div class="row">\n              <div class="col-12 text-center">\n                <p class="mb-0">Please choose column visibility</p>\n              </div>\n            </div>\n        </ng-container>\n        <div class="row mt-35">\n            <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n                <div class="form-group">\n                    <div class="inner-group in-line">\n                        <label class="mr-15">Show</label>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                            <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n                        </mat-select>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                            <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n                        </mat-select>\n                        <label>of {{ totalItems | number }} entries</label>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n                <ul class="paginate pull-right">\n                    <li class="link cursor-pointer" *ngIf="prev_page">\n                        <a (click)="gotoPage(prev_page)">Previous</a>\n                    </li>\n                    <ng-container *ngFor="let x of counter(totalPages); let i = index">\n                        <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n                    </ng-container>\n                    <li class="link cursor-pointer" *ngIf="next_page">\n                        <a (click)="gotoPage(next_page)">Next</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</section>'},erp5:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-15">\n        <div class="col-xl-auto offset-xl-2">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary" (click)="goBack(\'go_back\', \'customer_create\')">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-15">\n        <div class="col-xl-8 offset-xl-2">\n            <h1 class="heading">Add new customer</h1>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl-8 offset-xl-2">\n            <div class="container-card view-record">\n                <form [formGroup]="userForm">\n                    <div class="p-30">\n                        <h1 class="heading">Basic Info.</h1>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">First Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="first_name" maxlength="50"/>\n                                    <ng-container *ngIf="userForm.controls.first_name.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.first_name.hasError(\'required\')">First name is required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.first_name.hasError(\'maxlength\')">First name must not exceed 50 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Last Name <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="last_name" maxlength="50"/>\n                                    <ng-container *ngIf="userForm.controls.last_name.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.last_name.hasError(\'required\')">Last name is required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.last_name.hasError(\'maxlength\')">Last name must not exceed 50 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Customer Profile <span class="required">*</span></label>\n                                    <mat-select class="btn btn-drop-down btn-block text-left mb-10" formControlName="customer_type_id" placeholder="Select customer profile">\n                                        <mat-option *ngFor="let customer_type of customer_type_options" [value]="customer_type.id">{{ customer_type.type }}</mat-option>\n                                    </mat-select>\n                                    <ng-container *ngIf="userForm.controls.customer_type_id.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.customer_type_id.hasError(\'required\')">Customer profile is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Mobile Phone <span class="required">*</span></label>\n                                    <div class="input-group">\n                                        <div class="input-group-prepend">\n                                            <span class="input-group-text mb-10">+63</span>\n                                        </div>\n                                        <input type="tel" class="form-control mb-10" formControlName="number" placeholder="xxx xxx xxxx" maxlength="10"/>\n                                    </div>\n                                    <ng-container *ngIf="userForm.controls.number.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'required\')">Mobile phone is required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'pattern\')">\n                                            Mobile phone is invalid</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'maxlength\')">\n                                            Mobile phone must not exceed 10 digits</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.number.hasError(\'minlength\')">\n                                            Mobile phone must be atleast 10 digits</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Email <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="email" maxlength="50" minlength="6"/>\n                                    <ng-container *ngIf="userForm.controls.email.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.email.hasError(\'required\')">Email is required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.email.hasError(\'pattern\')">Email is invalid</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.email.hasError(\'maxlength\')">Email must not exceed 50 characters</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.email.hasError(\'minlength\')">Email must not contain at least 6 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-6">\n                                <div class="form-group">\n                                    <label class="text-secondary">Address <span class="required">*</span></label>\n                                    <input class="form-control mb-10" type="text" formControlName="location" maxlength="60"/>\n                                    <ng-container *ngIf="userForm.controls.location.touched">\n                                        <p class="text-danger" *ngIf="userForm.controls.location.hasError(\'required\')">Address is required</p>\n                                        <p class="text-danger" *ngIf="userForm.controls.location.hasError(\'maxlength\')">Address must not exceed 60 characters</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="p-30">\n                        <h1 class="heading mb-30">Profile Photo</h1>\n                        <div class="row">\n                            <div class="col-xl-2 col-lg-2 col-md-2 col-sm-3 col-3">\n                                <img *ngIf="!isProfileImageLoaded" class="avatar img-responsive" src="../../../../../assets/images/profile.svg">\n                                <image-cropper \n                                    class="avatar img-responsive {{isProfileImageLoaded ? \'\' : \'d-none\' }}"\n                                    [imageChangedEvent]="profilePhoto"\n                                    [maintainAspectRatio]="true"\n                                    [aspectRatio]="5 / 5"\n                                    [resizeToWidth]="100"\n                                    format="png,jpg,jpeg,ico"\n                                    (imageCropped)="imageProfilePhotoCropped($event)"\n                                    (imageLoaded)="imageProfileLoaded()"\n                                    [autoCrop]= "true"\n                                ></image-cropper>\n                            </div>\n                            <div class="col-xl-6 col-lg-6 col-md-10 col-sm-9 col-9">\n                                <p>Choose a file to upload:</p>\n                                <div class="form-group row">\n                                    <input id="file-upload" class="d-none" type="file" (change)="fileChange($event)" accept="image/jpeg, image/png"/>\n                                    <div class="col-6">\n                                        <label for="file-upload" class="btn btn-primary btn-block">\n                                            Choose a file\n                                        </label>\n                                    </div>\n                                    <div class="col-6 flex-align-center" *ngIf="!isProfileImageLoaded">\n                                        <p class="m-0 font-italic">No file chosen</p>\n                                    </div>\n                                </div>\n                                <p class="text-danger" *ngIf="profileUploadWrongFile">Image is not valid</p>\n                                <p class="text-danger" *ngIf="uploadMaxLimitReached">Image must not exceed 1MB</p>\n                            </div>\n                            <div class="col-xl-4 col-lg-4 col-md-12">\n                                <p class="note fs-12">Maximum image file size is 1MB. Try resizing it to atleast 500x500 px in resolution.</p>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class="m-0">\n                    <div class="p-30">\n                        <div class="row">\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 ml-xl-auto ml-lg-auto ml-md-auto">\n                                <button type="button" mat-flat-button class="btn btn-clear btn-block" (click)="goBack(\'go_back\', \'customer_create\')">\n                                    Back\n                                </button>\n                            </div>\n                            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6">\n                                <button type="submit" mat-flat-button class="btn btn-primary btn-block" (click)="openModal(userForm.value, \'user_add\')" [disabled]="!userForm.valid">\n                                    <i class="icon-add"></i>\n                                    <span class="ml-15">Add new customer</span>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>'},fNMn:function(t,e,n){"use strict";n.r(e),e.default='<div class="row">\n    <div class="col-12">\n        <h6 class="mini-heading">{{ modal_title }}</h6>\n    </div>\n</div>\n<form [formGroup]="priceForm" (ngSubmit)="submit()">\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">Egg Size: <strong>{{ modal_message }}</strong></label>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">Current price (per piece)</label>\n                <div class="input-group">\n                    <div class="input-group-prepend">\n                        <span class="input-group-text mb-10">Php</span>\n                    </div>\n                    <input type="number" formControlName="current_price" class="form-control mb-10" disabled/>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">New price (per piece) <span class="required">*</span></label>\n                <div class="input-group">\n                    <div class="input-group-prepend">\n                        <span class="input-group-text mb-10">Php</span>\n                    </div>\n                    <input type="number" formControlName="price" class="form-control mb-10"/>\n                </div>\n                <ng-container *ngIf="priceForm.controls.price.touched">\n                    <p class="text-danger" *ngIf="priceForm.controls.price.hasError(\'required\')">This new price field should be valid and not empty</p>\n                    <p class="text-danger" *ngIf="priceForm.controls.price.hasError(\'min\')">New price must not be less than 0</p>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-6 text-right">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear" (click)="closeModal()" [disabled]="isLoading">Cancel</button>\n        </div>\n        <div class="col-6">\n            <button type="submit" mat-flat-button class="btn btn-sm btn-block" [ngClass]="{\'btn-primary\' : action != \'delete\', \'btn-danger\' : action == \'delete\' }" [disabled]="(!priceForm.valid && action != \'delete\') || isLoading">{{ modal_primary_button }}</button>\n        </div>\n    </div>\n</form>\n'},fVb4:function(t,e,n){"use strict";n.r(e),e.default=""},fc8k:function(t,e,n){"use strict";n.r(e),e.default=""},giWx:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n        <h1 class="heading">Daily Reports</h1>\n        <ng-container *ngIf="showtimeago">\n          <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n          <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n              \'border-radius\' : \'5px\',\n              \'margin-bottom\' : \'10px\',\n              \'height\' : \'20px\'\n          }"></ngx-skeleton-loader>\n        </ng-container>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n        <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()" [disabled]="!isLoaded">\n          <i class="icon-download"></i>\n          <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n          <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n        </button>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6">\n        <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportToCsv()" [disabled]="!isLoaded">\n          <i class="icon-download"></i>\n          <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as CSV</span>\n          <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">CSV</span>\n        </button>\n      </div>\n    </div>\n  \n    <div class="container-card p-30 mb-25" *ngIf="show_filter">\n      <div class="row">\n        <div class="col-12">\n          <h6 class="card-heading">Filters</h6>\n        </div>\n      </div>\n      <div class="row">\n        <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n          <div class="row">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n              <div class="form-group">\n                <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? \'Date - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date\' }}\n                  <i class="icon-arrow-drop-down ml-5"></i>\n                </button>\n              </div>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n              <div class="form-group">\n                <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="type" (selectionChange)="changeReportStatus($event)" placeholder="Report Status">\n                  <mat-option *ngFor="let item of report_status_options" [value]="item.value">{{ item.label }}</mat-option>\n                </mat-select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n          <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n              Clear Filters\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class="container-card p-30">\n      <div class="row mb-25">\n        <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n          <div class="form-group">\n            <div class="inner-group in-line">\n              <label class="mr-15">Show</label>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                  <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n              </mat-select>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                  <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n              </mat-select>\n              <label>of {{ totalItems | number }} entries</label>\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n            <div class="form-group">\n                <div class="inner-group">\n                  <mat-select multiple class="btn btn-block btn-primary multiple-select" (selectionChange)="changeColumnVisibility($event)" placeholder="Column Visibility" [(ngModel)]="visible_columns">\n                    <mat-select-trigger>Column Visibility</mat-select-trigger>\n                    <ng-container *ngFor="let item of ths; let i = index">\n                      <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                    </ng-container>\n                  </mat-select>\n                </div>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n          <div class="form-group">\n            <div class="inner-group search">\n              <i class="icon-search"></i>\n              <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n                (keydown.enter)="searchItem()" />\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n            <div class="form-group">\n              <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n                <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n              </button>\n            </div>\n        </div>\n      </div>\n      <div class="row mb-25" *ngIf="item">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto stats">\n            <p>House/Building no.</p>\n            <h1>{{ item.house_name ? item.house_name.house_name : \'\' }}</h1>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto stats">\n            <p>Beginning population</p>\n            <h1>{{ item.beginning_population ? (item.beginning_population | number) : 0 }}</h1>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto stats">\n            <p>Beginning age</p>\n            <h1>{{ item.beginning_age ? item.beginning_age : \'0\' }}</h1>\n        </div>\n      </div>\n      <ng-container *ngIf="visible_columns.length > 1">\n        <div class="data-table p-relative table-listing" style="overflow: auto;">\n          <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n            <thead>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </thead>\n            <tbody>\n              <ng-container *ngIf="isLoaded && items.length > 0">\n                <tr *ngFor="let item of items; let i = index" [routerLink]="[ \'/daily-reports/view\', item.id]">\n                  <td *ngIf="ths[0].isVisible">{{ item.prepared_by_date | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                  <td *ngIf="ths[1].isVisible">{{ item.age }}</td>\n                  <td *ngIf="ths[2].isVisible">{{ item.mortality | number }}</td>\n                  <td *ngIf="ths[3].isVisible">{{ item.mortality_rate | number : \'1.2-2\' }} %</td>\n                  <td *ngIf="ths[4].isVisible">{{ item.cull | number }}</td>\n                  <td *ngIf="ths[5].isVisible">{{ item.bird_count | number }}</td>\n                  <td *ngIf="ths[6].isVisible">{{ item.real_egg_count | number }} pcs</td>\n                  <td *ngIf="ths[7].isVisible">{{ item.production_rate | number : \'1.2-2\' }} %</td>\n                  <td *ngIf="ths[8].isVisible">{{ item.feeds.bags | number }}</td>\n                  <td *ngIf="ths[9].isVisible">{{ item.feeds.string }}</td>\n                  <td *ngIf="ths[10].isVisible">\n                      <ng-container *ngFor="let medicine of item.medicine_name; let i = index">\n                          {{ medicine.medicine }}{{ i < item.medicine_name.length - 1 ? \', \': \'\' }}\n                      </ng-container>\n                  </td>\n                  <td *ngIf="ths[11].isVisible">{{ item.sortingRecordstatus ? item.sortingRecordstatus : item.recordStatus }}</td>\n                  <td *ngIf="ths[12].isVisible">\n                    <button type="button" mat-flat-button class="btn btn-clear text-blue" [routerLink]="[ \'/daily-reports/view\', item.id]">\n                      <i class="icon-datatables-view"></i>\n                      View Report\n                    </button>\n                  </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="!isLoaded">\n                <tr>\n                  <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                    <ngx-skeleton-loader [theme]="{\n                      \'border-radius\' : \'5px\',\n                      \'margin-bottom\' : \'0px\',\n                      \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                  </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="isLoaded && items.length == 0">\n                <tr>\n                  <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                </tr>\n              </ng-container>\n            </tbody>\n            <tfoot>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </ng-container>\n      <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n        <div class="row">\n          <div class="col-12 text-center">\n            <p class="mb-0">Please choose column visibility</p>\n          </div>\n        </div>\n      </ng-container>\n      <div class="row mt-35">\n        <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n          <div class="form-group">\n            <div class="inner-group in-line">\n              <label class="mr-15">Show</label>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                  <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n              </mat-select>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                  <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n              </mat-select>\n              <label>of {{ totalItems | number }} entries</label>\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n          <ul class="paginate pull-right">\n            <li class="link cursor-pointer" *ngIf="prev_page">\n                <a (click)="gotoPage(prev_page)">\n                    Previous\n                </a>\n            </li>\n            <ng-container *ngFor="let x of counter(totalPages); let i = index">\n              <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n            </ng-container>\n            <li class="link cursor-pointer" *ngIf="next_page">\n                <a (click)="gotoPage(next_page)">\n                    Next\n                </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </section>  '},hBoo:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-9 col-9">\n            <h1 class="heading">Activity Log</h1>\n            <ng-container *ngIf="showtimeago">\n                <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated\n                    {{ activity.updated_at | timeago }}</p>\n                <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n          \'border-radius\' : \'5px\',\n          \'margin-bottom\' : \'10px\',\n          \'height\' : \'20px\'\n        }"></ngx-skeleton-loader>\n            </ng-container>\n        </div>\n\x3c!--         <div class="col-xl-auto col-lg-auto col-md-auto col-sm-3 col-3 ml-auto">\n            <button mat-flat-button class="btn btn-primary btn-block" (click)="openModal()">\n                <i class="icon-add"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">Add new house/building</span>\n            </button>\n        </div> --\x3e\n    </div>\n    <div class="container-card p-30">\n        <div class="row mb-25">\n            <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n                <div class="form-group">\n                    <div class="inner-group in-line">\n                        <label class="mr-15">Show</label>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                            <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n                        </mat-select>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                            <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n                        </mat-select>\n                        <label>of {{ totalItems | number }} entries</label>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-4 offset-xl-3 col-lg-4 offset-lg-5 col-md-12 col-sm-12 col-12">\n                <div class="form-group">\n                    <div class="inner-group search">\n                        <i class="icon-search"></i>\n                        <input type="text" class="form-control" id="inputSearch" placeholder="Search"\n                            [(ngModel)]="search" (keydown.enter)="searchItem()" />\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-container *ngIf="visible_columns.length > 0">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <table [ngStyle]="{\'width.px\': 400 * visible_columns.length}">\n                    <thead>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th [ngClass]="{ \'sort\' : th.canSort }"\n                                    (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                        <i *ngIf="order.order_by_column == th.key"\n                                            [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i\n                                            [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <ng-container *ngIf="isLoaded && items.length > 0">\n                            <tr *ngFor="let item of items; let i = index">\n                                <td class="w-25-per">{{ item.name }}</td>\n                                <td class="w-50-per" [innerHTML]="item.action"></td>\n                                <td class="w-25-per">{{ item.created_at }}</td>\n    \x3c!--                             <td>\n                                    <button mat-flat-button class="btn btn-clear" (click)="openModal(item, \'edit\')">\n                                        <i class="icon-datatables-edit"></i>\n                                        Edit\n                                    </button>\n                                    <button mat-flat-button class="btn btn-clear" (click)="openModal(item, \'delete\')">\n                                        <i class="icon-datatables-delete"></i>\n                                        Delete\n                                    </button>\n                                </td> --\x3e\n                            </tr>\n                        </ng-container>\n                        <ng-container *ngIf="!isLoaded">\n                            <tr>\n                                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                    <ngx-skeleton-loader [theme]="{\n                      \'border-radius\' : \'5px\',\n                      \'margin-bottom\' : \'0px\',\n                      \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                                </td>\n                            </tr>\n                        </ng-container>\n                        <ng-container *ngIf="isLoaded && items.length == 0">\n                            <tr>\n                                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                            </tr>\n                        </ng-container>\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <ng-container *ngFor="let th of ths; let i = index">\n                                <th [ngClass]="{ \'sort\' : th.canSort }"\n                                    (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                        <i *ngIf="order.order_by_column == th.key"\n                                            [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i\n                                            [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                            </ng-container>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n            <div class="row">\n                <div class="col-12 text-center">\n                    <p class="mb-0">Please choose column visibility</p>\n                </div>\n            </div>\n        </ng-container>\n        <div class="row mt-35">\n            <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n                <div class="form-group">\n                    <div class="inner-group in-line">\n                        <label class="mr-15">Show</label>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit"\n                            (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                            <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n                        </mat-select>\n                        <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled"\n                            *ngIf="totalItems < 10" disabled>\n                            <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n                        </mat-select>\n                        <label>of {{ totalItems | number }} entries</label>\n                    </div>\n                </div>\n            </div>\n            <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n                <ul class="paginate pull-right">\n                    <li class="link cursor-pointer" *ngIf="prev_page">\n                        <a (click)="gotoPage(prev_page)">\n                            Previous\n                        </a>\n                    </li>\n                    <ng-container *ngFor="let x of counter(totalPages); let i = index">\n                        <li class="next-page cursor-pointer" (click)="gotoPage(i+1)"\n                            [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n                    </ng-container>\n                    <li class="link cursor-pointer" *ngIf="next_page">\n                        <a (click)="gotoPage(next_page)">\n                            Next\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</section>'},hEX2:function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="border">\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h5 class="mb-30">Feeds Consumption</h5>\n                </div>\n            </div>\n            <div class="row pb-10 mb-30 ml-0 mr-0 border-bottom">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">Prepared by:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                    <p class="mb-0 fs-14">Date:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <div class="row mb-30 ml-0 mr-0 break-now" *ngIf="isLoaded && items.length > 0">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                    <canvas baseChart \n                        [datasets]="lineChartData"\n                        [labels]="lineChartLabels"\n                        [options]="lineChartOptions"\n                        [plugins]="lineChartPlugins"\n                        [legend]="lineChartLegend"\n                        [chartType]="lineChartType">\n                    </canvas>\n                </div>\n                <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>All Dates</p>\n                </div>\n                <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <ng-container *ngIf="visible_columns.length > 1">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <div class="data-table p-relative table-listing" style="overflow: auto;">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th class="p-10 fs-12">Age (Weeeks)</th>\n                                    <th class="p-10 fs-12">Recommended (g)</th>\n                                    <ng-container *ngFor="let th of ths; let i = index">\n                                    <th *ngIf="th.isVisible" class="p-10 fs-12">\n                                        {{ th.label }}\n                                    </th>\n                                    </ng-container>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container *ngIf="isLoaded && items.length > 0">\n                                    <tr *ngFor="let item of items; let i = index">\n                                        <td class="p-10 fs-12">{{ item.age_week | number }}</td>\n                                        <td class="p-10 fs-12">{{ item.rec_feed_consumption | number }} g</td>\n                                        <ng-container *ngFor="let item of item.house; let i = index">\n                                            <td *ngIf="ths[i].isVisible" class="p-10 fs-12">{{ item && item.daily_harvest_report ? (item.daily_harvest_report.sum | number) : 0 }}</td>\n                                        </ng-container>\n                                        </tr>\n                                </ng-container>\n                                <ng-container *ngIf="!isLoaded">\n                                    <tr>\n                                        <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                            <ngx-skeleton-loader [theme]="{\n                                            \'border-radius\' : \'5px\',\n                                            \'margin-bottom\' : \'0px\',\n                                            \'height\' : \'20px\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                                <ng-container *ngIf="isLoaded && items.length == 0">\n                                    <tr>\n                                    <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n                <div class="row">\n                    <div class="col-12 text-center">\n                    <p class="mb-0">Please choose egg type</p>\n                    </div>\n                </div>\n            </ng-container>\n            \n            <div class="row ml-0 mr-0 mt-20 border-bottom">\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Prepared By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Approved By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 h-22"></p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},hGRL:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n  <div class="row mb-35">\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n      <h1 class="heading">{{ mode_of_payment_label }}</h1>\n      <p class="sub-heading">Total number of transactions: <strong>{{ totalItems | number }}</strong></p>\n      <ng-container *ngIf="showtimeago">\n        <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n        <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n            \'border-radius\' : \'5px\',\n            \'margin-bottom\' : \'10px\',\n            \'height\' : \'20px\'\n        }"></ngx-skeleton-loader>\n      </ng-container>\n    </div>\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-3 col-3 ml-auto">\n      <button mat-flat-button class="btn btn-primary btn-block" routerLink="/transactions/create">\n        <i class="icon-add"></i>\n        <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">Add new transaction</span>\n      </button>\n    </div>\n  </div>\n  \n  <div class="container-card p-30 mb-25" *ngIf="show_filter">\n    <div class="row">\n      <div class="col-12">\n        <h6 class="card-heading">Filters</h6>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="row">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n              <div class="form-group">\n                <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? \'Date Ordered - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date Ordered\' }}\n                  <i class="icon-arrow-drop-down ml-5"></i>\n                </button>\n              </div>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n              <div class="form-group">\n                <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="payment_status" (selectionChange)="changePaymentStatus($event)" placeholder="Payment Status">\n                  <mat-option *ngFor="let item of payment_status_options" [value]="item.value">{{ item.label }}</mat-option>\n                </mat-select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n            Clear Filters\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="container-card p-30">\n    <div class="row mb-25">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n        <div class="form-group mb-0">\n          <div class="inner-group">\n            <mat-select multiple class="btn btn-block btn-primary multiple-select" (selectionChange)="changeColumnVisibility($event)" placeholder="Column Visibility" [(ngModel)]="visible_columns">\n              <mat-select-trigger>Column Visibility</mat-select-trigger>\n              <ng-container *ngFor="let item of ths; let i = index">\n                <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n              </ng-container>\n            </mat-select>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n        <div class="form-group">\n          <div class="inner-group search">\n            <i class="icon-search"></i>\n            <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n              (keydown.enter)="searchItem()" />\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n        <div class="form-group">\n          <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n            <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf="visible_columns.length > 1">\n      <div class="data-table p-relative table-listing" style="overflow: auto;">\n        <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n          <thead>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf="isLoaded && items.length > 0">\n              <tr *ngFor="let item of items; let i = index">\n                <td *ngIf="ths[0].isVisible">{{ item.transaction_id }}</td>\n                <td *ngIf="ths[1].isVisible">{{ item.created_at | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                <td *ngIf="ths[2].isVisible">{{ item.customer_name }}</td>\n                <td *ngIf="ths[3].isVisible">\n                  <mat-chip-list>\n                    <mat-chip *ngIf="item.order_status == 1" color="primary">{{ item.status }}</mat-chip>\n                    <mat-chip *ngIf="item.order_status == 2" color="secondary">{{ item.status }}</mat-chip>\n                    <mat-chip *ngIf="item.order_status == 3" color="warning">{{ item.status }}</mat-chip>\n                    <mat-chip *ngIf="item.order_status == 4" color="success">{{ item.status }}</mat-chip>\n                    <mat-chip *ngIf="item.order_status == 7 || item.order_status == 8" color="danger">{{ item.status }}</mat-chip>\n                  </mat-chip-list>\n                </td>\n                <td *ngIf="ths[4].isVisible">{{ item.payment ? (item.payment.due_date | date: \'MM/dd/yyyy\') : \'\' }}</td>\n                <td *ngIf="ths[5].isVisible">\n                  <ng-container *ngFor="let egg of item.order_items; let i = index">\n                    {{ egg.egg_type.type }} {{ i < item.order_items.length -1 ? \', \':\'\' }}\n                  </ng-container>\n                </td>\n                <td *ngIf="ths[6].isVisible">{{ item.total_pieces | number }}</td>\n                <td *ngIf="ths[7].isVisible">₱ {{ item.total_price | number : \'1.2-2\' }}</td>\n                <td *ngIf="ths[8].isVisible">{{ item.payment_type }}</td>\n                <td *ngIf="ths[9].isVisible">\n                  <mat-chip-list>\n                    <mat-chip *ngIf="item.payment_status == 0" color="secondary">{{ item.payment_status_label }}</mat-chip>\n                    <mat-chip *ngIf="item.payment_status == 1" color="success">{{ item.payment_status_label }}</mat-chip>\n                  </mat-chip-list>\n                </td>\n                <td *ngIf="ths[10].isVisible">\n                  <button type="button" mat-flat-button class="btn btn-clear" [routerLink]="[ \'/transactions/view\', item.id]">\n                    <i class="icon-datatables-view"></i>\n                    View\n                  </button>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="!isLoaded">\n              <tr>\n                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                  <ngx-skeleton-loader [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'0px\',\n                    \'height\' : \'20px\'\n                  }"></ngx-skeleton-loader>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && items.length == 0">\n              <tr>\n                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n              </tr>\n            </ng-container>\n          </tbody>\n          <tfoot>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n      <div class="row">\n        <div class="col-12 text-center">\n          <p class="mb-0">Please choose column visibility</p>\n        </div>\n      </div>\n    </ng-container>\n    <div class="row mt-35">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n        <ul class="paginate pull-right">\n          <li class="link cursor-pointer" *ngIf="prev_page">\n            <a (click)="gotoPage(prev_page)">\n              Previous\n            </a>\n          </li>\n          <ng-container *ngFor="let x of counter(totalPages); let i = index">\n            <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n          </ng-container>\n          <li class="link cursor-pointer" *ngIf="next_page">\n            <a (click)="gotoPage(next_page)">\n              Next\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</section>'},i8yi:function(t,e,n){"use strict";n.r(e),e.default=""},icK6:function(t,e,n){"use strict";n.r(e),e.default="h3 {\n  font-size: 1.4vw;\n  margin-top: 0;\n  font-weight: 500;\n}\n\n.col2 {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 60%;\n  height: 100%;\n}\n\n.col1 {\n  overflow: hidden;\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 40%;\n  height: 100%;\n  background: #fff;\n}\n\n.img1 {\n  padding: 0;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n}\n\nspan.eye {\n  margin-top: -3px;\n  position: relative;\n  float: right;\n  -webkit-transform: translateY(-100%);\n          transform: translateY(-100%);\n  cursor: pointer;\n  display: block;\n}\n\n.ball1 {\n  top: -5%;\n  right: -5%;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.04);\n}\n\n.ball2 {\n  bottom: -130px;\n  left: -130px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.04);\n}\n\n.custom-row {\n  width: 100%;\n  margin: 0;\n}\n\n.forgot-pass p {\n  color: #05172e;\n  font-size: 16px;\n  line-height: 1.428571429;\n}\n\n.btn-forgot {\n  color: #0097cf;\n}"},itpO:function(t,e,n){"use strict";n.r(e),e.default=""},jFLe:function(t,e,n){"use strict";n.r(e),e.default='<div class="row">\n    <div class="col-12">\n        <h6 class="mini-heading">{{ modal_title }}</h6>\n    </div>\n</div>\n<form [formGroup]="generalForm" (ngSubmit)="submit()">\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">{{ modal_message }}</label>\n            </div>\n        </div>\n    </div>\n    <div class="row" *ngIf="action == \'order_decline\'">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">Reason <span class="required">*</span></label>\n                <textarea maxlength="250" class="form-control mb-10" formControlName="message" row="3"></textarea>\n                <label class="text-secondary float-right mr-0 mb-15">{{ generalForm.controls.message.value.length }}/250</label>\n                <ng-container *ngIf="generalForm.controls.message.touched">\n                    <p class="text-danger" *ngIf="generalForm.controls.message.hasError(\'required\')">Reason is required</p>\n                    <p class="text-danger" *ngIf="generalForm.controls.message.hasError(\'maxlength\')">Reason is must not exceed 250 characters</p>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-sm btn-block" [ngClass]="modal_secondary_button_class" (click)="closeModal()">{{ modal_secondary_button }}</button>\n        </div>\n        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6">\n            <button type="submit" mat-flat-button class="btn btn-sm btn-block" [ngClass]="modal_primary_button_class" [disabled]="!generalForm.valid">{{ modal_primary_button }}</button>\n        </div>\n    </div>\n</form>'},jpTY:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <h1 class="heading">Consumption Report</h1>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()" [disabled]="!isLoaded">\n                <i class="icon-download"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n                <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n            </button>\n        </div>\n    </div>\n    <div class="container-card p-30">\n        <div class="row">\n            <div class="col-xl-auto col-lg-auto col-md-12 col-sm-12 col-12">\n                <p class="mb-10">Feeds Consumption</p>\n                <ng-container *ngIf="showtimeago">\n                    <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n                    <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n                        \'border-radius\' : \'5px\',\n                        \'margin-bottom\' : \'10px\',\n                        \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                </ng-container>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-12 col-sm-12 col-12 ml-auto">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                        <div class="form-group mb-0">\n                            <div class="inner-group in-line">\n                                <label class="mr-15">Show:</label>\n                                <mat-select multiple class="btn btn-drop-down btn-block text-left" (selectionChange)="changeColumnVisibility($event)" placeholder="All house/building" [(ngModel)]="visible_columns" >\n                                    <mat-select-trigger>All house/building</mat-select-trigger>\n                                    <ng-container *ngFor="let item of ths; let i = index">\n                                        <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                                    </ng-container>\n                                </mat-select>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group mb-0">\n                            <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                            <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? (from | date: \'MMMM dd, yyyy\') + \' - \' + (to | date: \'MMMM dd, yyyy\') : \'Choose harvest dates\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto" *ngIf="from && to">\n                        <button type="button" mat-flat-button class="btn btn-clear btn-sm" (click)="clearFilters()">Reset Filter</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="row mb-30">\n            \x3c!-- <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-10">Overall Harvested Eggs</p>\n                <h1 class="heading">{{ overall_harvested_eggs | number }}</h1>\n            </div> --\x3e\n        </div>\n        <div class="row mb-30" *ngIf="isLoaded && items.length > 0">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                <canvas baseChart \n                    [datasets]="lineChartData"\n                    [labels]="lineChartLabels"\n                    [options]="lineChartOptions"\n                    [plugins]="lineChartPlugins"\n                    [legend]="lineChartLegend"\n                    [chartType]="lineChartType">\n                </canvas>\n            </div>\n            <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p>All Dates</p>\n            </div>\n            <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n            </div>\n        </div>\n        <ng-container *ngIf="visible_columns.length > 1">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <table [ngStyle]="{\'width.px\': 210 * visible_columns.length}">\n                        <thead>\n                            <tr>\n                                <th class="sort" (click)="orderList(true, \'age_week\', order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    Age (Weeeks)\n                                    <i *ngIf="order.order_by_column == \'age_week\'" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != \'age_week\' }"></i>\n                                </th>\n                                <th class="sort">\n                                    Recommended (g)\n                                </th>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                                </ng-container>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            <ng-container *ngIf="isLoaded && items.length > 0">\n                                <tr *ngFor="let item of items; let i = index">\n                                <td>{{ item.age_week | number }}</td>\n                                <td>{{ item.rec_feed_consumption | number }} g</td>\n                                <ng-container *ngFor="let item of item.house; let i = index">\n                                    <td *ngIf="ths[i].isVisible">{{ item && item.daily_harvest_report ? (item.daily_harvest_report.sum | number) : 0 }} g</td>\n                                </ng-container>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="!isLoaded">\n                                <tr>\n                                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                    <ngx-skeleton-loader [theme]="{\n                                    \'border-radius\' : \'5px\',\n                                    \'margin-bottom\' : \'0px\',\n                                    \'height\' : \'20px\'\n                                    }"></ngx-skeleton-loader>\n                                </td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="isLoaded && items.length == 0">\n                                <tr>\n                                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                </tr>\n                            </ng-container>\n                            </tbody>\n                    </table>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n            <div class="row">\n                <div class="col-12 text-center">\n                <p class="mb-0">Please choose egg type</p>\n                </div>\n            </div>\n        </ng-container>\n        <div class="row mt-35">\n            <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12 ml-auto" *ngIf="totalPages > 1">\n                <ul class="paginate pull-right">\n                <li class="link cursor-pointer" *ngIf="prev_page">\n                    <a (click)="gotoPage(prev_page)">\n                        Previous\n                    </a>\n                </li>\n                <ng-container *ngFor="let x of counter(totalPages); let i = index">\n                    <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n                </ng-container>\n                \n                <li class="link cursor-pointer" *ngIf="next_page">\n                    <a (click)="gotoPage(next_page)">\n                        Next\n                    </a>\n                </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</section>'},jzVg:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-15">\n        <div class="col-xl-auto offset-xl-1">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary" (click)="goBack(\'go_back\', \'transaction_preview\')">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-35">\n        <div class="col-xl-auto offset-xl-1">\n            <h1 class="heading">Add new transaction</h1>\n        </div>\n    </div>\n    <div class="row mb-35">\n        <div class="col-4 offset-4">\n            <img src="./../../../../../assets/images/others/order-step-2.svg" class="img-responsive"/>\n        </div>\n    </div>\n    <div class="row mb-30">\n        <div class="col-xl-10 offset-xl-1">\n            <div class="container-card view-record">\n                <div class="p-30">\n                    <h1 class="heading">Order Summary</h1>\n                </div>\n                <div class="p-30">\n                    <div class="row">\n                        <div class="col-xl-6 col-lg-6 col-md-12">\n                            <div class="form-group mb-35">\n                                <label class="text-secondary">Customer Name</label>\n                                <p class="fs-20">{{ my_order.customer.customer_name }}</p>\n                            </div>\n                            <div class="form-group mb-35">\n                                <label class="text-secondary">Mobile Number</label>\n                                <p class="fs-20">+63{{ my_order.customer.number }}</p>\n                            </div>\n                            <div class="form-group mb-35">\n                                <label class="text-secondary">Address</label>\n                                <p class="fs-20">{{ my_order.customer.location }}</p>\n                            </div>\n                            <div class="form-group mb-35">\n                                <label class="text-secondary">Mode of Payment</label>\n                                <p class="fs-20">{{ mode_of_payment_label }}</p>\n                            </div>\n                            <div class="form-group mb-35" *ngIf="my_order.customer.request">\n                                <label class="text-secondary">Other special requests or message</label>\n                                <p class="fs-20">{{ my_order.customer.request }}</p>\n                            </div>\n                        </div>\n                        <div class="col-xl-6 col-lg-6 col-md-12 order-summary">\n                            <div class="p-30">\n                                <div class="row">\n                                    <div class="col-auto">\n                                        <p>Items</p>\n                                    </div>\n                                    <div class="col-auto ml-auto">\n                                        <p>Amount</p>\n                                    </div>\n                                </div>\n                                <hr class="h-2">\n                                <ng-container *ngFor="let item of my_order.cart; let i = index">\n                                    <div class="row">\n                                        <div class="col-12">\n                                            <p class="fs-15 m-0 lh-22">Fresh Egg</p>\n                                            <p class="fs-15 m-0 lh-22"><span class="text-secondary">Size: </span>{{ item.label }}</p>\n                                            <p class="fs-14 m-0 lh-19">\n                                                <span class="text-secondary">Qty: </span>\n                                                <ng-container *ngFor="let details of item.items; let i = index">\n                                                    <span *ngIf="details.qty > 0">{{ details.qty | number }} {{ details.type | lowercase }}{{ details.qty > 1 ? \'s\' : \'\' }}<ng-container *ngIf="item.items.length - 1 > i">, </ng-container><br *ngIf="details.qty >= 99999 && item.items.length - 1 > i"></span>\n                                                </ng-container>\n                                            </p>\n                                        </div>\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0 lh-22">₱ {{ item.price | number : \'1.2-2\' }} x {{ item.total_qty }}</p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0 lh-22">₱ {{ item.total_price | number : \'1.2-2\' }}</p>\n                                        </div>\n                                        <div class="col-12">\n                                            <p class="fs-12 m-0 text-secondary font-italic lh-19">(Price per egg size x total no. of eggs)</p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                </ng-container>\n                                <ng-container *ngIf="my_order.payment.mode_of_payment == 1">\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-17 m-0 fw-500">\n                                                Order Total ({{ total_pieces | number }} items)\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-17 m-0 text-danger fw-500">\n                                                ₱ {{ my_order.payment.total_price | number : \'1.2-2\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                                <ng-container *ngIf="my_order.payment.mode_of_payment == 2">\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0">\n                                                Order Total ({{ total_pieces | number }} items)\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0">\n                                                ₱ {{ my_order.payment.total_price | number : \'1.2-2\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-17 m-0 fw-500">\n                                                Credit Amount\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-17 m-0 text-danger fw-500">\n                                                ₱ {{ my_order.payment.total_price | number : \'1.2-2\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0">\n                                                Date to pay credited amount\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0 text-danger">\n                                                {{ my_order.payment.due_date | date: \'MM/dd/yyyy\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                                <ng-container *ngIf="my_order.payment.mode_of_payment == 3">\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0">\n                                                Order Total ({{ total_pieces | number }} items)\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0">\n                                                ₱ {{ my_order.payment.total_price | number : \'1.2-2\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0">\n                                                Initial Payment\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0">\n                                                ₱ {{ my_order.payment.payment | number : \'1.2-2\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-17 m-0 fw-500">\n                                                Remaining Balance\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-17 m-0 text-danger fw-500">\n                                                ₱ {{ my_order.payment.balance | number : \'1.2-2\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0">\n                                                Date to pay balanced amount\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0">\n                                                {{ my_order.payment.due_date | date: \'MM/dd/yyyy\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr>\n                <div class="p-30">\n                    <div class="row">\n                        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12">\n                            <p><span class="text-secondary">By clicking the "Submit Order" button, you confirm that you read, understand, and accept our </span>Terms and Conditions <span class="text-secondary">and </span>Privacy Policy<span class="text-secondary"></span></p>\n                        </div>\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 ml-xl-auto ml-lg-auto ml-md-auto">\n                            <button type="button" mat-flat-button class="btn btn-clear btn-block"\n                                (click)="goBack(\'form_cancel\', \'transaction_create\')">\n                                Cancel\n                            </button>\n                        </div>\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6">\n                            <button type="submit" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()">\n                                <i class="icon-lock"></i>\n                                <span class="ml-15">Submit Order</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>'},lSXh:function(t,e,n){"use strict";n.r(e),e.default=""},mrSG:function(t,e,n){"use strict";n.r(e),n.d(e,"__extends",(function(){return i})),n.d(e,"__assign",(function(){return s})),n.d(e,"__rest",(function(){return a})),n.d(e,"__decorate",(function(){return r})),n.d(e,"__param",(function(){return l})),n.d(e,"__metadata",(function(){return c})),n.d(e,"__awaiter",(function(){return d})),n.d(e,"__generator",(function(){return u})),n.d(e,"__exportStar",(function(){return m})),n.d(e,"__values",(function(){return p})),n.d(e,"__read",(function(){return h})),n.d(e,"__spread",(function(){return g})),n.d(e,"__spreadArrays",(function(){return f})),n.d(e,"__await",(function(){return b})),n.d(e,"__asyncGenerator",(function(){return v})),n.d(e,"__asyncDelegator",(function(){return _})),n.d(e,"__asyncValues",(function(){return y})),n.d(e,"__makeTemplateObject",(function(){return x})),n.d(e,"__importStar",(function(){return w})),n.d(e,"__importDefault",(function(){return k}));var o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function i(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var s=function(){return(s=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};function a(t,e){var n={};for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&e.indexOf(o)<0&&(n[o]=t[o]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(o=Object.getOwnPropertySymbols(t);i<o.length;i++)e.indexOf(o[i])<0&&Object.prototype.propertyIsEnumerable.call(t,o[i])&&(n[o[i]]=t[o[i]])}return n}function r(t,e,n,o){var i,s=arguments.length,a=s<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(a=(s<3?i(a):s>3?i(e,n,a):i(e,n))||a);return s>3&&a&&Object.defineProperty(e,n,a),a}function l(t,e){return function(n,o){e(n,o,t)}}function c(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}function d(t,e,n,o){return new(n||(n=Promise))((function(i,s){function a(t){try{l(o.next(t))}catch(e){s(e)}}function r(t){try{l(o.throw(t))}catch(e){s(e)}}function l(t){t.done?i(t.value):new n((function(e){e(t.value)})).then(a,r)}l((o=o.apply(t,e||[])).next())}))}function u(t,e){var n,o,i,s,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:r(0),throw:r(1),return:r(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function r(s){return function(r){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,o&&(i=2&s[0]?o.return:s[0]?o.throw||((i=o.return)&&i.call(o),0):o.next)&&!(i=i.call(o,s[1])).done)return i;switch(o=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,o=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===s[0]||2===s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=e.call(t,a)}catch(r){s=[6,r],o=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,r])}}}function m(t,e){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}function p(t){var e="function"==typeof Symbol&&t[Symbol.iterator],n=0;return e?e.call(t):{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}}}function h(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,i,s=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(o=s.next()).done;)a.push(o.value)}catch(r){i={error:r}}finally{try{o&&!o.done&&(n=s.return)&&n.call(s)}finally{if(i)throw i.error}}return a}function g(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(h(arguments[e]));return t}function f(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var o=Array(t),i=0;for(e=0;e<n;e++)for(var s=arguments[e],a=0,r=s.length;a<r;a++,i++)o[i]=s[a];return o}function b(t){return this instanceof b?(this.v=t,this):new b(t)}function v(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var o,i=n.apply(t,e||[]),s=[];return o={},a("next"),a("throw"),a("return"),o[Symbol.asyncIterator]=function(){return this},o;function a(t){i[t]&&(o[t]=function(e){return new Promise((function(n,o){s.push([t,e,n,o])>1||r(t,e)}))})}function r(t,e){try{(n=i[t](e)).value instanceof b?Promise.resolve(n.value.v).then(l,c):d(s[0][2],n)}catch(o){d(s[0][3],o)}var n}function l(t){r("next",t)}function c(t){r("throw",t)}function d(t,e){t(e),s.shift(),s.length&&r(s[0][0],s[0][1])}}function _(t){var e,n;return e={},o("next"),o("throw",(function(t){throw t})),o("return"),e[Symbol.iterator]=function(){return this},e;function o(o,i){e[o]=t[o]?function(e){return(n=!n)?{value:b(t[o](e)),done:"return"===o}:i?i(e):e}:i}}function y(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,n=t[Symbol.asyncIterator];return n?n.call(t):(t=p(t),e={},o("next"),o("throw"),o("return"),e[Symbol.asyncIterator]=function(){return this},e);function o(n){e[n]=t[n]&&function(e){return new Promise((function(o,i){(function(t,e,n,o){Promise.resolve(o).then((function(e){t({value:e,done:n})}),e)})(o,i,(e=t[n](e)).done,e.value)}))}}}function x(t,e){return Object.defineProperty?Object.defineProperty(t,"raw",{value:e}):t.raw=e,t}function w(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e}function k(t){return t&&t.__esModule?t:{default:t}}},nJR6:function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="border">\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h5 class="mb-30">Harvested Production By Egg Sizes</h5>\n                </div>\n            </div>\n            <div class="row pb-10 ml-0 mr-0 border-bottom">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">Prepared by:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                    <p class="mb-0 fs-14">Date:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <div class="row mb-20 mt-10 ml-0 mr-0">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-5 fs-14">Overall Harvested Eggs</p>\n                    <h1 class="heading fs-34">{{ overall_harvested_eggs | number }}</h1>\n                </div>\n            </div>\n            <div class="row mb-30 ml-0 mr-0 break-now" *ngIf="isLoaded && items.length > 0 && visible_columns.length > 0">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                    <canvas baseChart \n                        [datasets]="barChartData"\n                        [labels]="barChartLabels"\n                        [options]="barChartOptions"\n                        [plugins]="barChartPlugins"\n                        [legend]="barChartLegend"\n                        [chartType]="barChartType"\n                    >\n                    </canvas>\n                </div>\n                \x3c!-- <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>Egg Sizes</p>\n                </div> --\x3e\n                <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p>All Dates</p>\n                </div>\n                <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <p *ngIf="(from | date: \'yyyy-MM-dd\') != (to | date: \'yyyy-MM-dd\')">{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n                    <p *ngIf="(from | date: \'yyyy-MM-dd\') == (to | date: \'yyyy-MM-dd\')">{{ from | date : \'MMMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n            <ng-container *ngIf="visible_columns.length > 0">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <div class="data-table p-relative table-listing" style="overflow: auto;">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th class="p-10 fs-12">Date</th>\n                                    <ng-container *ngFor="let th of ths; let i = index">\n                                        <th *ngIf="th.isVisible" class="p-10 fs-12">{{ th.label }}</th>\n                                    </ng-container>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container *ngIf="isLoaded && items.length > 0">\n                                    <tr *ngFor="let item of items; let i = index">\n                                        <td class="p-10 fs-12">{{ item.grouped_date | date: \'MM/dd/yyyy\' }}</td>\n                                        <ng-container *ngFor="let item of item.daily_sorting_inventory; let i = index">\n                                            <td class="p-10 fs-12" *ngIf="ths[i].isVisible">{{ item.sum | number }}</td>\n                                        </ng-container>\n                                    </tr>\n                                </ng-container>\n                                <ng-container *ngIf="!isLoaded">\n                                    <tr>\n                                    <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                        <ngx-skeleton-loader [theme]="{\n                                        \'border-radius\' : \'5px\',\n                                        \'margin-bottom\' : \'0px\',\n                                        \'height\' : \'20px\'\n                                        }"></ngx-skeleton-loader>\n                                    </td>\n                                    </tr>\n                                </ng-container>\n                                <ng-container *ngIf="isLoaded && items.length == 0">\n                                    <tr>\n                                    <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                    </tr>\n                                </ng-container>\n                                </tbody>\n                        </table>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n                <div class="row">\n                    <div class="col-12 text-center">\n                    <p class="mb-0">Please choose egg type</p>\n                    </div>\n                </div>\n            </ng-container>\n            <div class="row ml-0 mr-0 mt-20 border-bottom">\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Prepared By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Approved By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 h-22"></p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},"o+1E":function(t,e,n){"use strict";n.r(e),e.default='\n<div class="container-card view-record p-30">\n    <div id="printable-section">\n        <div class="border">\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h3 class="mt-10">Gapan Fresh Eggs, Inc.</h3>\n                </div>\n            </div>\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                    <h5 class="mb-30">Daily Report</h5>\n                </div>\n            </div>\n            <div class="row pb-10 ml-0 mr-0 border-bottom">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">Prepared by:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                    <p class="mb-0 fs-14">Date:</p>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                    <p class="mb-0 fs-14">{{ date_today | date : \'MMM dd, yyyy\' }}</p>\n                </div>\n            </div>\n\n            <div class="container-card view-record p-30 break-now" *ngIf="isLoaded">\n                <div class="row mb-10">\n                    <div class="col-12 text-center">\n                        <h6>Harvest Report</h6>\n                    </div>\n                </div>\n                <div class="row mb-30">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                \x3c!-- <tr>\n                                    <td class="w-30-per alt">Report Status</td>\n                                    <td class="w-70-per">{{ item.recordStatus }}</td>\n                                </tr> --\x3e\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Harvested by</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.name }}</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">House/Building no.</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.house ? item.house.house_name : \'\' }}</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Report Date</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.prepared_by_date | date: \'MM/dd/yyyy\' }}</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Report Time</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.prepared_by_date | date: \'hh:mm aaa\' }}</td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div class="row mb-10">\n                    <div class="col-12">\n                        <h6>Basic Details</h6>\n                    </div>\n                </div>\n                <div class="row mb-30">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Bird Count</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.bird_count | number }}</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Age</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.age }}</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Mortality</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.mortality | number }}</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Cull</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.cull | number }}</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">End Bird Population</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.bird_count | number }}</td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div class="row mb-10">\n                    <div class="col-12">\n                        <h6>Feeds and Medicine Consumption Details</h6>\n                    </div>\n                </div>\n                <div class="row mb-30">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">No. of Sacks</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.feeds ? (item.feeds.bags | number) : 0 }}</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Feed Consumption</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.feeds ? item.feeds.string : \'\' }}</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Medicine intake</td>\n                                    <td class="w-70-per p-10 fs-10">\n                                        <ng-container *ngFor="let medicine of item.medicine; let i = index">\n                                            {{ medicine.medicine }} {{ i < item.medicine.length - 1 ? \', \' : \'\' }}\n                                        </ng-container>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div class="row mb-10">\n                    <div class="col-12">\n                        <h6>Counted Egg Details</h6>\n                    </div>\n                </div>\n                <div class="row mb-30">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Total Egg Count</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.real_egg_count | number }}</td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div class="row mb-10">\n                    <div class="col-12">\n                        <h6>Report Signatory</h6>\n                    </div>\n                </div>\n                <div class="row mb-30">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Prepared by</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.prepared_by_name }} ({{ item.prepared_by_role }})</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Signature</td>\n                                    <td class="w-70-per p-10 fs-10">\n                                        <img [src]="item.prepared_by_path" class="img-responsive">\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div class="row mb-30" *ngIf="item.checked_by">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Checked by</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.checked_by_name }} ({{ item.checked_by_role }})</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Signature</td>\n                                    <td class="w-70-per p-10 fs-10">\n                                        <img [src]="item.checked_by_path" class="img-responsive">\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div class="row" *ngIf="item.received_by">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Received by</td>\n                                    <td class="w-70-per p-10 fs-10">{{ item.received_by_name }} ({{ item.received_by_role }})</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Signature</td>\n                                    <td class="w-70-per p-10 fs-10">\n                                        <img [src]="item.received_by_path" class="img-responsive">\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="container-card view-record p-30" *ngIf="isLoaded">\n                <div class="row mb-10">\n                    <div class="col-12 text-center">\n                        <h6>Sorting Report</h6>\n                    </div>\n                </div>\n                <div class="row mb-30">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                \x3c!-- <tr>\n                                    <td class="w-30-per alt">Report Status</td>\n                                    <td class="w-70-per">{{ item.recordStatus }}</td>\n                                </tr> --\x3e\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Sorted by</td>\n                                    <td class="w-70-per p-10 fs-10">{{ sorting_item.prepared_by_name }}</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">House/Building no.</td>\n                                    <td class="w-70-per p-10 fs-10">{{ sorting_item.house ? sorting_item.house.house_name : \'\' }}</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Report Date</td>\n                                    <td class="w-70-per p-10 fs-10">{{ sorting_item.prepared_by_date | date: \'MM/dd/yyyy\' }}</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Report Time</td>\n                                    <td class="w-70-per p-10 fs-10">{{ sorting_item.prepared_by_date | date: \'hh:mm aaa\' }}</td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div class="row mb-10">\n                    <div class="col-12">\n                        <h6>Sorted Egg Details</h6>\n                    </div>\n                </div>\n                <div class="row mb-30">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                <tr *ngFor="let egg of sorting_item.eggs; let i = index">\n                                    <td class="w-30-per alt p-10 fs-10">{{ egg.egg_type.type }}</td>\n                                    <td class="w-70-per p-10 fs-10">{{ egg.egg_count | number }}</td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div class="row mb-10">\n                    <div class="col-12">\n                        <h6>Report Signatory</h6>\n                    </div>\n                </div>\n                <div class="row mb-30">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Prepared by</td>\n                                    <td class="w-70-per p-10 fs-10">{{ sorting_item.prepared_by_name }} ({{ sorting_item.prepared_by_role }})</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Signature</td>\n                                    <td class="w-70-per p-10 fs-10">\n                                        <img [src]="sorting_item.prepared_by_path" class="img-responsive">\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div class="row mb-30" *ngIf="sorting_item.checked_by">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Checked by</td>\n                                    <td class="w-70-per p-10 fs-10">{{ sorting_item.checked_by_name }} ({{ sorting_item.checked_by_role }})</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Signature</td>\n                                    <td class="w-70-per p-10 fs-10">\n                                        <img [src]="sorting_item.checked_by_path" class="img-responsive">\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div class="row" *ngIf="sorting_item.received_by">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Received by</td>\n                                    <td class="w-70-per p-10 fs-10">{{ sorting_item.received_by_name }} ({{ sorting_item.received_by_role }})</td>\n                                </tr>\n                                <tr>\n                                    <td class="w-30-per alt p-10 fs-10">Signature</td>\n                                    <td class="w-70-per p-10 fs-10">\n                                        <img [src]="sorting_item.received_by_path" class="img-responsive">\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class="row ml-0 mr-0 mt-20 border-bottom">\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Prepared By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 fs-14">{{ user_profile.user_profile.first_name }} {{ user_profile.user_profile.last_name }}</p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-4 ml-auto">\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto mt-40">\n                            <p class="fw-500 fs-14">Approved By:</p>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8 col-8 text-center mt-40">\n                            <p class="mb-0 h-22"></p>\n                            <hr class="m-0">\n                            <p class="fs-12">Signature over Printed Name</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row mt-30">\n        <div class="col-xl-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportPdf(\'pdf\')">\n                <i class="icon-download"></i>\n                <span class="ml-15">Download as PDF</span>\n            </button>\n        </div>\n    </div>\n</div>'},oCoS:function(t,e,n){"use strict";n.r(e),e.default="<p>stocks-view works!</p>\n"},oD5Q:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n  <div class="row mb-35">\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-9 col-9">\n      <h1 class="heading">House/Building Management</h1>\n      <ng-container *ngIf="showtimeago">\n        <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n        <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n          \'border-radius\' : \'5px\',\n          \'margin-bottom\' : \'10px\',\n          \'height\' : \'20px\'\n        }"></ngx-skeleton-loader>\n      </ng-container>\n    </div>\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-3 col-3 ml-auto">\n      <button mat-flat-button class="btn btn-primary btn-block" (click)="openModal()">\n        <i class="icon-add"></i>\n        <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">Add new house/building</span>\n      </button>\n    </div>\n  </div>\n  <div class="container-card p-30">\n    <div class="row mb-25">\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-3 col-lg-5 col-md-auto col-sm-auto col-12 ml-auto">\n        <div class="form-group">\n          <div class="inner-group search">\n            <i class="icon-search"></i>\n            <input type="text" class="form-control" id="inputSearch" placeholder="Search a House/Bldg no." [(ngModel)]="search"\n              (keydown.enter)="searchItem()" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf="visible_columns.length > 0">\n      <div class="data-table p-relative table-listing" style="overflow: auto;">\n        <table>\n          <thead>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf="isLoaded && items.length > 0">\n              <tr *ngFor="let item of items; let i = index">\n                <td>{{ item.house_name }}</td>\n                <td>{{ item.capacity | number }}</td>\n                <td>\n                  <button mat-flat-button class="btn btn-clear" (click)="openModal(item, \'edit\')">\n                    <i class="icon-datatables-edit"></i>\n                    Edit\n                  </button>\n                  <button mat-flat-button class="btn btn-clear" (click)="openModal(item, \'delete\')" *ngIf="item.canDelete">\n                    <i class="icon-datatables-delete"></i>\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="!isLoaded">\n              <tr>\n                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                  <ngx-skeleton-loader [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'0px\',\n                    \'height\' : \'20px\'\n                  }"></ngx-skeleton-loader>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && items.length == 0">\n              <tr>\n                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n              </tr>\n            </ng-container>\n          </tbody>\n          <tfoot>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n      <div class="row">\n        <div class="col-12 text-center">\n          <p class="mb-0">Please choose column visibility</p>\n        </div>\n      </div>\n    </ng-container>\n    <div class="row mt-35">\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n        <ul class="paginate pull-right">\n          <li class="link cursor-pointer" *ngIf="prev_page">\n              <a (click)="gotoPage(prev_page)">\n                  Previous\n              </a>\n          </li>\n          <ng-container *ngFor="let x of counter(totalPages); let i = index">\n            <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n          </ng-container>\n          <li class="link cursor-pointer" *ngIf="next_page">\n              <a (click)="gotoPage(next_page)">\n                  Next\n              </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</section>  '},p5Qh:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <h1 class="heading">Sales Performance Report</h1>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()" [disabled]="!isLoaded">\n                <i class="icon-download"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n                <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n            </button>\n        </div>\n    </div>\n    <div class="container-card p-30">\n        <div class="row mb-30">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                <p class="mb-10">Overall Sales</p>\n                <ng-container *ngIf="showtimeago">\n                    <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n                    <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n                        \'border-radius\' : \'5px\',\n                        \'margin-bottom\' : \'10px\',\n                        \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                </ng-container>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                        <div class="form-group mb-0">\n                            <div class="inner-group in-line">\n                                <label class="mr-15">Show:</label>\n\n                                <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                                <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                                <button type="button" mat-flat-button class="btn btn-drop-down btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? (from | date: \'MMMM dd, yyyy\') + \' - \' + (to | date: \'MMMM dd,yyyy\') : \'Date Range\' }}\n                                    <i class="icon-arrow-drop-down ml-5 p-initial"></i>\n                                </button>\n                                \x3c!-- <mat-select multiple class="btn btn-drop-down btn-block text-left" (selectionChange)="changeColumnVisibility($event)" placeholder="All egg type" [(ngModel)]="visible_columns" >\n                                    <mat-select-trigger>All egg type</mat-select-trigger>\n                                    <ng-container *ngFor="let item of ths; let i = index">\n                                        <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                                    </ng-container>\n                                </mat-select> --\x3e\n\n                                \x3c!-- <mat-select multiple class="btn btn-drop-down text-left" placeholder="All egg type" (selectionChange)="eggTypeSelected($event, i)" [(ngModel)]="selected_eggs">\n                                    <mat-select-trigger>All egg type</mat-select-trigger>\n                                    <mat-option *ngFor="let egg_type of egg_type_options" [value]="egg_type.id">{{ egg_type.type }}</mat-option>\n                                </mat-select> --\x3e\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group mb-0">\n                            <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                            <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? (from | date: \'MMMM dd, yyyy\') + \' - \' + (to | date: \'MMMM dd, yyyy\') : \'Choose harvest dates\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div> --\x3e\n                    \x3c!-- <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto" *ngIf="from && to">\n                        <button type="button" mat-flat-button class="btn btn-clear btn-sm" (click)="clearFilters()">Reset Filter</button>\n                    </div> --\x3e\n                </div>\n                <div class="row" *ngIf="from && to">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto">\n                        <button type="button" mat-flat-button class="btn btn-clear btn-sm" (click)="clearFilters()">Reset Filter</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="row mb-30">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                <p>Fully Paid Orders</p>\n                <div class="row">\n                    <h3 class="pl-15">₱ {{ item.fully_paid_orders ? (item.fully_paid_orders | number : \'1.2-2\') : \'0.00\' }}</h3>\n                    <span class="pl-10 pt-5">{{ item.increase_rate | number : \'1.2-2\' }}%</span>\n                    <ng-container *ngIf="item.is_increasing">\n                        <i class="material-icons pt-5">arrow_drop_up</i>\n                    </ng-container>\n                    <ng-container *ngIf="!item.is_increasing">\n                        <i class="material-icons pt-5">arrow_drop_down</i>\n                    </ng-container>\n                </div>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                <p>Pending Orders</p>\n                <h3>{{ item.pending_orders ? (item.pending_orders | number) : 0 }}</h3>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto border-right">\n                <p>Collectibles</p>\n                <h3>{{ item.collectibles ? (item.collectibles | number) : 0 }}</h3>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p>Collectible Amount</p>\n                <h3>₱ {{ item.collectibles_amount ? (item.collectibles_amount | number : \'1.2-2\') : \'0.00\' }}</h3>\n            </div>\n        </div>\n        \x3c!-- <div class="row mb-30">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                <p class="mb-10">Overall Harvested Eggs</p>\n                <h1 class="heading">{{ overall_harvested_eggs | number }}</h1>\n            </div>\n        </div> --\x3e\n        <div class="row mb-30" *ngIf="isLoaded && items.length > 0">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                <canvas baseChart \n                    [datasets]="lineChartData"\n                    [labels]="lineChartLabels"\n                    [options]="lineChartOptions"\n                    [plugins]="lineChartPlugins"\n                    [legend]="lineChartLegend"\n                    [chartType]="lineChartType">\n                </canvas>\n            </div>\n            <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p>All Dates</p>\n            </div>\n            <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                \x3c!-- <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p> --\x3e\n                <p>Date</p>\n            </div>\n        </div>\n        <ng-container *ngIf="visible_columns.length > 1">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <table>\n                        <thead>\n                            <tr>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                                </ng-container>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <ng-container *ngIf="isLoaded && items.length > 0">\n                                <tr *ngFor="let item of items; let i = index">\n                                    <td *ngIf="ths[0].isVisible" class="w-50-per">{{ item.date | date: \'MM/dd/yyyy\' }}</td>\n                                    <td *ngIf="ths[1].isVisible" class="w-50-per">₱ {{ item.total | number : \'1.2-2\' }}</td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="!isLoaded">\n                                <tr>\n                                    <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                        <ngx-skeleton-loader [theme]="{\n                                        \'border-radius\' : \'5px\',\n                                        \'margin-bottom\' : \'0px\',\n                                        \'height\' : \'20px\'\n                                        }"></ngx-skeleton-loader>\n                                    </td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="isLoaded && items.length == 0">\n                                <tr>\n                                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                </tr>\n                            </ng-container>\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                                </ng-container>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n            <div class="row">\n                <div class="col-12 text-center">\n                <p class="mb-0">Please choose egg type</p>\n                </div>\n            </div>\n        </ng-container>\n        <div class="row mt-35">\n            <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12 ml-auto" *ngIf="totalPages > 1">\n                <ul class="paginate pull-right">\n                <li class="link cursor-pointer" *ngIf="prev_page">\n                    <a (click)="gotoPage(prev_page)">\n                        Previous\n                    </a>\n                </li>\n                <ng-container *ngFor="let x of counter(totalPages); let i = index">\n                    <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n                </ng-container>\n                <li class="link cursor-pointer" *ngIf="next_page">\n                    <a (click)="gotoPage(next_page)">\n                        Next\n                    </a>\n                </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</section>'},pIw5:function(t,e,n){"use strict";n.r(e),e.default=""},pNTh:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-9 col-9">\n            <h1 class="heading">Consumption Report</h1>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-3 col-3 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="downloadModal()" [disabled]="!isLoaded">\n                <i class="icon-download"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n                <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n            </button>\n        </div>\n    </div>\n    <div class="row pl-15 pr-30 pb-30">\n        <div class="col-lg-4">\n            <h5 class="">Medicine Consumption</h5>\n\x3c!--             <ng-container *ngIf="showtimeago">\n                <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated\n                    {{ activity.updated_at | timeago }}</p>\n                <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n                                \'border-radius\' : \'5px\',\n                                \'margin-bottom\' : \'10px\',\n                                \'height\' : \'20px\'\n                            }"></ngx-skeleton-loader>\n            </ng-container> --\x3e\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-12 col-sm-12 col-12 ml-auto">\n            <div class="row">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                    <div class="form-group mb-0">\n                        <div class="inner-group in-line">\n                            <label class="mr-15">Show:</label>\n\n                            <mat-select multiple class="btn btn-drop-down btn-block text-left btn-background" (selectionChange)="changeColumnVisibility($event)" placeholder="All house/building" [(ngModel)]="visible_columns" >\n                                <mat-select-trigger>All house/building</mat-select-trigger>\n                                <ng-container *ngFor="let item of ths; let i = index">\n                                    <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                                </ng-container>\n                            </mat-select>\n\n                            \x3c!-- <mat-select multiple class="btn btn-drop-down text-left" placeholder="All egg type" (selectionChange)="eggTypeSelected($event, i)" [(ngModel)]="selected_eggs">\n                                <mat-select-trigger>All egg type</mat-select-trigger>\n                                <mat-option *ngFor="let egg_type of egg_type_options" [value]="egg_type.id">{{ egg_type.type }}</mat-option>\n                            </mat-select> --\x3e\n                        </div>\n                    </div>\n                </div>\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                    <div class="form-group mb-0">\n                        <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                        <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                        <button type="button" mat-flat-button class="btn btn-drop-down btn-block text-left btn-background" (click)="created_at_picker.open()">{{ from && to ? (from | date: \'MMMM dd, yyyy\') + \' - \' + (to | date: \'MMMM dd, yyyy\') : \'Choose harvest dates\' }}\n                            <i class="icon-arrow-drop-down ml-5"></i>\n                        </button>\n                    </div>\n                </div>\n                \n            </div>\n            <div class="row">\n                <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto" *ngIf="from && to">\n                    <button type="button" mat-flat-button class="btn btn-clear btn-sm" (click)="clearFilters()">Reset Filter</button>\n                </div>\n            </div>\n        </div>\n        \x3c!-- <div class="col-lg-8">\n            <div class="row">       \n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-12 col-12 pt-10 text-right ml-auto">\n                    <span class="">Show:</span>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-12 col-12 ml-auto">\n                    <mat-select multiple class="btn btn-drop-down btn-block btn-background" (selectionChange)="changeColumnVisibility($event)"\n                        placeholder="All house/building" [(ngModel)]="visible_columns">\n                        <mat-select-trigger>All house/building</mat-select-trigger>\n                        <ng-container *ngFor="let item of ths; let i = index">\n                            <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                        </ng-container>\n                    </mat-select>\n                </div>\n                <div class="col-xl-4 col-lg-4 col-md-4 col-sm-12 col-12 ml-auto">\n                    <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0"\n                        (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                    <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                    <button type="button" mat-flat-button class="btn btn-drop-down btn-block btn-background"\n                        (click)="created_at_picker.open()">{{ from && to ? (from | date: \'MMMM dd, yyyy\') + \' - \' + (to | date: \'MMMM dd, yyyy\') : \'Choose Dates\' }}\n                        <i class="icon-arrow-drop-down ml-5"></i>\n                    </button>\n                </div>\n            </div>\n        </div> --\x3e\n    </div>\n    <div class="row">\n        <div class="col-xl-3 col-lg-3 col-md-3 col-sm-3">\n            <div class="container-card p-30">\n                <h6 class="mb-20">List of Medicines</h6>\n                    <div class="col-lg-12 col-lg-12 col-md-12 col-sm-12">\n                        <ng-container *ngIf="isLoaded && items.length > 0">\n                            <tr *ngFor="let med of medicines; let i = index">\n                                <button class="btn btn-medicine btn-block mb-20" (click)="selectMed(med.id)">\n                                    <td class="">{{ med.medicine }}</td>\n                                </button>\n                            </tr>\n                        </ng-container>\n                    </div>\n            </div>\n        </div>\n        <div class="col-xl-9 col-lg-9 col-md-9 col-sm-9">\n            <div class="container-card p-30">\n                <div class="row mb-30" *ngIf="isLoaded && items.length > 0">\n                    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                        <canvas baseChart \n                            [datasets]="barChartData"\n                            [labels]="barChartLabels"\n                            [options]="barChartOptions"\n                            [plugins]="barChartPlugins"\n                            [legend]="barChartLegend"\n                            [chartType]="barChartType">\n                        </canvas>\n                    </div>\n                    <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                        <p>All Dates</p>\n                    </div>\n                    <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                        <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n                    </div>\n                </div>\n                <div class="row p-10">\n                    <ng-container *ngIf="visible_columns.length > 1">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th class="sort" (click)="orderList(true, \'received_by_date\', order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                            Date\n                                            <i *ngIf="order.order_by_column == \'received_by_date\'"\n                                                [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                            <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != \'received_by_date\' }"></i>\n                                        </th>\n                                        <ng-container *ngFor="let th of ths; let i = index">\n                                            <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }"\n                                                (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                                {{ th.label }}\n                                                <ng-container *ngIf="th.canSort">\n                                                    <i *ngIf="order.order_by_column == th.key"\n                                                        [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                                </ng-container>\n                                            </th>\n                                        </ng-container>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <ng-container *ngIf="isLoaded && items.length > 0">\n                                        <tr *ngFor="let item of items; let i = index">\n                                            <td>{{ item.date | date: \'LL/dd/yyyy\'}}</td>\n                                            <ng-container *ngFor="let house of item.house; let x = index">\n                                                <td *ngIf="ths[x].isVisible">\n                                                    {{ house.medicine_volume }}\n                                                </td>\n                                            </ng-container>\n                                        </tr>\n                                    </ng-container>\n                                    <ng-container *ngIf="!isLoaded">\n                                        <tr>\n                                            <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                                <ngx-skeleton-loader [theme]="{\n                                                    \'border-radius\' : \'5px\',\n                                                    \'margin-bottom\' : \'0px\',\n                                                    \'height\' : \'20px\'\n                                                }"></ngx-skeleton-loader>\n                                            </td>\n                                        </tr>\n                                    </ng-container>\n                                    <ng-container *ngIf="isLoaded && items.length == 0">\n                                        <tr>\n                                            <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                        </tr>\n                                    </ng-container>\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <th class="sort" (click)="orderList(true, \'received_by_date\', order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                            Date\n                                            <i *ngIf="order.order_by_column == \'received_by_date\'"\n                                                [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                            <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != \'received_by_date\' }"></i>\n                                        </th>\n                                        <ng-container *ngFor="let th of ths; let i = index">\n                                            <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }"\n                                                (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                                {{ th.label }}\n                                                <ng-container *ngIf="th.canSort">\n                                                    <i *ngIf="order.order_by_column == th.key"\n                                                        [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                                </ng-container>\n                                            </th>\n                                        </ng-container>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </ng-container>\n                    <div class="row mt-35">\n                        <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n                            <ul class="paginate pull-right">\n                                <li class="link cursor-pointer" *ngIf="prev_page">\n                                    <a (click)="gotoPage(prev_page)">\n                                        Previous\n                                    </a>\n                                </li>\n                                <ng-container *ngFor="let x of counter(totalPages); let i = index">\n                                    <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}\n                                    </li>\n                                </ng-container>\n                                <li class="link cursor-pointer" *ngIf="next_page">\n                                    <a (click)="gotoPage(next_page)">\n                                        Next\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>'},pejN:function(t,e,n){"use strict";n.r(e),e.default='<div class="row">\n    <div class="col-12">\n        <h6 class="mini-heading">{{ modal_title }}</h6>\n    </div>\n</div>\n    <ng-container *ngIf="action == \'delete\'">\n        <div class="row">\n            <div class="col-12">\n                <div class="form-group">\n                    <label class="text-secondary">{{ modal_message }}</label>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n        <form [formGroup]="medicineUpdateForm">\n            <div class="row">\n                <div class="col-xl-12 col-lg-12 col-md-12 mb-20">\n                    <div class="form-group">\n                        <label class="text-secondary">Select Medicine. <span class="required">*</span></label>\n                        <div class="row">\n                            <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12" *ngFor="let meds of medicines; let x = index">\n                                <mat-checkbox [value]="meds.id" [checked]="med[x].value > 0 ? true : false" (change)="checkbox($event, x)">{{ meds.medicine }}</mat-checkbox>\n                                <div class="input-group">\n                                    <input class="form-control mb-10" [value]="med[x].value"type="number" min="0" step="0.01" placeholder="0" (input)="setMedvalue($event.target.value,x)"/>\n                                    <div class="input-group-append">\n                                        <span class="input-group-text mb-10">{{ meds.medicine_unit.unit }}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n                <div class="row">\n                        <div class="col-6 text-right">\n                            <button type="button" mat-flat-button class="btn btn-sm btn-clear" (click)="closeModal()">Cancel</button>\n                        </div>\n                        <div class="col-6">\n                            <button type="submit" mat-flat-button class="btn btn-sm btn-block btn-primary" (click)="submit()">{{ modal_primary_button }}</button>\n                        </div>\n                </div>\n        </form>'},psKS:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-9">\n            <h1 class="heading">Update Payment</h1>\n        </div>\n        <div class="col-3">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary btn-block" (click)="goBack(\'go_back\', \'payment_add\')">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to Order Info</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-30">\n        <div class="col-8">\n            <div class="container-card view-record p-30">\n                <form [formGroup]="paymentForm" (ngSubmit)="openModal()">\n                    <div class="row">\n                        <div class="col-7">\n                            <div class="form-group mb-45">\n                                <label class="text-secondary">Mode of Payment <span class="required">*</span></label>\n                                <mat-select class="btn btn-drop-down btn-block text-left" formControlName="mode_of_payment" [disabled]="!canChangeMode" (selectionChange)="changePayment($event)">\n                                    <mat-option *ngFor="let mode_of_payment of mode_of_payment_options" [value]="mode_of_payment.value">{{ mode_of_payment.label }}</mat-option>\n                                </mat-select>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <ng-container *ngIf="mode_of_payment == 1">\n                        \n                    </ng-container>\n                    <ng-container *ngIf="mode_of_payment == 2">\n                        <div class="row">\n                            <div class="col-7">\n                                <div class="form-group mb-45">\n                                    <label class="text-secondary">Credit Amount</label>\n                                    <p class="text-danger">₱ {{ paymentForm.controls.balance.value | number : \'1.2-2\' }}</p>\n                                    \x3c!-- <input type="number" min="1" placeholder="0" formControlName="balance" class="form-control mb-10" disabled> --\x3e\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-7">\n                                <div class="form-group mb-45 p-relative">\n                                    <label class="text-secondary">Date to pay credited amount<span class="required">*</span></label>\n                                    <input matInput [matDatepicker]="due_date_picker" placeholder="mm/dd/yyyy" formControlName="due_date" class="form-control date-input mb-10" (click)="due_date_picker.open()" [disabled]="userProfile && userProfile.user_role_id == 5" readonly (dateChange)="chooseDate($event)">\n                                    <mat-datepicker-toggle matSuffix [for]="due_date_picker" class="p-absolute r-0 t-30"></mat-datepicker-toggle>\n                                    <mat-datepicker #due_date_picker></mat-datepicker>\n                                    <ng-container *ngIf="paymentForm.controls.due_date.touched">\n                                        <p class="text-danger" *ngIf="paymentForm.controls.due_date.hasError(\'required\')">Date of credit payment is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <ng-container *ngIf="mode_of_payment == 3">\n                        <div class="row">\n                            <div class="col-7">\n                                <div class="form-group mb-45">\n                                    <label class="text-secondary">Total Price</label>\n                                    <p class="text-danger">₱ {{ paymentForm.controls.total_price.value | number : \'1.2-2\' }}</p>\n                                    \x3c!-- <input type="number" min="1" placeholder="0" formControlName="balance" class="form-control mb-10" disabled> --\x3e\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class="row">\n                            <div class="col-7">\n                                <div class="form-group mb-45">\n                                    <label class="text-secondary">Remaining Balance</label>\n                                    <p class="text-danger">₱ {{ paymentForm.controls.balance.value | number : \'1.2-2\' }}</p>\n                                    \x3c!-- <input type="number" min="1" placeholder="0" formControlName="balance" class="form-control mb-10" disabled> --\x3e\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-7">\n                                <div class="form-group mb-45 p-relative">\n                                    <label class="text-secondary">Date to pay balanced amount</label>\n                                    <input matInput [matDatepicker]="due_date_picker" placeholder="mm/dd/yyyy" formControlName="due_date" class="form-control date-input mb-10" (click)="due_date_picker.open()" [disabled]="userProfile && userProfile.user_role_id == 5" readonly (dateChange)="chooseDate($event)">\n                                    <mat-datepicker-toggle matSuffix [for]="due_date_picker" class="p-absolute r-0 t-30"></mat-datepicker-toggle>\n                                    <mat-datepicker #due_date_picker></mat-datepicker>\n                                    <ng-container *ngIf="paymentForm.controls.due_date.touched">\n                                        <p class="text-danger" *ngIf="paymentForm.controls.due_date.hasError(\'required\')">Date of balance payment is required</p>\n                                    </ng-container>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    \x3c!-- <div class="row">\n                        <div class="col-7">\n                            <div class="form-group mb-45">\n                                <label class="text-secondary">Payment Status <span class="required">*</span></label>\n                                <mat-select class="btn btn-drop-down btn-block text-left" formControlName="payment_status">\n                                    <mat-option *ngFor="let payment_status of payment_status_options" [value]="payment_status.value">{{ payment_status.label }}</mat-option>\n                                </mat-select>\n                            </div>\n                        </div>\n                    </div> --\x3e\n\n                    <div class="row">\n                        <div class="col-7">\n                            <div class="form-group mb-45">\n                                <label class="text-secondary">Enter Cash Amount <span class="required">*</span></label>\n                                <input class="form-control mb-10" type="number" min="0" step="0.01" formControlName="payment" (input)="calculateRemaining($event)" [readonly]="mode_of_payment==2 && !item.last_payment"/>\n                                <ng-container *ngIf="paymentForm.controls.payment.touched">\n                                    <ng-container *ngIf="mode_of_payment == 1">\n                                        <p class="text-danger" *ngIf="paymentForm.controls.payment.hasError(\'required\')">Cash amount is required</p>\n                                        <p class="text-danger" *ngIf="paymentForm.controls.payment.hasError(\'min\')">Cash amount must not be lower than the total price</p>\n                                        <p class="text-danger" *ngIf="paymentForm.controls.payment.hasError(\'max\')">Cash amount must not exceed the total price</p>\n                                    </ng-container>\n                                    <ng-container *ngIf="mode_of_payment == 2">\n                                        <p class="text-danger" *ngIf="paymentForm.controls.payment.hasError(\'required\')">Cash amount is required</p>\n                                        <p class="text-danger" *ngIf="paymentForm.controls.payment.hasError(\'min\')">Cash amount must not be lower than the total price</p>\n                                        <p class="text-danger" *ngIf="paymentForm.controls.payment.hasError(\'max\')">Cash amount must not exceed the total price</p>\n                                    </ng-container>\n                                    <ng-container *ngIf="mode_of_payment == 3">\n                                        <ng-container *ngIf="item.last_payment">\n                                            <p class="text-danger" *ngIf="paymentForm.controls.payment.hasError(\'required\')" >Cash amount is required</p>\n                                            <p class="text-danger" *ngIf="paymentForm.controls.payment.hasError(\'min\')">Cash amount must be equal to the remaining balance</p>\n                                            <p class="text-danger" *ngIf="paymentForm.controls.payment.hasError(\'max\')">Cash amount must be equal to the remaining balance</p>\n                                        </ng-container>\n                                        <ng-container *ngIf="!item.last_payment">\n                                            <p class="text-danger" *ngIf="paymentForm.controls.payment.hasError(\'required\')" >Cash amount is required</p>\n                                            <p class="text-danger" *ngIf="paymentForm.controls.payment.hasError(\'min\')">Cash amount must be atleast 50% of total amount</p>\n                                            <p class="text-danger" *ngIf="paymentForm.controls.payment.hasError(\'max\')">Cash amount must not exceed the total price</p>\n                                        </ng-container>\n                                    </ng-container>\n                                </ng-container>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row">\n                        <div class="col-7">\n                            <div class="form-group mb-45">\n                                <label class="text-secondary">Upload Official Receipt\x3c!--  <span class="required">*</span> --\x3e</label>\n                                <div class="row">\n                                    <div class="col-12 mb-10" [ngClass]="{ \'d-none\' : !isReceiptPhotoLoaded }">\n                                        <image-cropper \n                                            class="img-responsive"\n                                            [imageChangedEvent]="receiptPhoto"\n                                            [maintainAspectRatio]="false"\n                                            format="png,jpg,jpeg,ico"\n                                            (imageCropped)="imageReceiptPhotoCropped($event)"\n                                            (imageLoaded)="imageReceiptLoaded()"\n                                            [autoCrop]= "true"\n                                        ></image-cropper>\n                                    </div>\n                                    <div class="col-auto">\n                                        <input id="receipt-upload" class="d-none" type="file" (change)="receiptChange($event)" accept="image/jpeg, image/png"/>\n                                        <label for="receipt-upload" mat-flat-button class="btn btn-secondary btn-block">\n                                            {{ isReceiptPhotoLoaded ? \'Choose another file\' : \'Choose a file\' }}\n                                        </label>\n                                    </div>\n                                    <div class="col-auto flex-align-center" *ngIf="!isReceiptPhotoLoaded">\n                                        <p class="m-0 font-italic">No file chosen</p>\n                                    </div>\n                                    <p class="text-danger" *ngIf="receiptUploadWrongFile">Receipt is not valid</p>\n                                    <p class="text-danger" *ngIf="uploadReceiptMaxLimitReached">Receipt must not exceed 1MB</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row">\n                        <div class="col-7">\n                            <div class="form-group mb-45">\n                                <label class="text-secondary">Add Official Receipt no. <span class="required">*</span></label>\n                                <input class="form-control mb-10" type="text" formControlName="receipt_no" />\n                                <ng-container *ngIf="paymentForm.controls.receipt_no.touched">\n                                    <p class="text-danger" *ngIf="paymentForm.controls.receipt_no.hasError(\'required\')">Official Receipt no. is required</p>\n                                </ng-container>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row">\n                        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                            <button type="button" mat-flat-button class="btn btn-clear btn-block" (click)="goBack(\'form_cancel\', \'payment_add\')">\n                                Cancel\n                            </button>\n                        </div>\n                        <div class="col-xl-3 col-lg-3 col-md-4 col-sm-12 col-12">\n                            <button type="submit" mat-flat-button class="btn btn-primary btn-block" [disabled]="!paymentForm.valid">\n                                Save\n                            </button>\n                        </div>\n                        <div class="col-xl-3 col-lg-4 col-md-4 col-sm-12 col-12">\n                            <button type="button" mat-flat-button class="btn btn-secondary btn-block" [disabled]="!paymentForm.valid" (click)="savePrint()">\n                                Save & Preview\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class="col-4">\n            <div class="row mb-30">\n                <div class="col-12">\n                    <div class="container-card view-record p-30">\n                        <div class="row mb-10">\n                            <div class="col-xl-12 col-lg-12 col-md-12 order-summary">\n                                <p class="mini-heading">Cost Summary</p>\n                                <div class="row">\n                                    <div class="col-auto">\n                                        <p class="mb-0">Items</p>\n                                    </div>\n                                    <div class="col-auto ml-auto">\n                                        <p class="mb-0">Amount</p>\n                                    </div>\n                                </div>\n                                <hr class="h-2">\n                                <ng-container *ngFor="let item of item.order_items; let i = index">\n                                    <div class="row">\n                                        <div class="col-12">\n                                            <p class="fs-15 m-0 lh-22">Fresh Egg</p>\n                                            <p class="fs-15 m-0 lh-22"><span class="text-secondary">Size: </span>{{ item.egg_type.type }}</p>\n                                            <p class="fs-14 m-0 lh-19">\n                                                <span class="text-secondary">Qty: </span>\n                                                <ng-container *ngFor="let details of item.order_item_details; let i = index">\n                                                    <span *ngIf="details.qty > 0">{{ details.qty | number }} {{ details.egg_cart_type.type | lowercase }}{{ details.qty > 1 ? \'s\' : \'\' }}<ng-container *ngIf="item.order_item_details.length - 1 > i">, </ng-container><br *ngIf="details.qty >= 99999 && item.order_item_details.length - 1 > i"></span>\n                                                </ng-container>\n                                            </p>\n                                        </div>\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0 lh-22">₱ {{ item.order_item_details[0].price | number : \'1.2-2\' }} x {{ item.total_pieces }}</p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0 lh-22">₱ {{ item.total_price | number : \'1.2-2\' }}</p>\n                                        </div>\n                                        <div class="col-12">\n                                            <p class="fs-12 m-0 text-secondary font-italic lh-19">(Price per egg size x total no. of eggs)</p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                </ng-container>\n                                <ng-container *ngIf="item.discount > 0">\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0">\n                                                Discounted\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0">\n                                                ₱ {{ item.discount | number : \'1.2-2\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                </ng-container>\n                                <ng-container *ngIf="mode_of_payment == 1">\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-17 m-0 fw-500">\n                                                Order Total ({{ item.total_pieces | number }} items)\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-17 m-0 text-danger fw-500">\n                                                ₱ {{ item.total_price | number : \'1.2-2\' }}\n                                            </p>\n                                            \x3c!-- <p class="fs-12 m-0" *ngIf="item.discount > 0">\n                                                (-₱ {{ item.discount | number : \'1.2-2\' }})\n                                            </p> --\x3e\n                                        </div>\n                                    </div>\n                                </ng-container>\n                                <ng-container *ngIf="mode_of_payment == 2">\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0">\n                                                Order Total ({{ item.total_pieces | number }} items)\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0">\n                                                ₱ {{ item.total_price | number : \'1.2-2\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-17 m-0 fw-500">\n                                                Credit Amount\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-17 m-0 text-danger fw-500">\n                                                ₱ {{ item.total_price | number : \'1.2-2\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0">\n                                                Date to pay credited amount\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0 text-danger">\n                                                {{ paymentForm.controls.due_date.value ? (paymentForm.controls.due_date.value | date: \'MM/dd/yyyy\') : \'Pick due date\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                                <ng-container *ngIf="mode_of_payment == 3">\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0">\n                                                Order Total ({{ item.total_pieces | number }} items)\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0">\n                                                ₱ {{ item.total_price | number : \'1.2-2\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0">\n                                                Initial Payment\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0">\n                                                ₱ {{ item.payment.payment | number : \'1.2-2\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-17 m-0 fw-500">\n                                                Remaining Balance\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-17 m-0 text-danger fw-500">\n                                                ₱ {{ item.payment.balance | number : \'1.2-2\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                    <div class="row">\n                                        <div class="col-auto">\n                                            <p class="fs-15 m-0">\n                                                Date to pay balanced amount\n                                            </p>\n                                        </div>\n                                        <div class="col-auto ml-auto">\n                                            <p class="fs-15 m-0 text-danger">\n                                                {{ paymentForm.controls.due_date.value ? (paymentForm.controls.due_date.value | date: \'MM/dd/yyyy\') : \'Pick due date\' }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>'},qItx:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <button type="button" mat-flat-button class="btn btn-secondary" (click)="goBack()">\n              <i class="material-icons">arrow_back</i>\n              <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <h1 class="heading">Sacks Inventory/Stocks</h1>\n            <p class="sub-heading mb-8">Date: <strong>{{ items.created_at | date: \'MMMM dd, yyyy\' }}</strong></p>\n            <p class="sub-heading mb-8">Warehouseman: <strong>{{ items.name }}</strong></p>\n            <ng-container *ngIf="showtimeago">\n              <p class="sub-heading italic" *ngIf="activity && activity.created_at">last updated {{ activity.created_at | timeago }}</p>\n              <ngx-skeleton-loader *ngIf="!activity || !activity.created_at" [theme]="{\n                  \'border-radius\' : \'5px\',\n                  \'margin-bottom\' : \'10px\',\n                  \'height\' : \'20px\'\n              }"></ngx-skeleton-loader>\n            </ng-container>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n          <button type="button" mat-flat-button class="btn btn-primary btn-block" [disabled]="!isLoaded">\n            <i class="icon-download"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n            <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n          </button>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6">\n          <button type="button" mat-flat-button class="btn btn-primary btn-block" [disabled]="!isLoaded">\n            <i class="icon-download"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as CSV</span>\n            <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">CSV</span>\n          </button>\n        </div>\n    </div>\n    <div class="row mb-35">\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 mb-15">\n            <div class="container-card p-20">\n                <p>Beginning stocks</p>\n                <h1 class="heading">{{ items.last_data ? (items.last_data.last_ending | number) : 0  }}</h1>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 mb-15">\n            <div class="container-card p-20">\n                <p>No. of In/from House</p>\n                <h1 class="heading">{{ in_house | number  }}</h1>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 mb-15">\n            <div class="container-card p-20">\n                <p>No. of Out/Sales</p>\n                <h1 class="heading">{{ out_sales | number  }}</h1>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 mb-15">\n            <div class="container-card p-20">\n                <p>Total Remaining for this day</p>\n                <h1 class="heading">{{ items.last_ending | number  }}</h1>\n            </div>\n        </div>\n    </div>\n    <div class="container-card p-30">\n      <ng-container *ngIf="visible_columns.length > 0">\n        <div class="data-table p-relative table-listing" style="overflow: auto;">\n          <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n            <thead>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </thead>\n            <tbody>\n              <ng-container *ngIf="isLoaded && items">\n                <tr>\n                  <td>Sacks</td>\n                  <td>{{ items.last_ending > 0 ? \'Available\' : \'Out of Stock\' }}</td>\n                  <td>{{ items.last_data ? (items.last_data.last_ending | number) : 0  }}</td>\n                  <td *ngFor="let item of items.sack_bldg_inventory; let i = index">{{ item.count | number }}</td>\n                  <td>{{ items.total_in | number }}</td>\n                  <td>{{ items.total_out | number }}</td>\n                  <td>{{ items.sales | number }}</td>\n                  <td>{{ items.last_ending | number }}</td>\n                  <td>{{ items.remarks }}</td>\n                  <td>{{ items.remarks_out }}</td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="!isLoaded">\n                <tr>\n                  <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                    <ngx-skeleton-loader [theme]="{\n                      \'border-radius\' : \'5px\',\n                      \'margin-bottom\' : \'0px\',\n                      \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                  </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="isLoaded && !items">\n                <tr>\n                  <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                </tr>\n              </ng-container>\n            </tbody>\n            <tfoot>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </ng-container>\n      <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n        <div class="row">\n          <div class="col-12 text-center">\n            <p class="mb-0">Please choose column visibility</p>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </section>'},"qg+9":function(t,e,n){"use strict";n.r(e),e.default=""},qzQC:function(t,e,n){"use strict";n.r(e),e.default=""},romT:function(t,e,n){"use strict";n.r(e),e.default=""},tIRD:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n  <div class="row mb-35">\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n      <h1 class="heading">Sacks Inventory/Stocks </h1>\n      <p class="sub-heading mb-8">Grand total quantity of sacks: <strong>{{ totalItems | number }}</strong></p>\n      <ng-container *ngIf="showtimeago">\n        <p class="sub-heading italic" *ngIf="activity && activity.created_at">last updated {{ activity.created_at | timeago }}</p>\n        <ngx-skeleton-loader *ngIf="!activity || !activity.created_at" [theme]="{\n            \'border-radius\' : \'5px\',\n            \'margin-bottom\' : \'10px\',\n            \'height\' : \'20px\'\n        }"></ngx-skeleton-loader>\n      </ng-container>\n    </div>\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n      <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()" [disabled]="!isLoaded">\n        <i class="icon-download"></i>\n        <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n        <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n      </button>\n    </div>\n    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6">\n      <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportToCsv()" [disabled]="!isLoaded">\n        <i class="icon-download"></i>\n        <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as CSV</span>\n        <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">CSV</span>\n      </button>\n    </div>\n  </div>\n\n  <div class="container-card p-30 mb-25" *ngIf="show_filter">\n    <div class="row">\n      <div class="col-12">\n        <h6 class="card-heading">Filters</h6>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n        <div class="row">\n\x3c!--           <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <input [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n              <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n              <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block" (click)="created_at_picker.open()">{{ from && to ? \'Dates - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Dates\' }}\n                <i class="icon-arrow-drop-down ml-5"></i>\n              </button>\n            </div>\n          </div> --\x3e\n        </div>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n        <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n              Clear Filters\n            </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="container-card p-30">\n    <div class="row mb-25">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-3 offset-xl-2 col-lg-4 offset-lg-2 col-md-8 col-sm-9 col-8">\n        <div class="form-group">\n          <div class="inner-group search">\n            <i class="icon-search"></i>\n            <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n              (keydown.enter)="searchItem()" />\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n        <div class="form-group">\n\x3c!--           <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n            <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n            <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n          </button> --\x3e\n          <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <div class="form-group">\n              <input [max]="max_date" [satDatepicker]="created_at_picker" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)"\n                [(ngModel)]="created_at">\n              <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n              <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block"\n                (click)="created_at_picker.open()">{{ from && to ? \'Dates - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Dates\' }}\n                <i class="icon-arrow-drop-down ml-5"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf="visible_columns.length > 0">\n      <div class="data-table p-relative table-listing" style="overflow: auto;">\n        <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n          <thead>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngIf="isLoaded && items.length > 0">\n              <tr *ngFor="let item of items; let i = index">\n                <td>{{ item.created_at | date: \'MM/dd/yyyy\' }}</td>\n                <td>{{ item.last_data ? (item.last_data.last_ending) : 0 }}</td>\n                <td>{{ item.total_in | number }}</td>\n                <td>{{ item.total_out_sales | number }}</td>\n                <td>{{ item.last_ending | number }}</td>\n                <td>{{ item.name }}</td>\n                <td>\n                  <button type="button" mat-flat-button class="btn btn-clear text-blue" [routerLink]="[ \'/inventory-stocks/sacks/view\', item.id]">\n                    <i class="icon-datatables-view"></i>\n                    View\n                  </button>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="!isLoaded">\n              <tr>\n                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                  <ngx-skeleton-loader [theme]="{\n                    \'border-radius\' : \'5px\',\n                    \'margin-bottom\' : \'0px\',\n                    \'height\' : \'20px\'\n                  }"></ngx-skeleton-loader>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf="isLoaded && items.length == 0">\n              <tr>\n                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n              </tr>\n            </ng-container>\n          </tbody>\n          <tfoot>\n            <tr>\n              <ng-container *ngFor="let th of ths; let i = index">\n                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                  {{ th.label }}\n                  <ng-container *ngIf="th.canSort">\n                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                  </ng-container>\n                </th>\n              </ng-container>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="isLoaded && visible_columns.length == 0">\n      <div class="row">\n        <div class="col-12 text-center">\n          <p class="mb-0">Please choose column visibility</p>\n        </div>\n      </div>\n    </ng-container>\n    <div class="row mt-35">\n      <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n        <div class="form-group">\n          <div class="inner-group in-line">\n            <label class="mr-15">Show</label>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n            </mat-select>\n            <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n            </mat-select>\n            <label>of {{ totalItems | number }} entries</label>\n          </div>\n        </div>\n      </div>\n      <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n        <ul class="paginate pull-right">\n          <li class="link cursor-pointer" *ngIf="prev_page">\n              <a (click)="gotoPage(prev_page)">\n                  Previous\n              </a>\n          </li>\n          <ng-container *ngFor="let x of counter(totalPages); let i = index">\n            <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n          </ng-container>\n          <li class="link cursor-pointer" *ngIf="next_page">\n              <a (click)="gotoPage(next_page)">\n                  Next\n              </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</section>'},tpiK:function(t,e,n){"use strict";n.r(e),e.default='<div class="row">\n    <div class="col-12">\n        <h6 class="mini-heading">{{ modal_title }}</h6>\n    </div>\n</div>\n<ng-container *ngIf="action == \'delete\'">\n    <div class="row">\n        <div class="col-12">\n            <div class="form-group">\n                <label class="text-secondary">{{ modal_message }}</label>\n            </div>\n        </div>\n    </div>\n</ng-container>\n<form [formGroup]="feedUpdateForm">\n    <div class="row">\n        <div class="col-xl-6 col-lg-6 col-md-6">\n            <div class="form-group">\n                <label class="fs-16 mb-10">Choose a feed</label>\n                <mat-select class="btn btn-drop-down btn-block text-left mb-10" placeholder="Please choose feed" [value]="feed.feed_id" (selectionChange)="chooseFeed($event)">\n                    <mat-option *ngFor="let feed of feed_options" [value]="feed.id">{{ feed.feed }}</mat-option>\n                </mat-select>\n            </div>\n        </div>\n        <div class="col-xl-6 col-lg-6 col-md-6">\n            <div class="form-group">\n                <label class="fs-16 mb-10">Feed Consumption</label>\n                <input type="number" class="form-control mb-10" placeholder="0" maxlength="10" (input)="setFeedValue($event.target.value)" [value]="feed.feed_consumption"/>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-6 text-right">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear" (click)="closeModal()">Cancel</button>\n        </div>\n        <div class="col-6">\n            <button type="submit" mat-flat-button class="btn btn-sm btn-block btn-primary" (click)="submit()">{{ modal_primary_button }}</button>\n        </div>\n    </div>\n</form>'},u4Dn:function(t,e,n){"use strict";n.r(e),e.default=""},uefp:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n            <h1 class="heading">Sales Performance Report</h1>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n            <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()" [disabled]="!isLoaded">\n                <i class="icon-download"></i>\n                <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n                <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n            </button>\n        </div>\n    </div>\n    <div class="container-card p-30">\n        <div class="row">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                <p class="mb-10">Total Sales by egg sizes</p>\n                <p class="sub-heading">Total number of sales based on egg sizes</p>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n                        <div class="form-group mb-0">\n                            <div class="inner-group in-line">\n                                <label class="mr-15">Show:</label>\n                                <mat-select multiple class="btn btn-drop-down btn-block text-left" (selectionChange)="changeColumnVisibility($event)" placeholder="All egg type" [(ngModel)]="visible_columns" >\n                                    <mat-select-trigger>By egg type</mat-select-trigger>\n                                    <ng-container *ngFor="let item of ths; let i = index">\n                                        <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                                    </ng-container>\n                                </mat-select>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <div class="form-group mb-0">\n                            <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                            <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? (from | date: \'MMMM dd, yyyy\') + \' - \' + (to | date: \'MMMM dd, yyyy\') : \'Choose sales dates\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div>\n                    \n                    \x3c!-- <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto">\n                        <div class="form-group">\n                            <mat-select multiple class="btn btn-drop-down btn-block" placeholder="All egg type" (selectionChange)="eggTypeSelected($event, i)" [(ngModel)]="selected_eggs">\n                                <mat-select-trigger>All egg type</mat-select-trigger>\n                                <mat-option *ngFor="let egg_type of egg_type_options" [value]="egg_type.id">{{ egg_type.type }}</mat-option>\n                            </mat-select>\n                        </div>\n                    </div> --\x3e\n                    \x3c!-- <div class="col-xl-5 col-lg-5 col-md-5 col-sm-12 col-12">\n                        <div class="form-group">\n                            <mat-select multiple class="btn btn-drop-down btn-block text-left" placeholder="All house/building" (selectionChange)="eggTypeSelected($event, i)" [(ngModel)]="selected_house">\n                                <mat-select-trigger>All house/building</mat-select-trigger>\n                                <mat-option *ngFor="let house of house_options" [value]="house.id">House/building no. {{ house.house_name }}</mat-option>\n                            </mat-select>\n                        </div>\n                    </div> --\x3e\n                </div>\n                <div class="row">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-auto col-auto ml-auto" *ngIf="from && to">\n                        <button type="button" mat-flat-button class="btn btn-clear btn-sm" (click)="clearFilters()">Reset Filter</button>\n                    </div>\n                </div>\n                \x3c!-- <div class="row">\n                    <div class="col-xl-8 col-lg-8 col-md-8 col-sm-12 col-12 ml-auto">\n                        <div class="form-group">\n                            <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                            <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                            <button type="button" mat-flat-button class="btn btn-drop-down btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? (from | date: \'MMMM dd, yyyy\') + \' - \' + (to | date: \'MMMM dd, yyyy\') : \'Choose harvest dates\' }}\n                                <i class="icon-arrow-drop-down ml-5"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div> --\x3e\n            </div>\n        </div>\n        <div class="row mb-30" *ngIf="isLoaded && items.length > 0">\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mb-30">\n                <canvas baseChart \n                    [datasets]="barChartData"\n                    [labels]="barChartLabels"\n                    [options]="barChartOptions"\n                    [plugins]="barChartPlugins"\n                    [legend]="barChartLegend"\n                    [chartType]="barChartType">\n                </canvas>\n            </div>\n            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                <p>Egg Sizes</p>\n            </div>\n        </div>\n        <ng-container *ngIf="visible_columns.length > 1">\n            <div class="data-table p-relative table-listing" style="overflow: auto;">\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n                        <thead>\n                            <tr>\n                                <th class="sort" (click)="orderList(true, \'received_by_date\', order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    Date\n                                    <i *ngIf="order.order_by_column == \'received_by_date\'" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != \'received_by_date\' }"></i>\n                                </th>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                                </ng-container>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            <ng-container *ngIf="isLoaded && items.length > 0">\n                                <tr *ngFor="let item of items; let i = index">\n                                <td>{{ item.grouped_date | date: \'MM/dd/yyyy\' }}</td>\n                                <ng-container *ngFor="let item of item.egg_types; let i = index">\n                                    <td *ngIf="ths[i].isVisible">{{ item.total | number }}</td>\n                                </ng-container>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="!isLoaded">\n                                <tr>\n                                <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                    <ngx-skeleton-loader [theme]="{\n                                    \'border-radius\' : \'5px\',\n                                    \'margin-bottom\' : \'0px\',\n                                    \'height\' : \'20px\'\n                                    }"></ngx-skeleton-loader>\n                                </td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="isLoaded && items.length == 0">\n                                <tr>\n                                <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                </tr>\n                            </ng-container>\n                            </tbody>\n                    </table>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n            <div class="row">\n                <div class="col-12 text-center">\n                <p class="mb-0">Please choose egg type</p>\n                </div>\n            </div>\n        </ng-container>\n        <div class="row mt-35">\n            \x3c!-- <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n                <div class="form-group">\n                <div class="inner-group in-line">\n                    <label class="mr-15">Show</label>\n                    <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                        <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n                    </mat-select>\n                    <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                        <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n                    </mat-select>\n                    <label>of {{ totalItems | number }} entries</label>\n                </div>\n                </div>\n            </div> --\x3e\n            <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12 ml-auto" *ngIf="totalPages > 1">\n                <ul class="paginate pull-right">\n                <li class="link cursor-pointer" *ngIf="prev_page">\n                    <a (click)="gotoPage(prev_page)">\n                        Previous\n                    </a>\n                </li>\n                <ng-container *ngFor="let x of counter(totalPages); let i = index">\n                    <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n                </ng-container>\n                \n                <li class="link cursor-pointer" *ngIf="next_page">\n                    <a (click)="gotoPage(next_page)">\n                        Next\n                    </a>\n                </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n        <div class="row">\n            <div class="col-xl-6">\n                <div class="container-card p-30 mt-30">\n                <p class="mb-10">Sales with credit and balance</p>\n                <div class="row" *ngIf="isLoaded && items.length > 0">\n                    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">\n                        <canvas baseChart [datasets]="barsChartData" [labels]="barsChartLabels" [options]="barsChartOptions"\n                            [plugins]="barsChartPlugins" [legend]="barsChartLegend" [chartType]="barsChartType">\n                        </canvas>\n                    </div>\n                    <div *ngIf="!from && !to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                        <p>All Dates</p>\n                    </div>\n                    <div *ngIf="from && to" class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center">\n                        <p>{{ from | date : \'MMMM dd, yyyy\' }} - {{ to | date : \'MMMM dd, yyyy\' }}</p>\n                    </div>\n                    <ng-container *ngIf="isLoaded && items.length == 0">\n                        <div class="col-12 text-center">\n                            <p class="">No Result found</p>\n                        </div>\n                    </ng-container>\n                </div>\n                </div>\n            </div>\n            <div class="col-xl-6">\n                <div class="container-card p-30 mt-30">\n                    <p class="mb-10">Location with highest orders</p>\n                    <div class="row ml-10 mr-10 meds-title">\n                        <div class="col-8">\n                            <span class="sub-heading fs-16 font-weight-normal">Location</span>\n                        </div>\n                        <div class="col-4">\n                            <span class="sub-heading fs-16 font-weight-normal">No. of orders</span>\n                        </div>\n                    </div>\n                    <span class="card-line">______________________________________________________________</span>\n                    <div class="row ml-10 mr-10 meds-cont">\n                        <ng-container *ngIf="highest_orders">\n                            <ng-container *ngFor="let item of highest_orders; let i = index">\n                                <div class="col-8">\n                                    <p class="mini-heading fs-14 mt-10 mb-0 font-weight-normal" *ngIf="isLoaded">{{ item.location_address }}\n                                    </p>\n                                    <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                                        \'border-radius\': \'5px\',\n                                                                        \'margin-bottom\': \'0px\',\n                                                                        \'height\': \'20px\',\n                                                                        \'width\': \'50%\'\n                                                                    }"></ngx-skeleton-loader>\n                                </div>\n                                <div class="col-4 text-center">\n                                    <p class="mini-heading fs-14 mt-10 mb-0 font-weight-normal" *ngIf="isLoaded">{{ item.count }}</p>\n                                    <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                                        \'border-radius\': \'5px\',\n                                                                        \'margin-bottom\': \'0px\',\n                                                                        \'height\': \'20px\',\n                                                                        \'width\': \'50%\'\n                                                                    }"></ngx-skeleton-loader>\n                                </div>\n                                <span class="card-subline">___________________________________________________________</span>\n                            </ng-container>\n                        </ng-container>\n                        <ng-container *ngIf="isLoaded && highest_orders.length == 0">\n                            <div class="col-12 text-center">\n                                <p class="">No Result found</p>\n                            </div>\n                        </ng-container>\n                    </div>\n                </div>\n            </div>\n        </div>\n</section>'},uehR:function(t,e,n){"use strict";n.r(e),e.default=""},"uj/Q":function(t,e,n){"use strict";n.r(e),e.default="p {\n  font-size: 16px;\n  color: #72787F;\n  text-transform: none;\n}\n\n.heading {\n  font-size: 24px;\n  font-weight: bold;\n  color: #1E2631;\n  text-transform: none;\n}\n\n.sub-heading {\n  color: #72787F;\n}\n\n.sub-heading.italic {\n  font-style: italic;\n}\n\n.sub-heading strong {\n  color: #1E2631;\n}\n\n.mini-heading {\n  font-size: 20px;\n  font-weight: 500;\n  color: #1E2631;\n  text-transform: none;\n}\n\n.card-heading {\n  font-size: 13px;\n  font-weight: normal;\n  text-transform: uppercase;\n  color: #72787F;\n}\n\n.sidebar {\n  color: #1E2631;\n}\n\n.sidebar ul li {\n  font-size: 16px;\n}\n\n.sidebar ul li a.main-nav {\n  color: #72787F;\n}\n\n.sidebar ul li a.main-nav.sub {\n  font-size: 14px;\n}\n\n.sidebar ul li a.main-nav:hover {\n  font-weight: 500;\n  color: #1E2631;\n}\n\n.sidebar ul li.active a {\n  font-weight: 500;\n  color: #1E2631;\n}\n\nmat-checkbox label {\n  font-size: 16px !important;\n}\n\n.vertical-text {\n  transform: rotate(-90deg);\n  -webkit-transform: rotate(-90deg);\n  -moz-transform: rotate(-90deg);\n  -ms-transform: rotate(-90deg);\n  -o-transform: rotate(-90deg);\n}\n\n.vertical-text-full {\n  width: -webkit-max-content;\n  width: -moz-max-content;\n  width: max-content;\n  position: absolute;\n  left: -25%;\n  top: 50%;\n}\n\n.body-card h1 {\n  font-weight: normal;\n}\n\n.body-card .action-note {\n  line-height: 21px;\n}\n\n.body-card .btn-secondary {\n  width: 100%;\n  padding-top: 9px;\n  padding-bottom: 5px;\n}\n\n.body-card .btn-secondary .cus-layer {\n  height: 100%;\n}\n\n.body-card .row .row {\n  width: 100% !important;\n}\n\n.body-card .row .row .tag {\n  background: #EB5A46;\n  border-radius: 34px;\n  padding: 4px 20px;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  font-size: 14px;\n  color: #fff;\n  line-height: 21px;\n}\n\n.body-card .row .row p {\n  color: #72787F;\n}\n\n.field-pasword {\n  border: transparent;\n  outline: none;\n  border: 0;\n}"},veS5:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n        <div class="col-10">\n            <h1 class="heading">View Transaction Details</h1>\n        </div>\n        <div class="col-2">\n            <button type="button" mat-flat-button class="btn btn-sm btn-secondary btn-block" (click)="goBack()">\n                <i class="icon-back"></i>\n                <span class="ml-15">Go back to list</span>\n            </button>\n        </div>\n    </div>\n    \x3c!-- <div class="row mb-30" *ngIf="item.order_status <= 3">\n        <div class="col-8">\n            <div class="order-timer">\n                <div class="note">\n                  <img src="./../../../../../assets/images/others/alert-icon.svg">\n                  Orders needed to pick up within 10 hours after processing the order.\n                  <ng-container *ngIf="!display_timer">\n                    <br><br>Note: Customer has not yet picked up the order on the specified time.\n                  </ng-container>\n                </div>\n                <div class="timer" *ngIf="display_timer">\n                  <img src="./../../../../../assets/images/others/timer.svg">\n                  <countdown divider=":" [text]="timerLabels" units="Hours | Minutes | Seconds" [end]="item.date_to_pickup" showZero="true" (reached)="removeTimer($event)"></countdown>\n                </div>\n            </div>\n        </div>\n    </div> --\x3e\n    <div class="row mb-30">\n        <div class="col-8">\n            <div class="container-card view-record p-30">\n                <div class="row mb-10">\n                    <div class="col-12">\n                        <p class="mini-heading">Order no.\n                            <ng-container *ngIf="isLoaded">{{ item.transaction_id }}</ng-container>\n                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                \'border-radius\': \'5px\',\n                                \'margin-bottom\': \'0px\',\n                                \'height\': \'20px\',\n                                \'width\': \'25%\'\n                            }"></ngx-skeleton-loader>\n                        </p>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-12">\n                        <div class="data-table p-relative table-listing" style="overflow: auto;">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td class="w-30-per alt">Order Status</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ item.status }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td class="w-30-per alt">Mode of Payment</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ item.payment_type }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td class="w-30-per alt">Payment Status</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ item.payment_status_label }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td class="w-30-per alt">Order Date</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ item.created_at | date: \'MM/dd/yyyy\' }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td class="w-30-per alt">Order Time</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ item.created_at | date: \'hh:mm aaa\' }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <ng-container *ngIf="item && item.mode_of_payment == 1">\n                                        <tr>\n                                            <td class="w-30-per alt">Total Bill</td>\n                                            <td class="w-70-per">\n                                                <ng-container *ngIf="isLoaded">\n                                                    <p class="text-danger fs-24 mb-0">₱ {{ item.total_price | number : \'1.2-2\' }}</p>\n                                                </ng-container>\n                                                <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                    \'border-radius\': \'5px\',\n                                                    \'margin-bottom\': \'0px\',\n                                                    \'height\': \'20px\',\n                                                    \'width\': \'50%\'\n                                                }"></ngx-skeleton-loader>\n                                            </td>\n                                        </tr>\n                                    </ng-container>\n                                    <ng-container *ngIf="item && item.mode_of_payment == 2">\n                                        \x3c!-- <tr>\n                                            <td class="w-30-per alt">Order Amount</td>\n                                            <td class="w-70-per">\n                                                <ng-container *ngIf="isLoaded">₱ {{ item.total_price | number : \'1.2-2\' }}</ng-container>\n                                                <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                    \'border-radius\': \'5px\',\n                                                    \'margin-bottom\': \'0px\',\n                                                    \'height\': \'20px\',\n                                                    \'width\': \'50%\'\n                                                }"></ngx-skeleton-loader>\n                                            </td>\n                                        </tr> --\x3e\n                                        <tr>\n                                            <td class="w-30-per alt">Credit Amount</td>\n                                            <td class="w-70-per">\n                                                <ng-container *ngIf="isLoaded">\n                                                    <p class="text-danger fs-24 mb-0">₱ {{ item.payment.balance | number : \'1.2-2\' }}<span *ngIf="item.discount > 0" class="fs-14">(-{{ item.discount | number : \'1.2-2\' }})</span></p>\n                                                </ng-container>\n                                                <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                    \'border-radius\': \'5px\',\n                                                    \'margin-bottom\': \'0px\',\n                                                    \'height\': \'20px\',\n                                                    \'width\': \'50%\'\n                                                }"></ngx-skeleton-loader>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Date to pay credited amount</td>\n                                            <td class="w-70-per">\n                                                <ng-container *ngIf="isLoaded">{{ item.payment.due_date | date : \'MM/dd/yyyy\' }}</ng-container>\n                                                <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                    \'border-radius\': \'5px\',\n                                                    \'margin-bottom\': \'0px\',\n                                                    \'height\': \'20px\',\n                                                    \'width\': \'50%\'\n                                                }"></ngx-skeleton-loader>\n                                            </td>\n                                        </tr>\n                                    </ng-container>\n                                    <ng-container *ngIf="item && item.mode_of_payment == 3">\n                                        <tr>\n                                            <td class="w-30-per alt">Order Amount</td>\n                                            <td class="w-70-per">\n                                                <ng-container *ngIf="isLoaded">₱ {{ item.total_price | number : \'1.2-2\' }} <span *ngIf="item.discount > 0" class="fs-14">(-{{ item.discount | number : \'1.2-2\' }})</span></ng-container>\n                                                <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                    \'border-radius\': \'5px\',\n                                                    \'margin-bottom\': \'0px\',\n                                                    \'height\': \'20px\',\n                                                    \'width\': \'50%\'\n                                                }"></ngx-skeleton-loader>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Initial Payment</td>\n                                            <td class="w-70-per">\n                                                <ng-container *ngIf="isLoaded">₱ {{ item.payment.payment | number : \'1.2-2\' }} <span *ngIf="item.discount > 0" class="fs-14">(-{{ item.discount | number : \'1.2-2\' }})</span></ng-container>\n                                                <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                    \'border-radius\': \'5px\',\n                                                    \'margin-bottom\': \'0px\',\n                                                    \'height\': \'20px\',\n                                                    \'width\': \'50%\'\n                                                }"></ngx-skeleton-loader>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Remaining Balance</td>\n                                            <td class="w-70-per">\n                                                <ng-container *ngIf="isLoaded">\n                                                    <p class="text-danger fs-24 mb-0">₱ {{ item.payment.balance | number : \'1.2-2\' }}</p>\n                                                </ng-container>\n                                                <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                    \'border-radius\': \'5px\',\n                                                    \'margin-bottom\': \'0px\',\n                                                    \'height\': \'20px\',\n                                                    \'width\': \'50%\'\n                                                }"></ngx-skeleton-loader>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td class="w-30-per alt">Date to pay credited amount</td>\n                                            <td class="w-70-per">\n                                                <ng-container *ngIf="isLoaded">{{ item.payment.due_date | date : \'MM/dd/yyyy\' }}</ng-container>\n                                                <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                    \'border-radius\': \'5px\',\n                                                    \'margin-bottom\': \'0px\',\n                                                    \'height\': \'20px\',\n                                                    \'width\': \'50%\'\n                                                }"></ngx-skeleton-loader>\n                                            </td>\n                                        </tr>\n                                    </ng-container>\n                                    <tr>\n                                        <td class="w-30-per alt">Customer Name</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ item.customer_details.profile_first_name }} {{ item.customer_details.profile_last_name }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td class="w-30-per alt">Mobile Number</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ item.customer_details.contact_number }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td class="w-30-per alt">Address</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ item.customer_details.address_address }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td class="w-30-per alt">Customer other requests/notes</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ item.note }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                    <tr *ngIf="item.created_by">\n                                        <td class="w-30-per alt">Created By</td>\n                                        <td class="w-70-per">\n                                            <ng-container *ngIf="isLoaded">{{ item.created_by }}</ng-container>\n                                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                                \'border-radius\': \'5px\',\n                                                \'margin-bottom\': \'0px\',\n                                                \'height\': \'20px\',\n                                                \'width\': \'50%\'\n                                            }"></ngx-skeleton-loader>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="col-4">\n            \x3c!-- ACTION CONTAINER --\x3e\n            <div class="row mb-30" *ngIf="item.order_status > 2 && item.order_status < 7">\n                <div class="col-12">\n                    <div class="container-card view-record p-30">\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <p class="mini-heading">Actions</p>\n                            </div>\n                        </div>\n                        <div class="row mb-30">\n                            <div class="col-12">\n                                <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal(item, \'update_payment\')" [disabled]="item.payment_status == 1">Update Payment</button>\n                            </div>\n                        </div>\n                        <div class="row mb-30">\n                            <div class="col-12">\n                                <button type="button" mat-flat-button class="btn btn-primary btn-block" [routerLink]="[ \'/transactions/payments\', item.id]" [disabled]="!item.payment.receipt_no">View Payment</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="row mb-30" *ngIf="showAction">\n                <div class="col-12" *ngIf="\n                (item.mode_of_payment == 1 && (userProfile.user_role_id == 5 || userProfile.user_role_id == 4)) ||\n                (item.mode_of_payment != 1 && userProfile.user_role_id == 4) ||\n                (item.order_status == 3) ||\n                (item.mode_of_payment != 1 && item.balance_credit_approved == 1 && userProfile.user_role_id == 5)\n                ">\n                    <div class="container-card view-record p-30">\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <p class="mini-heading">Actions</p>\n                            </div>\n                        </div>\n                        <div class="row mb-30">\n                            <div class="col-12">\n                                <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal(item, primary_button_action)">{{ primary_button }}</button>\n                            </div>\n                        </div>\n                        <ng-container *ngIf="item.order_status == 1">\n                            <div class="row mb-10">\n                                <div class="col-12">\n                                    <h6>Decline Order?</h6>\n                                </div>\n                            </div>\n                            <div class="row mb-10">\n                                <div class="col-12">\n                                    <p>By declining, you need to state the reason for such decision. Reasons must be valid.</p>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-12">\n                                    <button type="button" mat-flat-button class="btn btn-danger btn-block" (click)="openModal(item, \'order_decline\')">Yes I understand, decline this</button>\n                                </div>\n                            </div>\n                        </ng-container>\n                        \x3c!-- <ng-container *ngIf="item.order_status == 3">\n                            <div class="row mb-10">\n                                <div class="col-12">\n                                    <h6>Cancel Order?</h6>\n                                </div>\n                            </div>\n                            <div class="row mb-10">\n                                <div class="col-12">\n                                    <p>By cancelling, you need to state the reason for such decision. Reasons must be valid.</p>\n                                </div>\n                            </div>\n                            <div class="row">\n                                <div class="col-12">\n                                    <button type="button" mat-flat-button class="btn btn-secondary btn-block" (click)="openModal(item, \'order_cancel\')">Yes I understand, cancel this</button>\n                                </div>\n                            </div>\n                        </ng-container> --\x3e\n                    </div>\n                </div>\n                <div class="col-12" *ngIf="\n                item.mode_of_payment != 1 &&\n                userProfile.user_role_id == 5 &&\n                item.balance_credit_approved == 0">\n                    <div class="container-card view-record p-30">\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <p class="mini-heading">Pending Manager\'s Approval</p>\n                            </div>\n                        </div>\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <h6>Note:</h6>\n                            </div>\n                        </div>\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <p>Only the manager may approve/decline orders with balance or credit</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="row mb-30" *ngIf="item.order_status == 8">\n                <div class="col-12">\n                    <div class="container-card view-record p-30">\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <p class="mini-heading">Order Declined</p>\n                            </div>\n                        </div>\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <h6>Reason for declining:</h6>\n                            </div>\n                        </div>\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <p>{{ item.order_cancel_decline.message }}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \x3c!-- ACTION CONTAINER --\x3e\n\n            <div class="row mb-30">\n                <div class="col-12">\n                    <div class="container-card view-record p-30">\n                        <div class="row mb-10">\n                            <div class="col-12">\n                                <p class="mini-heading">Order Status</p>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-12">\n                                <div class="tracking-sect">\n                                    <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                        \'border-radius\': \'5px\',\n                                        \'margin-bottom\': \'0px\',\n                                        \'height\': \'20px\'\n                                    }"></ngx-skeleton-loader>\n                                    <div class="timeline-sect" *ngIf="isLoaded">\n                                        <ng-container *ngFor="let tl of item.tracking_status; let i = index">\n                                            <div class="tl-row row">\n                                                <div class="col-3 pr-0">\n                                                    <div class="timeline tl-date no-padding-left no-padding-right">\n                                                        {{ tl.created_at | date:\'MMM dd, yyyy\' }}<br>\n                                                        {{ tl.created_at | date:\'h:mm aaa\' }}\n                                                    </div>\n                                                </div>\n                                                <div class="col-2">\n                                                    <div class="timeline">\n                                                        <div class="timeline-progress" [ngClass]="{\'finish\': tl.status == 2}"></div>\n                                                        <div class="timeline-circle" [ngClass]="[tl.status == 2 ? \'finish\':\'\', tl.status == 1 ? \'pending\':\'\']">\n                                                            <img class="tl-check" *ngIf="tl.status == 2" src="./../../../../../assets/images/custom-check.png">\n                                                            <div class="tl-pending" *ngIf="tl.status == 1"></div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class="col-7 pl-0">\n                                                    <div class="timeline tl-cont no-padding-left">\n                                                        <p class="mb-0 mt-3">{{ tl.statuslabel }}</p>\n                                                        <p class="fs-10">{{ tl.name }}</p>\n                                                        \x3c!-- <p no-margin class="tl-note" *ngIf="tl.note">{{ tl.note }}</p> --\x3e\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </ng-container>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col-12">\n            <div class="container-card p-30">\n                <div class="row mb-30">\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n                        <p class="mini-heading">Order no.\n                            <ng-container *ngIf="isLoaded">{{ item.transaction_id }}</ng-container>\n                            <ngx-skeleton-loader *ngIf="!isLoaded" [theme]="{\n                                \'border-radius\': \'5px\',\n                                \'margin-bottom\': \'0px\',\n                                \'height\': \'20px\',\n                                \'width\': \'25%\'\n                            }"></ngx-skeleton-loader>\n                        </p>\n                    </div>\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n                        <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal(null, \'show_stocks\')">View Stocks</button>\n                    </div>\n                    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6" *ngIf="item && item.order_status != 4 && !item.payment.receipt_no">\n                        <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal(item, \'add_discount\')">Add discount</button>\n                    </div>\n                </div>\n                \x3c!-- <div class="row mt-23 mb-30 ml-0 mr-0">\n                    <h1 class="mini-heading mt-auto mb-auto">Order no. {{ item.transaction_id }}</h1>\n                    <button type="button" mat-flat-button class="btn btn-primary ml-auto h-50 pl-40 pr-40">\n                        Add discount\n                    </button>\n                </div> --\x3e\n                <div class="data-table p-relative table-listing" style="overflow: auto;">\n                    <table>\n                        <thead>\n                            <tr>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                    {{ th.label }}\n                                    <ng-container *ngIf="th.canSort">\n                                    <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                    <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                    </ng-container>\n                                </th>\n                                </ng-container>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <ng-container *ngIf="isLoaded && order_items.length > 0">\n                                <tr *ngFor="let item of order_items">\n                                    <td>{{ item.egg_type.type }}</td>\n                                    <td>{{ item.order_item_details[0].price | number : \'1.2-2\' }}</td>\n                                    <td>\n                                        <ng-container *ngFor="let details of item.order_item_details; let i = index">\n                                            {{ details.qty }} {{ details.egg_cart_type.type }}{{ i < item.order_item_details.length - 1 ? \', \' : \'\' }}\n                                        </ng-container>\n                                    </td>\n                                    <td>{{ item.total_pieces | number }} pieces</td>\n                                    <td>₱ {{ item.total_price | number : \'1.2-2\' }}</td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="!isLoaded">\n                                <tr>\n                                    <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                                        <ngx-skeleton-loader [theme]="{\n                                            \'border-radius\' : \'5px\',\n                                            \'margin-bottom\' : \'0px\',\n                                            \'height\' : \'20px\'\n                                        }"></ngx-skeleton-loader>\n                                    </td>\n                                </tr>\n                            </ng-container>\n                            <ng-container *ngIf="isLoaded && order_items.length == 0">\n                                <tr>\n                                    <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                                </tr>\n                            </ng-container>\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <ng-container *ngFor="let th of ths; let i = index">\n                                    <th [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                                        {{ th.label }}\n                                        <ng-container *ngIf="th.canSort">\n                                        <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                                        <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                                        </ng-container>\n                                    </th>\n                                </ng-container>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>'},vrfp:function(t,e,n){"use strict";n.r(e),e.default=""},vvYg:function(t,e,n){"use strict";n.r(e),e.default=""},vw11:function(t,e,n){"use strict";n.r(e),e.default=""},w82W:function(t,e,n){"use strict";n.r(e),e.default='<section class="main-container p-35">\n    <div class="row mb-35">\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n        <h1 class="heading">All Daily Reports</h1>\n        <ng-container *ngIf="showtimeago">\n          <p class="sub-heading italic" *ngIf="activity && activity.updated_at">last updated {{ activity.updated_at | timeago }}</p>\n          <ngx-skeleton-loader *ngIf="!activity || !activity.updated_at" [theme]="{\n              \'border-radius\' : \'5px\',\n              \'margin-bottom\' : \'10px\',\n              \'height\' : \'20px\'\n          }"></ngx-skeleton-loader>\n        </ng-container>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6 ml-auto">\n        <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="openModal()" [disabled]="!isLoaded">\n          <i class="icon-download"></i>\n          <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as PDF</span>\n          <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">PDF</span>\n        </button>\n      </div>\n      <div class="col-xl-auto col-lg-auto col-md-auto col-sm-6 col-6">\n        <button type="button" mat-flat-button class="btn btn-primary btn-block" (click)="exportToCsv()" [disabled]="!isLoaded">\n          <i class="icon-download"></i>\n          <span class="ml-15 d-xl-inline d-lg-inline d-md-none d-sm-none d-none">Download as CSV</span>\n          <span class="ml-15 d-xl-none d-lg-none d-md-inline d-sm-inline d-inline">CSV</span>\n        </button>\n      </div>\n    </div>\n  \n    <div class="container-card p-30 mb-25" *ngIf="show_filter">\n      <div class="row">\n        <div class="col-12">\n          <h6 class="card-heading">Filters</h6>\n        </div>\n      </div>\n      <div class="row">\n        <div class="col-xl-10 col-lg-9 col-md-9 col-sm-12 col-12">\n          <div class="row">\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n              <div class="form-group">\n                <input [satDatepicker]="created_at_picker" [max]="max_date" class="w-0 p-0 border-0" (dateChange)="chooseCreatedAt($event)" [(ngModel)]="created_at">\n                <sat-datepicker #created_at_picker [rangeMode]="true"></sat-datepicker>\n                <button type="button" mat-flat-button class="btn btn-drop-down btn-sm btn-block text-left" (click)="created_at_picker.open()">{{ from && to ? \'Date - \' + (from | date: \'MM/dd/yyyy\') + \' - \' + (to | date: \'MM/dd/yyyy\') : \'Date\' }}\n                  <i class="icon-arrow-drop-down ml-5"></i>\n                </button>\n              </div>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n              <div class="form-group">\n                <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="flockmanId" (selectionChange)="changeFlockman($event)" *ngIf="staff_items" placeholder="Flockman">\n                  <mat-option *ngFor="let staff of staff_items" [value]="staff.id">{{ staff.profile_first_name }} {{ staff.profile_last_name }}</mat-option>\n                </mat-select>\n              </div>\n            </div>\n            <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12">\n              <div class="form-group">\n                <mat-select class="btn btn-drop-down btn-sm btn-block text-left" [(ngModel)]="report_status" (selectionChange)="changeReportStatus($event)" placeholder="Report Status">\n                  <mat-option *ngFor="let item of report_status_options" [value]="item.value">{{ item.label }}</mat-option>\n                </mat-select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 col-12 ml-auto">\n          <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-sm btn-clear btn-block" (click)="clearFilters()">\n              Clear Filters\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class="container-card p-30">\n      <div class="row mb-25">\n        <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n          <div class="form-group">\n            <div class="inner-group in-line">\n              <label class="mr-15">Show</label>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                  <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n              </mat-select>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                  <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n              </mat-select>\n              <label>of {{ totalItems | number }} entries</label>\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-2 col-lg-3 col-md-4 col-sm-4 col-12">\n            <div class="form-group">\n                <div class="inner-group">\n                  <mat-select multiple class="btn btn-block btn-primary multiple-select" (selectionChange)="changeColumnVisibility($event)" placeholder="Column Visibility" [(ngModel)]="visible_columns" >\n                    <mat-select-trigger>Column Visibility</mat-select-trigger>\n                    <ng-container *ngFor="let item of ths; let i = index">\n                      <mat-option [value]="i" [ngClass]="{ \'d-none\' : !item.canToggle }">{{ item.label }}</mat-option>\n                    </ng-container>\n                  </mat-select>\n                </div>\n            </div>\n        </div>\n        <div class="col-xl-3 col-lg-3 col-md-4 col-sm-5 col-8">\n          <div class="form-group">\n            <div class="inner-group search">\n              <i class="icon-search"></i>\n              <input type="text" class="form-control" id="inputSearch" placeholder="Search" [(ngModel)]="search"\n                (keydown.enter)="searchItem()" />\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-2 col-lg-3 col-md-4 col-sm-3 col-4">\n          <div class="form-group">\n            <button type="button" mat-flat-button class="btn btn-block" [ngClass]="{\'btn-primary\' : !show_filter, \'btn-secondary\' : show_filter}" (click)="showFilter()">\n              <i [ngClass]="{\'icon-filter-inactive\' : !show_filter, \'icon-filter-active\' : show_filter}"></i>\n              <span class="ml-15 d-xl-inline d-lg-inline d-md-inline d-sm-none d-none">{{ show_filter ? \'Hide Filter\' : \'Show Filter\' }}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <ng-container *ngIf="visible_columns.length > 1">\n        <div class="data-table p-relative table-listing" style="overflow: auto;">\n          <table [ngStyle]="{\'width.px\': 200 * visible_columns.length}">\n            <thead>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </thead>\n            <tbody>\n              <ng-container *ngIf="isLoaded && items.length > 0">\n                <tr *ngFor="let item of items; let i = index" [routerLink]="[ \'/daily-reports/view\', item.id]">\n                  <td *ngIf="ths[0].isVisible">{{ item.prepared_by_date | date: \'MM/dd/yyyy, hh:mm aaa\' }}</td>\n                  <td *ngIf="ths[1].isVisible">{{ item.house_name.house_name }}</td>\n                  <td *ngIf="ths[2].isVisible">{{ item.age }}</td>\n                  <td *ngIf="ths[3].isVisible">{{ item.mortality | number }}</td>\n                  <td *ngIf="ths[4].isVisible">{{ item.mortality_rate | number : \'1.2-2\' }} %</td>\n                  <td *ngIf="ths[5].isVisible">{{ item.cull | number }}</td>\n                  <td *ngIf="ths[6].isVisible">{{ item.bird_count | number }}</td>\n                  <td *ngIf="ths[7].isVisible">{{ item.real_egg_count | number }} pcs</td>\n                  <td *ngIf="ths[8].isVisible">{{ item.production_rate | number : \'1.2-2\' }} %</td>\n                  <td *ngIf="ths[9].isVisible">{{ item.feeds.bags | number }}</td>\n                  <td *ngIf="ths[10].isVisible">{{ item.feeds.string }}</td>\n                  <td *ngIf="ths[11].isVisible">\n                      <ng-container *ngFor="let medicine of item.medicine_name; let i = index">\n                          {{ medicine.medicine }}{{ i < item.medicine_name.length - 1 ? \', \': \'\' }}\n                      </ng-container>\n                  </td>\n                  <td *ngIf="ths[12].isVisible">{{ item.sortingRecordstatus ? item.sortingRecordstatus : item.recordStatus }}</td>\n                  <td *ngIf="ths[13].isVisible">{{ item.flockman }}</td>\n                  <td *ngIf="ths[14].isVisible">\n                    <button type="button" mat-flat-button class="btn btn-clear text-blue" [routerLink]="[ \'/daily-reports/view\', item.id]">\n                      <i class="icon-datatables-view"></i>\n                      View Report\n                    </button>\n                  </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="!isLoaded">\n                <tr>\n                  <td class="text-uppercase" *ngFor="let x of counter(visible_columns.length); let i = index">\n                    <ngx-skeleton-loader [theme]="{\n                      \'border-radius\' : \'5px\',\n                      \'margin-bottom\' : \'0px\',\n                      \'height\' : \'20px\'\n                    }"></ngx-skeleton-loader>\n                  </td>\n                </tr>\n              </ng-container>\n              <ng-container *ngIf="isLoaded && items.length == 0">\n                <tr>\n                  <td [attr.colspan]="visible_columns.length" class="text-center">No Results found</td>\n                </tr>\n              </ng-container>\n            </tbody>\n            <tfoot>\n              <tr>\n                <ng-container *ngFor="let th of ths; let i = index">\n                  <th *ngIf="th.isVisible" [ngClass]="{ \'sort\' : th.canSort }" (click)="orderList(th.canSort, th.key, order.order_by == \'desc\' ? \'asc\' : \'desc\')">\n                    {{ th.label }}\n                    <ng-container *ngIf="th.canSort">\n                      <i *ngIf="order.order_by_column == th.key" [ngClass]="{ \'icon-datatables-order-asc\' : order.order_by == \'asc\', \'icon-datatables-order-desc\' : order.order_by == \'desc\' }"></i>\n                      <i [ngClass]="{ \'icon-datatables-order-default\' : order.order_by_column != th.key }"></i>\n                    </ng-container>\n                  </th>\n                </ng-container>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </ng-container>\n      <ng-container *ngIf="isLoaded && visible_columns.length == 1">\n        <div class="row">\n          <div class="col-12 text-center">\n            <p class="mb-0">Please choose column visibility</p>\n          </div>\n        </div>\n      </ng-container>\n      <div class="row mt-35">\n        <div class="col-xl-5 col-lg-3 col-md-12 col-sm-12 col-12">\n          <div class="form-group">\n            <div class="inner-group in-line">\n              <label class="mr-15">Show</label>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit" (selectionChange)="changeLimit($event)" *ngIf="totalItems >= 10">\n                  <mat-option *ngFor="let limit of limits" [value]="limit.value">{{ limit.label }}</mat-option>\n              </mat-select>\n              <mat-select class="btn btn-drop-down text-left mr-15" [(ngModel)]="limit_disabled" *ngIf="totalItems < 10" disabled>\n                  <mat-option [value]="limit_disabled">{{ limit_disabled }}</mat-option>\n              </mat-select>\n              <label>of {{ totalItems | number }} entries</label>\n            </div>\n          </div>\n        </div>\n        <div class="col-xl-7 col-lg-9 col-md-12 col-sm-12 col-12" *ngIf="totalPages > 1">\n          <ul class="paginate pull-right">\n            <li class="link cursor-pointer" *ngIf="prev_page">\n                <a (click)="gotoPage(prev_page)">\n                    Previous\n                </a>\n            </li>\n            <ng-container *ngFor="let x of counter(totalPages); let i = index">\n              <li class="next-page cursor-pointer" (click)="gotoPage(i+1)" [ngClass]="{ \'c-pointer active\' : page == i+1 }" value="{{ i+1 }}">{{ i+1 }}</li>\n            </ng-container>\n            \n            <li class="link cursor-pointer" *ngIf="next_page">\n                <a (click)="gotoPage(next_page)">\n                    Next\n                </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </section>  '},wvAK:function(t,e,n){"use strict";n.r(e),e.default=""},xRk5:function(t,e,n){"use strict";n.r(e),e.default=""},xjKD:function(t,e,n){"use strict";n.r(e),e.default=""},xpm3:function(t,e,n){"use strict";n.r(e),e.default=""},yMES:function(t,e,n){"use strict";n.r(e),e.default=""},ynWL:function(t,e,n){"use strict";n.r(e),e.default=""},z8we:function(t,e,n){"use strict";n.r(e),e.default=".btn-back {\n  color: #444444;\n  border: 2px solid #444444;\n  background-color: #fafafa;\n}\n\n.btn-back:hover {\n  color: #1E2631;\n}"},zH3P:function(t,e,n){"use strict";n.r(e),e.default=".content {\n  -webkit-transition: 0.2s ease-in-out;\n  transition: 0.2s ease-in-out;\n  /* position:fixed; */\n  padding: 0;\n  bottom: 0;\n  right: 0;\n  /* width:82%; */\n  margin-left: 18%;\n  margin-top: 65px;\n  /* height:91.2%; */\n  background: #f3f6fe;\n  z-index: 1;\n  overflow: scroll;\n}\n.content.expanded {\n  width: 95% !important;\n  -webkit-transition: 0.2s ease-in-out;\n  transition: 0.2s ease-in-out;\n}\n.content::-webkit-scrollbar {\n  display: none;\n}\n.wrapper {\n  padding: 0;\n  width: 100vw;\n  height: 100vh;\n}"},zUnb:function(t,e,n){"use strict";n.r(e);var o=n("mrSG"),i=(n("yLV6"),n("CcnG")),s=n("ToYH"),a=n("ZYjt"),r=n("t/Na"),l=n("sE5F"),c=n("Ip0R"),d=n("T2rt"),u=n("ZYCi"),m=n("vGXY"),p=n("67Y/"),h=n("klSw"),g=n("o3x0"),f=n("dyMF"),b=n("NFKh"),v=n("f0Wu"),_={date:null,header:{alg:"HS256",typ:"JWT"},payload:{},signature:"",secret:"",timezone:null,setAlgo:function(t){return this.header.alg=t,this},setClaim:function(t,e){return this.payload[t]=e,this},setIssuer:function(t){return this.setClaim("iss",t),this},setAudience:function(t){return this.setClaim("aud",t),this},setExpiration:function(t){return this.setClaim("exp",t),this},setId:function(t){return this.setClaim("jti",t),this},setIssuedAt:function(){var t=this.getTimeFormated();return this.setClaim("iat",t),this},setSecret:function(t){return this.secret=t,this},setDate:function(){this.date||(this.date=new Date)},getTimeFormated:function(){this.setDate();var t=this.date,e=this.addZero(t.getMonth()+1),n=this.addZero(t.getDate()),o=this.addZero(t.getHours()),i=this.addZero(t.getMinutes()),s=this.addZero(t.getSeconds());return t.getFullYear()+"-"+e+"-"+n+" "+o+":"+i+":"+s},addZero:function(t){return t<10&&(t="0"+t),t},getTimezone:function(){return this.setDate(),this.timezone||(this.timezone={name:v.tz.guess(),gmt:this.date.toString().split("GMT")[1].split(" (")[0]}),this.timezone},sha256:function(t,e){return void 0===t&&(t=""),void 0===e&&(e=""),b.HmacSHA256(t,e).toString()},base64url:function(t){var e=JSON.stringify(t),n=btoa(e);return n=(n=(n=n.replace(/=+$/,"")).replace(/\+/g,"-")).replace(/\//g,"_")},getToken:function(){var t=this.base64url(this.header),e=this.base64url(this.payload);return t+"."+e+"."+this.sha256(t+"."+e,this.secret)},getPayload:function(t){var e=t.split(".")[1],n=decodeURIComponent(atob(e).split("").map((function(t){return"%"+("00"+t.charCodeAt(0).toString(16)).slice(-2)})).join(""));return JSON.parse(n)}},y=function(){function t(){this.isConsented=!1}return t.prototype.deleteCookie=function(t,e){void 0===e&&(e=""),this.setCookie(t,null,-1,"/",e)},t.prototype.getCookie=function(t){for(var e,n=document.cookie.split(";"),o=n.length,i=t+"=",s=0;s<o;s+=1)if(0===(e=n[s].replace(/^\s+/g,"")).indexOf(i))return e.substring(i.length,e.length);return""},t.prototype.setCookie=function(t,e,n,o,i){void 0===o&&(o="/"),void 0===i&&(i="");var s=new Date,a="";n&&(s.setTime(s.getTime()+24*n*60*60*1e3),a="expires="+s.toUTCString());var r=o?"; path="+o:"",l=i?"; domain="+i:"";document.cookie=t+"="+e+"; "+a+r+l},t.prototype.consent=function(t,e,n,o){if(!t)return this.isConsented;t&&(this.setCookie(n,"1",o),this.isConsented=!0,e.preventDefault())},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),x="/api/token/get",w="/webapi/auth/login",k="/webapi/dashboard/index",I="/webapi/feedconsumption/feedconsumption",C="/webapi/medicineconsumption/medicineconsumption",P="/webapi/harvestproductionstatus/harvestproductionstatus",M="/webapi/harvestproductionrate/harvestproductionrate",F="/webapi/recenttransactions/recenttransactions",L="/webapi/recentstaffactivities/recentstaffactivities",S="/webapi/house/listing",D="/webapi/house/delete",V="/webapi/house/save",A="/webapi/staff/listing",E="/webapi/staff/view",T="/webapi/staff/staffprofile",R="/webapi/staff/update",O="/webapi/staff/index",B="/webapi/customers/listing",N="/webapi/customer/view",j="/webapi/customer/profile",q="/webapi/customer/update",H="/webapi/customer/index",U="/webapi/customers/delete",z="/webapi/customertype/listing",$="/webapi/dailyreports/listing",G="/webapi/dailyreports/index",W="/webapi/transactions/listing",Y="/webapi/transactions/index",Q="/webapi/orders/save",J="/webapi/orders/approve",K="/webapi/orders/decline",Z="/webapi/orders/forrelease",X="/webapi/orders/collectibles",tt="/webapi/trayinventory/listing",et="/webapi/trayinventory/view",nt="/webapi/sackinventory/listing",ot="/webapi/sackinventory/view",it="/webapi/feedmanagement/listing",st="/webapi/feedmanagement/index",at="/webapi/feedmanagement/save",rt="/webapi/feedmanagement/delete",lt="/webapi/medicinemanagement/listing",ct="/webapi/medicinemanagement/index",dt="/webapi/medicinemanagement/save",ut="/webapi/medicinemanagement/delete",mt="/webapi/medicineunits/listing",pt="/webapi/medicineunits/save",ht="/webapi/medicineunits/delete",gt="/webapi/user/confirmpassword",ft="/webapi/user/add",bt="/webapi/user/update",vt="/webapi/user/delete",_t="/webapi/freshegginventory/listing",yt="/webapi/freshegginventory/index",xt="/webapi/pricemanagement/listing",wt="/webapi/pricemanagement/view",kt="/webapi/pricemanagement/save",It="/webapi/general/activity",Ct="/webapi/eggtype/listing",Pt="/webapi/badge/statuscount",Mt="/webapi/sortingreport/index",Ft="/webapi/mop/approve",Lt="/api/inventory/search",St="/webapi/generate/password",Dt="/webapi/performancereport/productionhouse",Vt="/webapi/performancereport/productioneggsize",At="/webapi/performancereport/overallsales",Et="/webapi/performancereport/saleseggsizes",Tt="/webapi/performancereport/stocks",Rt="/webapi/performancereport/feeds",Ot="/webapi/performancereport/medicine",Bt="/webapi/feedsmedicineconsumption/view",Nt="/webapi/feedsmedicineconsumption/validate",jt="/webapi/feedsmedicineconsumption/listing",qt="/webapi/paymentattachments/listing",Ht="/webapi/paymentattachments/save",Ut="/webapi/paymentattachments/delete",zt="/webapi/discount/save",$t="/webapi/feedsmedicineconsumption/updatefeeds",Gt="/webapi/recentstaffactivities/activitylog",Wt="/webapi/medicinemanagement/getall",Yt="/webapi/feedmanagement/getall",Qt="/webapi/feedsmedicineconsumption/save",Jt="/api/notification/listing",Kt="/api/notification/markasread",Zt="/webapi/feedsmedicineconsumption/index",Xt="/webapi/feedsmedicineconsumption/updatemedicine",te="/webapi/performancereport/locationhighestorders",ee="/webapi/performancereport/creditbalance",ne=(n("Oaa7"),function(){function t(t,e,n,o){this.http=t,this.cookie=e,this.session=n,this.router=o,this.secure=!1,this.domain="gapan.livewire365.com",this.url="http://api.gapan.livewire365.com",this.secureUrl="https://api.gapan.livewire365.com",this.devicetoken="no-device",this.deviceid="no-device",this.apikey="vmvm1xj0oeznryyd6ujdxogf6jhwiuh1oa1bbhaie1eubdtt61w3cqkkrx85d5ai8upbzsqlsp6hga0jl1nh1luiugae2dbzs1oudie9oakfu1nofhnyl434i0cpjoftvo31ikce3y2o4esf1hs9zo55v2xjg8nsiwz6jxcu5shlbnisgyvsbtfbldfxklszqpkizpnb",this._SUPERADMIN=1,this._ADMIN=2,this._SALES=3,this._PRODUCTIONPLANNER=4,this._PRODUCTIONMANAGER=5,this._PRESSOPERATOR=6}return t.prototype.getUrl=function(t){var e="";return 1==this.secure?e+=this.secureUrl:e+=this.url,e+=t},t.prototype.createUrlParam=function(t){var e,n,i="?";try{for(var s=o.__values(Object.keys(t)),a=s.next();!a.done;a=s.next()){var r=a.value;t[r]&&(i+=r+"="+t[r]+"&")}}catch(l){e={error:l}}finally{try{a&&!a.done&&(n=s.return)&&n.call(s)}finally{if(e)throw e.error}}return i},t.prototype.getToken=function(){return"true"},t.prototype.setToken=function(t,e){void 0===e&&(e=0),this.cookie.setCookie("token",t,e,"/",this.domain)},t.prototype.getCookie=function(t){return this.cookie.getCookie(t)},t.prototype.deleteCookie=function(){return this.cookie.deleteCookie("token",this.domain)},t.prototype.generateToken=function(){var t=this.session.retrieve("token");if(t)return t;var e=_.getTimezone();return _.setAlgo("HS256").setClaim("token","exchange").setClaim("tzoffset",e.gmt).setClaim("tzname",e.name).setIssuedAt().setSecret(this.apikey).getToken()},t.prototype.getHttpOptions=function(){var t=this;return new Promise((function(e){e({headers:new r.c({Authorization:"Bearer "+t.generateToken(),Devicetoken:t.devicetoken,Deviceid:t.deviceid})})}))},t.prototype.exchangeToken=function(){var t=this;this.getCookie("token").length||this.getHttpOptions().then((function(e){var n=t.getUrl(x)+"?device_token="+t.devicetoken;return t.http.get(n,e).subscribe((function(e){t.setToken(e.data.token)}))}))},t.ctorParameters=function(){return[{type:r.a},{type:y},{type:f.b},{type:u.b}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}()),oe=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getList=function(t,e,n,o){var i=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(s){i.env.getHttpOptions().then((function(a){var r=i.env.getUrl(S)+"/page/"+t+"/limit/"+e;n&&(r+="/order_by_column/"+n.order_by_column+"/order_by/"+n.order_by),o&&(r+="?search="+o),i.http.get(r,a).subscribe((function(t){s(t)}),(function(t){s({error:1,message:t})}))}))}))},t.prototype.getAllList=function(){var t=this;return new Promise((function(e){t.env.getHttpOptions().then((function(n){var o=t.env.getUrl(S);t.http.get(o,n).subscribe((function(t){e(t)}),(function(t){e({error:1,message:t})}))}))}))},t.prototype.save=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(V);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.remove=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(D);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),ie=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.save=function(t,e){var n=this;return new Promise((function(o){n.env.getHttpOptions().then((function(i){var s=n.env.getUrl(Q);e&&("order_approve"==e?s=n.env.getUrl(J):"order_decline"==e?s=n.env.getUrl(K):"payment_add"==e?s=n.env.getUrl(Z):"transaction_create"==e?s=n.env.getUrl(Q):"payment_approve"==e&&(s=n.env.getUrl(Ft))),n.http.post(s,t,i).subscribe((function(t){o(t)}),(function(t){o({error:1,message:t})}))}))}))},t.prototype.getCount=function(){var t=this;return new Promise((function(e){t.env.getHttpOptions().then((function(n){var o=t.env.getUrl(Pt);t.http.get(o,n).subscribe((function(t){e(t)}),(function(t){e({error:1,message:t})}))}))}))},t.prototype.savePayment=function(t){var e=this,n=new FormData;for(var o in t)n.append(o,t[o]);return new Promise((function(t){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(Z);e.http.post(i,n,o).subscribe((function(e){t(e)}),(function(e){t({error:1,message:e})}))}))}))},t.prototype.getCollectibles=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(X)+"/user_id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),se=n("gIcY"),ae=n("vARd"),re=function(){function t(t,e,n,o){this.session=t,this.http=e,this.router=n,this.env=o}return t.prototype.saveUser=function(t){var e=this,n=new FormData;for(var o in t)n.append(o,t[o]);return new Promise((function(t){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(ft);e.http.post(i,n,o).subscribe((function(e){t(e)}),(function(e){t({error:1,message:e})}))}))}))},t.prototype.updateUser=function(t){var e=this,n=new FormData;for(var o in t)n.append(o,t[o]);return new Promise((function(t){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(bt);e.http.post(i,n,o).subscribe((function(e){t(e)}),(function(e){t({error:1,message:e})}))}))}))},t.prototype.confirmPassword=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(gt);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.remove=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(vt);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.ctorParameters=function(){return[{type:f.b},{type:r.a},{type:u.b},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),le=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getList=function(t,e,n,o){var i=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(s){i.env.getHttpOptions().then((function(a){var r=i.env.getUrl(B)+"/page/"+t+"/limit/"+e;n&&(r+="/order_by_column/"+n.order_by_column+"/order_by/"+n.order_by),o&&(r+="?search="+o),i.http.get(r,a).subscribe((function(t){s(t)}),(function(t){console.log("err",t),s({error:1,message:"error"})}))}))}))},t.prototype.getCustomerTypes=function(){var t=this;return new Promise((function(e){t.env.getHttpOptions().then((function(n){var o=t.env.getUrl(z);t.http.get(o,n).subscribe((function(t){e(t)}),(function(t){console.log("err",t),e({error:1,message:"error"})}))}))}))},t.prototype.viewRecord=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(N)+"/id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){console.log("err",t),n({error:1,message:"error"})}))}))}))},t.prototype.getProfile=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(j)+"/id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){console.log("err",t),n({error:1,message:"error"})}))}))}))},t.prototype.save=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(q);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getRecord=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(H)+"/id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){console.log("err",t),n({error:1,message:"error"})}))}))}))},t.prototype.remove=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(U);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),ce=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getList=function(t,e,n,o,i,s,a){var r=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(l){r.env.getHttpOptions().then((function(c){var d=r.env.getUrl(xt)+"/page/"+t+"/limit/"+e;n&&0!=n&&(d+="/type/"+n),o&&i&&(d+="/from/"+o+"/to/"+i),s&&(d+="/order_by_column/"+s.order_by_column+"/order_by/"+s.order_by),a&&(d+="?search="+a),r.http.get(d,c).subscribe((function(t){l(t)}),(function(t){console.log("err2",t),l({error:1,message:"error"})}))}))}))},t.prototype.getPriceTrend=function(t,e,n,o,i,s){var a=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(r){a.env.getHttpOptions().then((function(l){var c=a.env.getUrl(wt)+"/page/"+t+"/limit/"+e;n&&0!=n&&(c+="/type/"+n),o&&i&&(c+="/from/"+o+"/to/"+i),s&&(c+="/order_by_column/"+s.order_by_column+"/order_by/"+s.order_by),a.http.get(c,l).subscribe((function(t){r(t)}),(function(t){console.log("err2",t),r({error:1,message:"error"})}))}))}))},t.prototype.save=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(kt);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),de=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getListByOrderId=function(t,e,n,o,i,s,a,r){var l=this;return void 0===t&&(t=1),void 0===e&&(e=10),console.log(a),new Promise((function(c){l.env.getHttpOptions().then((function(d){var u=l.env.getUrl(qt)+"/page/"+t+"/limit/"+e;n&&(u+="/order_id/"+n),o&&0!=o&&(u+="/type/"+o),i&&s&&(u+="/from/"+i+"/to/"+s),a&&(u+="/order_by_column/"+a.order_by_column+"/order_by/"+a.order_by),r&&(u+="?search="+r),l.http.get(u,d).subscribe((function(t){c(t)}),(function(t){console.log("err2",t),c({error:1,message:"error"})}))}))}))},t.prototype.save=function(t){var e=this,n=new FormData;for(var o in t)n.append(o,t[o]);return new Promise((function(t){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(Ht);e.http.post(i,n,o).subscribe((function(e){t(e)}),(function(e){t({error:1,message:e})}))}))}))},t.prototype.delete=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(Ut);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.saveDiscount=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(zt);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),ue=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getList=function(t,e){var n=this;return console.log(t),new Promise((function(o){n.env.getHttpOptions().then((function(i){var s=n.env.getUrl(Bt);t&&(s+="/order_by_column/"+t.order_by_column+"/order_by/"+t.order_by),e&&(s+="/house_id/"+e),n.http.get(s,i).subscribe((function(t){o(t)}),(function(t){console.log("err2",t),o({error:1,message:"error"})}))}))}))},t.prototype.getHouselist=function(t,e){var n=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(o){n.env.getHttpOptions().then((function(i){var s=n.env.getUrl(jt)+"/page/"+t+"/limit/"+e;n.http.get(s,i).subscribe((function(t){o(t)}),(function(t){console.log("err2",t),o({error:1,message:"error"})}))}))}))},t.prototype.updateFeeds=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl($t),s=e.http.post(i,t,o);console.log("url",$t),s.subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getAllmedicine=function(){var t=this;return new Promise((function(e){t.env.getHttpOptions().then((function(n){var o=t.env.getUrl(Wt);t.http.get(o,n).subscribe((function(t){e(t)}),(function(t){console.log("err2",t),e({error:1,message:"error"})}))}))}))},t.prototype.getAllFeeds=function(){var t=this;return new Promise((function(e){t.env.getHttpOptions().then((function(n){var o=t.env.getUrl(Yt);t.http.get(o,n).subscribe((function(t){e(t)}),(function(t){console.log("err2",t),e({error:1,message:"error"})}))}))}))},t.prototype.saveMed=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(Qt);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getHouserecord=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(Zt)+"/id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.updateMeds=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(Xt);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.validate=function(){var t=this;return new Promise((function(e){t.env.getHttpOptions().then((function(n){var o=t.env.getUrl(Nt);t.http.get(o,n).subscribe((function(t){e(t)}),(function(t){console.log("err2",t),e({error:1,message:"error"})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),me=function(){function t(t,e,n,o,i,s,a,r,l,c,d,u){this.dialogRef=t,this.data=e,this.formBuilder=n,this._snackBar=o,this.dialog=i,this.ordersService=s,this.priceManagementService=a,this.userService=r,this.events=l,this.customerService=c,this.paymentService=d,this.feedsMedicineConsumptionService=u,this.item=[],this.modal_title="",this.modal_primary_button="",this.modal_primary_button_class="",this.modal_message="",this.show_password=!1,this.isLoading=!1,this.confirmPasswordForm=this.formBuilder.group({id:[null],password:["",se.k.compose([se.k.required,se.k.minLength(8)])]})}return t.prototype.ngOnInit=function(){this.item=this.data.item,this.action=this.data.action,console.log("item",this.item),console.log("action",this.action),this.confirmPasswordForm.controls.id.setValue(this.item.id),"order_approve"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To approve this order, please enter password below for validation:",this.modal_primary_button="Yes, proceed",this.modal_primary_button_class="btn-primary"):"payment_approve"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To approve this request, please enter password below for validation:",this.modal_primary_button="Yes, proceed",this.modal_primary_button_class="btn-primary"):"order_decline"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To decline this order, please enter password below for validation:",this.modal_primary_button="Yes, proceed",this.modal_primary_button_class="btn-primary"):"user_add"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To add this new customer profile, please enter password below for validation:",3!=this.item.role&&(this.modal_message="To add this new staff profile, please enter password below for validation:"),this.modal_primary_button="Submit",this.modal_primary_button_class="btn-primary"):"user_update"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To update customer profile, please enter password below for validation:",3!=this.item.role&&(this.modal_message="To update staff profile, please enter password below for validation:"),this.modal_primary_button="Submit",this.modal_primary_button_class="btn-primary"):"user_delete"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To delete this customer profile, please enter password below for validation:",3!=this.item.role&&(this.modal_message="To delete this staff profile, please enter password below for validation:"),this.modal_primary_button="Delete user",this.modal_primary_button_class="btn-danger"):"transaction_create"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To submit a new order, please enter password below for validation:",this.modal_primary_button="Submit order",this.modal_primary_button_class="btn-primary"):"payment_add"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To save this payment, please enter password below for validation:",this.modal_primary_button="Submit",this.modal_primary_button_class="btn-primary"):"price_create"==this.action||"price_update"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To save this price, please enter password below for validation:",this.modal_primary_button="Save",this.modal_primary_button_class="btn-primary"):"attachment_create"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To save this attachment, please enter password below for validation:",this.modal_primary_button="Save",this.modal_primary_button_class="btn-primary"):"attachment_update"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To update this attachment, please enter password below for validation:",this.modal_primary_button="Update",this.modal_primary_button_class="btn-primary"):"attachment_delete"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To delete this attachment, please enter password below for validation:",this.modal_primary_button="Delete",this.modal_primary_button_class="btn-danger"):"add_discount"==this.action?(this.modal_title="Enter Your Password",this.modal_message="To add discount, please enter password below for validation:",this.modal_primary_button="Save",this.modal_primary_button_class="btn-primary"):"medicine_add"==this.action&&(this.modal_title="Add Monthly Record",this.modal_message="Are you sure you want to add this monthly record?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary")},t.prototype.submit=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoading=!0,[4,this.userService.confirmPassword(this.confirmPasswordForm.value).then((function(e){t.isLoading=!1,0==e.error?t.proceedAction():t.openSnackBar(e.message)})).catch((function(e){console.log("e",e),t.isLoading=!1,t.openSnackBar(e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.proceedAction=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoading=!0,"order_approve"!=this.action&&"order_decline"!=this.action&&"payment_approve"!=this.action?[3,2]:[4,this.ordersService.save(this.item,this.action).then((function(e){t.isLoading=!1,0==e.error?t.closeModal(e.message).then((function(){t.events.publish("order_refresh",1)})):(t.openSnackBar(e.message),t.closeModal())})).catch((function(e){console.log(e),t.openSnackBar(e),t.closeModal(),t.isLoading=!1}))];case 1:return e.sent(),[3,25];case 2:return"user_add"!=this.action?[3,4]:[4,this.userService.saveUser(this.item).then((function(e){t.isLoading=!1,0==e.error?t.closeModal(e.message):(t.openSnackBar(e.message),t.closeModal())})).catch((function(e){console.log(e),t.openSnackBar(e),t.closeModal(),t.isLoading=!1}))];case 3:return e.sent(),[3,25];case 4:return"user_update"!=this.action?[3,6]:[4,this.userService.updateUser(this.item).then((function(e){t.isLoading=!1,0==e.error?t.closeModal(e.message):(t.openSnackBar(e.message),t.closeModal())})).catch((function(e){console.log(e),t.openSnackBar(e),t.closeModal(),t.isLoading=!1}))];case 5:return e.sent(),[3,25];case 6:return"user_delete"!=this.action?[3,11]:3==this.item.role?[3,8]:[4,this.userService.remove(this.item).then((function(e){t.isLoading=!1,0==e.error?t.closeModal(e.message):(t.openSnackBar(e.message),t.closeModal())})).catch((function(e){console.log(e),t.openSnackBar(e),t.closeModal(),t.isLoading=!1}))];case 7:return e.sent(),[3,10];case 8:return[4,this.customerService.remove(this.item).then((function(e){t.isLoading=!1,0==e.error?t.closeModal(e.message):(t.openSnackBar(e.message),t.closeModal())})).catch((function(e){console.log(e),t.openSnackBar(e),t.closeModal(),t.isLoading=!1}))];case 9:e.sent(),e.label=10;case 10:return[3,25];case 11:return"transaction_create"!=this.action?[3,13]:[4,this.ordersService.save(this.item,this.action).then((function(e){t.isLoading=!1,0==e.error?t.closeModal(e.message):(t.openSnackBar(e.message),t.closeModal())})).catch((function(e){console.log("e",e),t.openSnackBar(e),t.closeModal(),t.isLoading=!1}))];case 12:return e.sent(),[3,25];case 13:return"payment_add"!=this.action?[3,15]:[4,this.ordersService.savePayment(this.item).then((function(e){t.isLoading=!1,0==e.error?t.closeModal(e.message).then((function(){t.events.publish("order_refresh",1)})):(t.openSnackBar(e.message),t.closeModal())})).catch((function(e){console.log(e),t.openSnackBar(e),t.closeModal(),t.isLoading=!1}))];case 14:return e.sent(),[3,25];case 15:return"price_create"!=this.action&&"price_update"!=this.action?[3,17]:[4,this.priceManagementService.save(this.item).then((function(e){t.isLoading=!1,0==e.error?t.closeModal(e.message).then((function(){t.events.publish("price_refresh",1)})):(t.openSnackBar(e.message),t.closeModal())})).catch((function(e){console.log(e),t.openSnackBar(e),t.closeModal(),t.isLoading=!1}))];case 16:return e.sent(),[3,25];case 17:return"attachment_create"!=this.action&&"attachment_update"!=this.action?[3,19]:[4,this.paymentService.save(this.item).then((function(e){t.isLoading=!1,0==e.error?(t.events.publish("attachments_refresh",1),t.closeModal(e.message)):(t.openSnackBar(e.message),t.closeModal())})).catch((function(e){console.log(e),t.openSnackBar(e),t.closeModal(),t.isLoading=!1}))];case 18:return e.sent(),[3,25];case 19:return"attachment_delete"!=this.action?[3,21]:[4,this.paymentService.delete(this.item).then((function(e){t.isLoading=!1,0==e.error?(t.events.publish("attachments_refresh",1),t.closeModal(e.message)):(t.openSnackBar(e.message),t.closeModal())})).catch((function(e){console.log(e),t.openSnackBar(e),t.closeModal(),t.isLoading=!1}))];case 20:return e.sent(),[3,25];case 21:return"add_discount"!=this.action?[3,23]:[4,this.paymentService.saveDiscount(this.item).then((function(e){t.isLoading=!1,0==e.error?(t.events.publish("order_refresh",1),t.closeModal(e.message)):(t.openSnackBar(e.message),t.closeModal())})).catch((function(e){console.log(e),t.openSnackBar(e),t.closeModal(),t.isLoading=!1}))];case 22:return e.sent(),[3,25];case 23:return"medicine_add"!=this.action?[3,25]:[4,this.feedsMedicineConsumptionService.saveMed(this.item).then((function(e){0==e.error?t.closeModal(e.message):t.openSnackBar(e.message)})).catch((function(e){console.log("e",e),t.openSnackBar(e)}))];case 24:e.sent(),e.label=25;case 25:return[2]}}))}))},t.prototype.showPassword=function(){this.show_password=!this.show_password},t.prototype.closeModal=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dialogRef.close(t)];case 1:return e.sent(),[2]}}))}))},t.prototype.openSnackBar=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this._snackBar.open(t,null,{verticalPosition:"top",announcementMessage:t,duration:3e3})];case 1:return e.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:se.b},{type:ae.a},{type:g.b},{type:ie},{type:ce},{type:re},{type:d.b},{type:le},{type:de},{type:ue}]},t=o.__decorate([Object(i.n)({selector:"app-confirm-password-modal",template:o.__importDefault(n("83eI")).default,styles:[o.__importDefault(n("TRWD")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),pe=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getFeedsList=function(t,e,n,o,i,s,a){var r=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(l){r.env.getHttpOptions().then((function(c){var d=r.env.getUrl(it)+"/page/"+t+"/limit/"+e;n&&(d+="/delivery_date/"+n),o&&(d+="/feed/"+o),i&&(d+="/expiration_date/"+i),s&&(d+="/order_by_column/"+s.order_by_column+"/order_by/"+s.order_by),a&&(d+="?search="+a),r.http.get(d,c).subscribe((function(t){l(t)}),(function(t){console.log("err",t),l({error:1,message:"error"})}))}))}))},t.prototype.getMedicineList=function(t,e,n,o,i,s,a){var r=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(l){r.env.getHttpOptions().then((function(c){var d=r.env.getUrl(lt)+"/page/"+t+"/limit/"+e;n&&(d+="/delivery_date/"+n),o&&(d+="/medicine/"+o),i&&(d+="/expiration_date/"+i),s&&(d+="/order_by_column/"+s.order_by_column+"/order_by/"+s.order_by),a&&(d+="?search="+a),r.http.get(d,c).subscribe((function(t){l(t)}),(function(t){console.log("err",t),l({error:1,message:"error"})}))}))}))},t.prototype.getFeedRecord=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(st)+"/id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){console.log("err",t),n({error:1,message:"error"})}))}))}))},t.prototype.getMedicineRecord=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(ct)+"/id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){console.log("err",t),n({error:1,message:"error"})}))}))}))},t.prototype.saveFeed=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(at);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.saveMedicine=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(dt);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.removeFeed=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(rt);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.removeMedicine=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(ut);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getMedicineUnits=function(){var t=this;return new Promise((function(e){t.env.getHttpOptions().then((function(n){var o=t.env.getUrl(mt);t.http.get(o,n).subscribe((function(t){e(t)}),(function(t){console.log("err",t),e({error:1,message:"error"})}))}))}))},t.prototype.saveMedicineUnit=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(pt);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.removeMedicineUnit=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(ht);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),he=function(){function t(t,e,n,o,i,s,a,r){this.dialogRef=t,this.data=e,this.feedsMedicineManagementService=n,this.formBuilder=o,this._snackBar=i,this.dialog=s,this.ordersService=a,this.feedsMedicineConsumptionService=r,this.item=[],this.modal_title="",this.modal_primary_button="Yes, proceed",this.modal_primary_button_class="btn-primary",this.modal_message="",this.modal_secondary_button="Cancel",this.modal_secondary_button_class="btn-clear",this.generalForm=this.formBuilder.group({id:[null]})}return t.prototype.ngOnInit=function(){this.item=this.data.item,this.action=this.data.action,this.page=this.data.page,console.log("this.item",this.item),console.log("this.action",this.action),console.log("this.page",this.page),this.item&&this.generalForm.controls.id.setValue(this.item.id),"go_back"==this.action?"customer_create"==this.page||"staff_create"==this.page||"feed_create"==this.page||"medicine_create"==this.page||"transaction_create"==this.page||"feedmedconsumption_create"==this.page?(this.modal_title="Go Back",this.modal_message="Are you sure you want to go back to the list?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary",this.modal_secondary_button="No"):"customer_update"==this.page||"staff_update"==this.page||"feed_update"==this.page||"medicine_update"==this.page?(this.modal_title="Go Back",this.modal_message="All changes will be discarded. Are you sure you want to go back?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary",this.modal_secondary_button="No"):"payment_add"==this.page&&(this.modal_title="Go Back",this.modal_message="Are you sure you want to go back to the order details?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary"):"form_cancel"==this.action?("feedmedconsumption_create"==this.page&&(this.modal_title="Add Monthly Record",this.modal_message="Are you sure you want to cancel creating a new monthly record?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary",this.modal_secondary_button="No"),"customer_create"==this.page?(this.modal_title="Cancel New Customer",this.modal_message="Are you sure you want to cancel creating a new customer?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary",this.modal_secondary_button="No"):"customer_update"==this.page||"staff_update"==this.page||"feed_update"==this.page||"medicine_update"==this.page?(this.modal_title="Cancel Update",this.modal_message="Are you sure you want to discard changes?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary",this.modal_secondary_button="No"):"staff_create"==this.page?(this.modal_title="Cancel New Staff",this.modal_message="Are you sure you want to cancel creating a new staff?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary",this.modal_secondary_button="No"):"feed_create"==this.page?(this.modal_title="Cancel New Feed",this.modal_message="Are you sure you want to cancel creating a new feed?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary",this.modal_secondary_button="No"):"medicine_create"==this.page?(this.modal_title="Cancel New Medicine",this.modal_message="Are you sure you want to cancel creating a new medicine?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary",this.modal_secondary_button="No"):"transaction_create"==this.page?(this.modal_title="Cancel New Transaction",this.modal_message="Are you sure you want to cancel creating a new transaction?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary",this.modal_secondary_button="No"):"payment_add"==this.page&&(this.modal_title="Cancel Add Payment",this.modal_message="Are you sure you want to cancel adding payment?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary")):"order_approve"==this.action?(this.modal_title="Approve Order",this.modal_message="Do you want to proceed in approving this order?"):"order_decline"==this.action?(this.modal_title="Decline Order",this.modal_message="Please state the reason for declining this order.",this.modal_primary_button="Next",this.modal_primary_button_class="btn-danger",this.generalForm.addControl("message",new se.c("",se.k.compose([se.k.required,se.k.maxLength(250)])))):"feed_save"==this.action||"medicine_save"==this.action?(this.modal_title="Save Item",this.modal_message="Do you want to save this item?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary"):"feed_update"==this.action||"medicine_update"==this.action?(this.modal_title="Update Item",this.modal_message="Do you want to update this item?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary"):"feed_delete"==this.action||"medicine_delete"==this.action?(this.modal_title="Delete Item",this.modal_message="Do you want to delete this item?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-danger"):"logout"==this.action?(this.modal_title="Logout",this.modal_message="Are you sure you want to log out?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary"):"feed_add"==this.action&&(this.modal_title="Update Feeds",this.modal_message="Are you sure you want to update Gram/Bird Feeds?",this.modal_primary_button="Yes",this.modal_primary_button_class="btn-primary")},t.prototype.submit=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return"go_back"!=this.action&&"form_cancel"!=this.action?[3,1]:(this.closeModal(!0),[3,13]);case 1:return"order_approve"!=this.action&&"order_decline"!=this.action?[3,2]:(this.closeModal(),this.openModal(this.generalForm.value,this.action),[3,13]);case 2:return"feed_save"!=this.action&&"feed_update"!=this.action?[3,4]:[4,this.feedsMedicineManagementService.saveFeed(this.item).then((function(e){0==e.error?t.closeModal(e.message):t.openSnackBar(e.message)})).catch((function(e){console.log("e",e),t.openSnackBar(e)}))];case 3:return e.sent(),[3,13];case 4:return"feed_delete"!=this.action?[3,6]:[4,this.feedsMedicineManagementService.removeFeed(this.generalForm.value).then((function(e){0==e.error?t.closeModal(e.message):t.openSnackBar(e.message)})).catch((function(e){console.log("e",e),t.openSnackBar(e)}))];case 5:return e.sent(),[3,13];case 6:return"medicine_save"!=this.action&&"medicine_update"!=this.action?[3,8]:[4,this.feedsMedicineManagementService.saveMedicine(this.item).then((function(e){0==e.error?t.closeModal(e.message):t.openSnackBar(e.message)})).catch((function(e){console.log("e",e),t.openSnackBar(e)}))];case 7:return e.sent(),[3,13];case 8:return"medicine_delete"!=this.action?[3,10]:[4,this.feedsMedicineManagementService.removeMedicine(this.generalForm.value).then((function(e){0==e.error?t.closeModal(e.message):t.openSnackBar(e.message)})).catch((function(e){console.log("e",e),t.openSnackBar(e)}))];case 9:return e.sent(),[3,13];case 10:return"logout"!=this.action?[3,11]:(this.closeModal(!0),[3,13]);case 11:return"feed_add"!=this.action?[3,13]:[4,this.feedsMedicineConsumptionService.updateFeeds(this.item).then((function(e){0==e.error?t.closeModal(e.message):t.openSnackBar(e.message)})).catch((function(e){console.log("e",e),t.openSnackBar(e)}))];case 12:e.sent(),e.label=13;case 13:return[2]}}))}))},t.prototype.openModal=function(t,e){var n=this;this.dialog.open(me,{width:"400px",data:{item:t,action:e}}).afterClosed().subscribe((function(t){t&&n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3})}))},t.prototype.closeModal=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dialogRef.close(t)];case 1:return e.sent(),[2]}}))}))},t.prototype.openSnackBar=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this._snackBar.open(t,null,{verticalPosition:"top",announcementMessage:t,duration:3e3})];case 1:return e.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:pe},{type:se.b},{type:ae.a},{type:g.b},{type:ie},{type:ue}]},t=o.__decorate([Object(i.n)({selector:"app-general-modal",template:o.__importDefault(n("jFLe")).default,styles:[o.__importDefault(n("W7sf")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),ge=function(){function t(t,e,n,o){this.session=t,this.http=e,this.router=n,this.env=o}return t.prototype.isLoggedIn=function(){var t=this.session.retrieve("token");t?void 0===_.getPayload(t).jti?this.router.navigate(["login"]):this.router.navigate(["dashboard"]):this.router.navigate(["login"])},t.prototype.login=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(w);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.generate=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(St);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.validateUserRole=function(){4!=JSON.parse(localStorage.getItem("user")).user_role_id&&this.router.navigate(["transactions-status",1])},t.ctorParameters=function(){return[{type:f.b},{type:r.a},{type:u.b},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),fe=n("fvl4"),be=n("6blF"),ve=function(){function t(t){this.afs=t}return t.prototype.getCollection=function(t){var e=this;return new be.a((function(n){e.afs.collection(t).valueChanges().subscribe((function(t){n.next(t)}),(function(t){console.log(t),n.next({error:1})}))}))},t.prototype.getWhere=function(t,e,n){var o=this;return new be.a((function(i){o.afs.collection(t,(function(t){return t.where(e,"==",n)})).valueChanges().subscribe((function(t){i.next({error:0,data:t})}),(function(t){console.log("e",t),i.next({error:1})}))}))},t.prototype.getData=function(t,e,n){var o=this;return new Promise((function(i){o.afs.collection(t,(function(t){return t.where(e,"==",n)})).valueChanges().subscribe((function(t){t.length>0?i({error:0,data:t}):i({error:1,data:t})}),(function(t){i({error:1,message:t})}))}))},t.prototype.setData=function(t,e,n){var o=this;return new Promise((function(i){o.afs.collection(t).doc(n).set(e).then((function(t){i({error:0,data:t})})).catch((function(t){i({error:1,message:t})}))}))},t.prototype.removeData=function(t,e){var n=this;return new Promise((function(o){n.afs.collection(t).doc(e).delete().then((function(t){o({error:0,data:t})})).catch((function(t){console.log("e",t),o({error:1,data:t})}))}))},t.prototype.generateId=function(){var t=this;return new Promise((function(e){var n=t.afs.createId();e(n?{error:0,data:n}:{error:1,message:"Could not generate ID"})}))},t.ctorParameters=function(){return[{type:fe.a}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),_e=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getUserNotificationList=function(t,e,n){var o=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(i){o.env.getHttpOptions().then((function(s){var a=o.env.getUrl(Jt)+"/page/"+t+"/limit/"+e;n&&(a+="/isUnread/"+n),o.http.get(a,s).subscribe((function(t){i(t)}),(function(t){i({error:1,message:t})}))}))}))},t.prototype.markNotificationAsRead=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(Kt);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),ye=function(){function t(t,e,n,o,i,s,a,r,l,c,d){var u=this;this.auth=t,this.breakpointObserver=e,this.dialog=n,this.session=o,this.events=i,this.houseService=s,this.ordersService=a,this.afs=r,this.notificationsService=l,this.router=c,this._snackBar=d,this.houses=[],this.statuscount=null,this.isHandset$=null,this.notifCount=0,this.notifPreview=[],this.isHandset$=this.breakpointObserver.observe(m.b.Handset).pipe(Object(p.a)((function(t){return t.matches})),Object(h.a)()),this.events.subscribe("sidebar_house_refresh",(function(t){t&&u.getHouses()})),this.events.subscribe("user_refresh",(function(t){t&&(u.userLogin=JSON.parse(localStorage.getItem("user")))})),this.events.subscribe("notifications:refresh",(function(){u.getUserNotificationList()})),this.events.subscribe("notification:showsnackbar",(function(t){t&&u.showSnackBar(t)}))}return t.prototype.ngOnInit=function(){this.userLogin=JSON.parse(localStorage.getItem("user")),this.getHouses(),this.getStatuscount(),this.waitForNotifications()},t.prototype.getUserNotificationList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.notifCount=0,[4,this.notificationsService.getUserNotificationList(1,10,!0).then((function(e){console.log(e),0==e.error&&(t.notifCount=Number(e.total_count),t.notifPreview=e.datas)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.waitForNotifications=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.afs.getWhere("daily_house_harvest","receiver_id",this.userLogin.id).subscribe((function(e){console.log("waitForNotifications",e),0==e.error&&(e.data.length>0&&t.events.publish("notification:showsnackbar",e.data[0].message),t.events.publish("notifications:refresh"),e.data.forEach((function(e){e.data&&t.afs.removeData("daily_house_harvest",e.document_id).then((function(t){console.log("this.cfs.remove",t)}))})))}))];case 1:return e.sent(),[4,this.afs.getWhere("daily_house_harvest_success","receiver_id",this.userLogin.id).subscribe((function(e){console.log("waitForNotifications",e),0==e.error&&(e.data.length>0&&t.events.publish("notification:showsnackbar",e.data[0].message),t.events.publish("notifications:refresh"),e.data.forEach((function(e){e.data&&t.afs.removeData("daily_house_harvest_success",e.document_id).then((function(t){console.log("this.cfs.remove",t)}))})))}))];case 2:return e.sent(),[4,this.afs.getWhere("daily_house_harvest_received","receiver_id",this.userLogin.id).subscribe((function(e){console.log("waitForNotifications",e),0==e.error&&(e.data.length>0&&t.events.publish("notification:showsnackbar",e.data[0].message),t.events.publish("notifications:refresh"),e.data.forEach((function(e){e.data&&t.afs.removeData("daily_house_harvest_received",e.document_id).then((function(t){console.log("this.cfs.remove",t)}))})))}))];case 3:return e.sent(),[4,this.afs.getWhere("daily_sorted_report","receiver_id",this.userLogin.id).subscribe((function(e){console.log("waitForNotifications",e),0==e.error&&(e.data.length>0&&t.events.publish("notification:showsnackbar",e.data[0].message),t.events.publish("notifications:refresh"),e.data.forEach((function(e){e.data&&t.afs.removeData("daily_sorted_report",e.document_id).then((function(t){console.log("this.cfs.remove",t)}))})))}))];case 4:return e.sent(),[4,this.afs.getWhere("sorted_report_success","receiver_id",this.userLogin.id).subscribe((function(e){console.log("waitForNotifications",e),0==e.error&&(e.data.length>0&&t.events.publish("notification:showsnackbar",e.data[0].message),t.events.publish("notifications:refresh"),e.data.forEach((function(e){e.data&&t.afs.removeData("sorted_report_success",e.document_id).then((function(t){console.log("this.cfs.remove",t)}))})))}))];case 5:return e.sent(),[4,this.afs.getWhere("sorted_report_received","receiver_id",this.userLogin.id).subscribe((function(e){console.log("waitForNotifications",e),0==e.error&&(e.data.length>0&&t.events.publish("notification:showsnackbar",e.data[0].message),t.events.publish("notifications:refresh"),e.data.forEach((function(e){e.data&&t.afs.removeData("sorted_report_received",e.document_id).then((function(t){console.log("this.cfs.remove",t)}))})))}))];case 6:return e.sent(),[4,this.afs.getWhere("new_order","receiver_id",this.userLogin.id).subscribe((function(e){0==e.error&&(e.data.length>0&&t.events.publish("notification:showsnackbar",e.data[0].message),t.events.publish("notifications:refresh"),e.data.forEach((function(e){e.data&&t.afs.removeData("new_order",e.document_id).then((function(t){console.log("this.cfs.remove",t)}))})))}))];case 7:return e.sent(),[4,this.afs.getWhere("order_cancelled","receiver_id",this.userLogin.id).subscribe((function(e){0==e.error&&(e.data.length>0&&t.events.publish("notification:showsnackbar",e.data[0].message),t.events.publish("notifications:refresh"),e.data.forEach((function(e){e.data&&t.afs.removeData("order_cancelled",e.document_id).then((function(t){console.log("this.cfs.remove",t)}))})))}))];case 8:return e.sent(),[4,this.afs.getWhere("order_pickup","receiver_id",this.userLogin.id).subscribe((function(e){0==e.error&&(e.data.length>0&&t.events.publish("notification:showsnackbar",e.data[0].message),t.events.publish("notifications:refresh"),e.data.forEach((function(e){e.data&&t.afs.removeData("order_pickup",e.document_id).then((function(t){console.log("this.cfs.remove",t)}))})))}))];case 9:return e.sent(),[4,this.afs.getWhere("order_completed","receiver_id",this.userLogin.id).subscribe((function(e){0==e.error&&(e.data.length>0&&t.events.publish("notification:showsnackbar",e.data[0].message),t.events.publish("notifications:refresh"),e.data.forEach((function(e){e.data&&t.afs.removeData("order_completed",e.document_id).then((function(t){console.log("this.cfs.remove",t)}))})))}))];case 10:return e.sent(),[2]}}))}))},t.prototype.getHouses=function(){var t=this;this.houseService.getAllList().then((function(e){console.log("gethouses",e),0==e.error&&(t.houses=e.datas)})).catch((function(t){console.log("e",t)}))},t.prototype.getStatuscount=function(){var t=this;this.ordersService.getCount().then((function(e){0==e.error&&(t.statuscount=e.data,console.log("getStatuscount",t.statuscount))})).catch((function(t){console.log("e",t)}))},t.prototype.logout=function(){var t=this;this.dialog.open(he,{width:"400px",data:{item:null,action:"logout"}}).afterClosed().subscribe((function(e){e&&(t.session.clear(),t.auth.isLoggedIn())}))},t.prototype.gotoPage=function(t){t.type>=1&&t.type<=14?this.router.navigate(["/daily-reports/view",t.item_id]):t.type>=15&&this.router.navigate(["/transactions/view",t.item_id])},t.prototype.showSnackBar=function(t){this._snackBar.open(t,"Okay",{verticalPosition:"bottom",horizontalPosition:"end",announcementMessage:t,duration:3e3})},t.ctorParameters=function(){return[{type:ge},{type:m.a},{type:g.b},{type:f.b},{type:d.b},{type:oe},{type:ie},{type:ve},{type:_e},{type:u.b},{type:ae.a}]},t=o.__decorate([Object(i.n)({selector:"app-template",template:o.__importDefault(n("5p0f")).default,styles:[o.__importDefault(n("zH3P")).default]})],t)}(),xe=function(){function t(t,e){this.session=t,this._route=e}return t.prototype.canActivate=function(t,e){return!!this.session.retrieve("token")||(this._route.navigate(["/login"]),!1)},t.ctorParameters=function(){return[{type:f.b},{type:u.b}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),we=function(){function t(t,e,n,o,i){this.auth=t,this.route=e,this.session=n,this.formBuilder=o,this._snackBar=i,this.show_password=!1,this.isLoading=!1,this.loginForm=this.formBuilder.group({email:["",se.k.compose([se.k.required,se.k.minLength(5)])],password:["",se.k.compose([se.k.required,se.k.minLength(8)])],remember_me:[!1]})}return t.prototype.ngOnInit=function(){this.auth.isLoggedIn()},t.prototype.login=function(){var t=this;this.auth.login(this.loginForm.value).then((function(e){console.log("res",e),0==e.error?(t.session.store("token",e.token),localStorage.setItem("user",JSON.stringify(e.data)),console.log("asdasdas",e.data),4==e.data.user_role_id?t.route.navigate(["dashboard"]):t.route.navigate(["transactions-status",1])):t._snackBar.open(e.message,null,{verticalPosition:"top",horizontalPosition:"end",announcementMessage:e.message,duration:3e3})})).catch((function(e){console.log("e",e),t._snackBar.open(e,null,{verticalPosition:"top",horizontalPosition:"end",announcementMessage:e,duration:3e3})}))},t.prototype.showPassword=function(){this.show_password=!this.show_password},t.ctorParameters=function(){return[{type:ge},{type:u.b},{type:f.b},{type:se.b},{type:ae.a}]},t=o.__decorate([Object(i.n)({selector:"app-login",template:o.__importDefault(n("ERZh")).default,styles:[o.__importDefault(n("icK6")).default]})],t)}(),ke=n("efFR"),Ie=function(){function t(){}return t.prototype.base64url=function(t){var e=JSON.stringify(t),n=btoa(e);return n=(n=(n=n.replace(/=+$/,"")).replace(/\+/g,"-")).replace(/\//g,"_")},t.prototype.generateFileName=function(){return this.fileNameGenerator(8)+".png"},t.prototype.fileNameGenerator=function(t){for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n="",o=0;o<t;o++){var i=Math.floor(Math.random()*e.length);n+=e.substring(i,i+1)}return n},t.prototype.validateNumber=function(t){var e=window.event?t.keyCode:t.which;return 8===t.keyCode||46===t.keyCode||!(e<48||e>57)},t.prototype.checkUrl=function(t){return!(!t.includes("http://")&&!t.includes("https://"))||(t="http://"+t,!1)},t.prototype.convertTo24Hrs=function(t){var e=Number(t.match(/^(\d+)/)[1]),n=Number(t.match(/:(\d+)/)[1]),o=t.match(/\s(.*)$/)[1];("PM"==o||"pm"==o)&&e<12&&(e+=12),"AM"!=o&&"am"!=o||12!=e||(e-=12);var i=e.toString(),s=n.toString();return e<10&&(i="0"+i),n<10&&(s="0"+s),i+":"+s},t.prototype.converToMin=function(t){var e=this.convertTo24Hrs(t);return e=e.split(":"),60*parseInt(e[0])+parseInt(e[1])},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),Ce=function(){function t(t,e,n,o,i,s){this.customerService=t,this.dialog=e,this._snackBar=n,this.formBuilder=o,this.location=i,this.strand=s,this.customer_type_options=[],this.isProfileImageLoaded=!1,this.isProfilePhotoCropped=!1,this.profileUploadWrongFile=!1,this.uploadMaxLimitReached=!1,this.userForm=this.formBuilder.group({id:[null],role:[3],first_name:["",se.k.compose([se.k.required,se.k.maxLength(50)])],last_name:["",se.k.compose([se.k.required,se.k.maxLength(50)])],customer_type_id:["",se.k.compose([se.k.required])],number:["",se.k.compose([se.k.required,se.k.pattern("^[0-9]*$"),se.k.maxLength(10),se.k.minLength(10)])],email:["",se.k.compose([se.k.required,se.k.pattern("^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$"),se.k.maxLength(50),se.k.minLength(6)])],location:["",se.k.compose([se.k.required,se.k.maxLength(60)])],photo:[]})}return t.prototype.ngOnInit=function(){this.getCustomerTypes()},t.prototype.getCustomerTypes=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.customerService.getCustomerTypes().then((function(e){0==e.error&&(t.customer_type_options=e.datas)})).catch((function(t){console.log(t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.openModal=function(t,e){var n=this;console.log(t),console.log(e),this.dialog.open(me,{width:"400px",data:{item:t||null,action:e}}).afterClosed().subscribe((function(t){t&&(n.location.back(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))},t.prototype.fileChange=function(t){console.log("fileChange",t.target.files[0]),t.target.files[0].type.match("image.*")?t.target.files[0].size>1e6?this.uploadMaxLimitReached=!0:(this.uploadMaxLimitReached=!1,this.isProfileImageLoaded=!1,this.isProfilePhotoCropped=!1,this.profileUploadWrongFile=!1,this.profilePhoto=t):(this.uploadMaxLimitReached=!1,this.isProfileImageLoaded=!0,this.isProfilePhotoCropped=!0,this.profileUploadWrongFile=!0,this.profilePhoto=null)},t.prototype.imageProfilePhotoCropped=function(t){this.croppedprofilePhoto=t.base64,this.isProfilePhotoCropped=!0;var e=new File([t.file],this.strand.generateFileName());this.userForm.controls.photo.setValue(e)},t.prototype.imageProfileLoaded=function(){this.isProfileImageLoaded=!0},t.prototype.startCrop=function(t){this.imageCropper.crop()},t.prototype.goBack=function(t,e){var n=this;this.dialog.open(he,{width:"400px",data:{item:null,action:t,page:e}}).afterClosed().subscribe((function(t){t&&n.location.back()}))},t.ctorParameters=function(){return[{type:le},{type:g.b},{type:ae.a},{type:se.b},{type:c.g},{type:Ie}]},o.__decorate([Object(i.nb)(ke.a,{static:!1})],t.prototype,"imageCropper",void 0),t=o.__decorate([Object(i.n)({selector:"app-customer-create",template:o.__importDefault(n("erp5")).default,styles:[o.__importDefault(n("+88x")).default]})],t)}(),Pe=[{label:"ID",key:"id",canSort:!0,isVisible:!0,canToggle:!0},{label:"Customer Name",key:"first_name",canSort:!0,isVisible:!0,canToggle:!0},{label:"Customer Profile",key:"customer_type",canSort:!0,isVisible:!0,canToggle:!0},{label:"Mobile Number",key:"number",canSort:!0,isVisible:!0,canToggle:!0},{label:"Home Address",key:"location",canSort:!0,isVisible:!0,canToggle:!0},{label:"Date and Time Added",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],Me=[{label:"10",value:10},{label:"25",value:25},{label:"50",value:50},{label:"100",value:100}],Fe=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getActivity=function(t,e,n,o,i,s){var a=this;return new Promise((function(r){a.env.getHttpOptions().then((function(l){var c=a.env.getUrl(It)+"/page/"+t;"daily_sorting_reports_listing"!=t&&"daily_reports_listing"!=t||!e||(c+="/house_id/"+e),"transactions_listing"==t&&n&&(c+="/order_status/"+n),"transactions_listing"==t&&o&&(c+="/mode_of_payment/"+o),"sacks_view"!=t&&"trays_view"!=t&&"payment_attachment_listing"!=t||!i||(c+="/id/"+i),"fresh_egg_inventory_view"==t&&s&&(c+="/date/"+s),a.http.get(c,l).subscribe((function(t){r(t)}),(function(t){r({error:1,message:t})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),Le=function(){function t(t,e){var n=this;this.customerService=t,this.generalService=e,this.isLoaded=!1,this.ths=Pe,this.limits=Me,this.visible_columns=[],this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.search="",this.activity=[],this.showtimeago=!0,this.ths.forEach((function(t,e){n.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){this.getList(),this.getActivity("customer_listing")},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.customerService.getList(this.page,this.limit,this.order,this.search).then((function(e){console.log("res",e),t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return e.sent(),[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:le},{type:Fe}]},t=o.__decorate([Object(i.n)({selector:"app-customer-listing",template:o.__importDefault(n("FVEx")).default,styles:[o.__importDefault(n("C0o6")).default]})],t)}(),Se=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getList=function(t,e,n,o,i,s,a){var r=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(l){r.env.getHttpOptions().then((function(c){var d=r.env.getUrl(A)+"/page/"+t+"/limit/"+e;n&&(d+="/order_by_column/"+n.order_by_column+"/order_by/"+n.order_by),o&&0!=o&&(d+="/role_id/"+o),i&&s&&(d+="/from/"+i+"/to/"+s),a&&(d+="?search="+a),r.http.get(d,c).subscribe((function(t){l(t)}),(function(t){console.log("err2",t),l({error:1,message:"error"})}))}))}))},t.prototype.viewRecord=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(E)+"/id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){console.log("err2",t),n({error:1,message:"error"})}))}))}))},t.prototype.getProfile=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(T)+"/id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){console.log("err2",t),n({error:1,message:"error"})}))}))}))},t.prototype.save=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(R);e.http.post(i,t,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getRecord=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(O)+"/dailyhouse_id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){console.log("err2",t),n({error:1,message:"error"})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),De=function(){function t(t,e,n,o,i,s,a,r,l){this._route=t,this.customerService=e,this.dialog=n,this._snackBar=o,this.formBuilder=i,this.location=s,this.staffService=a,this.strand=r,this.authService=l,this.customer_type_options=[],this.isProfileImageLoaded=!1,this.isProfilePhotoCropped=!1,this.profileUploadWrongFile=!1,this.uploadMaxLimitReached=!1,this.userForm=this.formBuilder.group({id:[null],role:[3],first_name:["",se.k.compose([se.k.required,se.k.maxLength(50)])],last_name:["",se.k.compose([se.k.required,se.k.maxLength(50)])],customer_type_id:["",se.k.compose([se.k.required])],number:["",se.k.compose([se.k.required,se.k.pattern("^[0-9]*$"),se.k.maxLength(10),se.k.minLength(10)])],email:["",se.k.compose([se.k.required,se.k.pattern("^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$"),se.k.maxLength(50),se.k.minLength(6)])],password:[""],location:["",se.k.compose([se.k.required,se.k.maxLength(60)])],photo:[]})}return t.prototype.ngOnInit=function(){var t=this;this._route.params.subscribe((function(e){t.getCustomerTypes(),t.getRecord(e.id)}))},t.prototype.getCustomerTypes=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.customerService.getCustomerTypes().then((function(e){0==e.error&&(t.customer_type_options=e.datas)})).catch((function(t){console.log(t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getRecord=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.staffService.getProfile(t).then((function(t){0==t.error&&(t.data.profile_picture&&(e.profilePhoto=t.data.profile_picture),e.userForm.controls.id.setValue(t.data.id),e.userForm.controls.first_name.setValue(t.data.profile_first_name),e.userForm.controls.last_name.setValue(t.data.profile_last_name),e.userForm.controls.customer_type_id.setValue(t.data.customer_type_id),e.userForm.controls.number.setValue(t.data.contact_number),e.userForm.controls.email.setValue(t.data.email),e.userForm.controls.location.setValue(t.data.address_address))})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.prototype.openModal=function(t,e){var n=this;console.log(t),console.log(e),this.dialog.open(me,{width:"400px",data:{item:t||null,action:e}}).afterClosed().subscribe((function(t){t&&(n.location.back(),"user_delete"==e&&n.location.back(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))},t.prototype.fileChange=function(t){console.log(t),t.target.files[0].type.match("image.*")?t.target.files[0].size>1e6?this.uploadMaxLimitReached=!0:(this.uploadMaxLimitReached=!1,this.isProfileImageLoaded=!1,this.isProfilePhotoCropped=!1,this.profileUploadWrongFile=!1,this.profilePhoto=t):(this.isProfileImageLoaded=!0,this.isProfilePhotoCropped=!0,this.profileUploadWrongFile=!0,this.profilePhoto=null)},t.prototype.imageProfilePhotoCropped=function(t){this.croppedprofilePhoto=t.base64,this.isProfilePhotoCropped=!0;var e=new File([t.file],this.strand.generateFileName());this.userForm.controls.photo.setValue(e)},t.prototype.imageProfileLoaded=function(){this.isProfileImageLoaded=!0},t.prototype.startCrop=function(t){this.imageCropper.crop()},t.prototype.goBack=function(t,e){var n=this;this.dialog.open(he,{width:"400px",data:{item:null,action:t,page:e}}).afterClosed().subscribe((function(t){t&&n.location.back()}))},t.prototype.generatePassword=function(){var t=this;console.log(this.userForm.value),this.authService.generate(this.userForm.value).then((function(e){0==e.error&&t.userForm.controls.password.setValue(e.data)})).catch((function(t){console.log(t)}))},t.ctorParameters=function(){return[{type:u.a},{type:le},{type:g.b},{type:ae.a},{type:se.b},{type:c.g},{type:Se},{type:Ie},{type:ge}]},o.__decorate([Object(i.nb)(ke.a,{static:!1})],t.prototype,"imageCropper",void 0),t=o.__decorate([Object(i.n)({selector:"app-customer-update",template:o.__importDefault(n("V20C")).default,styles:[o.__importDefault(n("fVb4")).default]})],t)}(),Ve=[{label:"Order no.",key:"transaction_id",canSort:!0,isVisible:!0,canToggle:!0},{label:"Date & Time Ordered",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Order Status",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Egg Sizes",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Quantity",key:"total_pieces",canSort:!0,isVisible:!0,canToggle:!0},{label:"Total Bill",key:"total_price",canSort:!0,isVisible:!0,canToggle:!0},{label:"Mode of Payment",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],Ae=[{label:"Pending for Approval",value:1},{label:"Processing",value:2},{label:"Ready for Pick Up",value:3},{label:"Completed",value:4}],Ee=[{label:"Pending Payments",value:"0"},{label:"Paid",value:1}],Te=[{label:"Pending for Payment",value:0},{label:"Paid",value:1}],Re=[{label:"Full Payment",value:1},{label:"With Credit",value:2},{label:"With Balance",value:3}],Oe=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getList=function(t,e,n,o,i,s,a,r,l,c){var d=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(u){d.env.getHttpOptions().then((function(m){var p=d.env.getUrl(W)+"/page/"+t+"/limit/"+e;n&&(p+="/order_by_column/"+n.order_by_column+"/order_by/"+n.order_by),o&&(p+="/user_id/"+o),i&&(p+="/order_status/"+i),s&&(p+="/payment_status/"+s),a&&(p+="/mode_of_payment/"+a),r&&l&&(p+="/from/"+r+"/to/"+l),c&&(p+="?search="+c),d.http.get(p,m).subscribe((function(t){u(t)}),(function(t){console.log("err2",t),u({error:1,message:"error"})}))}))}))},t.prototype.getRecord=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(Y)+"/order_id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){console.log("err2",t),n({error:1,message:"error"})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),Be=function(){function t(t,e,n,o,i,s){var a=this;this.datePipe=t,this.staffService=e,this.location=n,this._route=o,this.ordersService=i,this.transactions=s,this.isLoaded=!1,this.ths=Ve,this.limits=Me,this.visible_columns=[],this.order_status_options=Ae,this.payment_status_options=Ee,this.mode_of_payment_options=Re,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"transaction_id",order_by:"asc"},this.search="",this.order_status=0,this.payment_status=0,this.mode_of_payment=0,this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.user_profile=[],this.collectibles=[],this.show_password=!1,this.ths.forEach((function(t,e){a.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=this;this._route.params.subscribe((function(e){t.getRecord(e.id),t.getCollectibles(e.id)}))},t.prototype.getRecord=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.staffService.getProfile(t).then((function(t){0==t.error&&(e.user_profile=t.data,e.getOrders())})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.prototype.getCollectibles=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.ordersService.getCollectibles(t).then((function(t){0==t.error&&(e.collectibles=t.data)})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.prototype.getOrders=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.transactions.getList(this.page,this.limit,this.order,this.user_profile.id,this.order_status,this.payment_status,this.mode_of_payment,this.from,this.to,this.search).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getOrders()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getOrders()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getOrders()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getOrders()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.changePaymentStatus=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getOrders()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeOrderStatus=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getOrders()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeModeOfPayment=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getOrders()];case 1:return t.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getOrders()];case 1:return t.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=null,this.to=null,this.created_at=[],this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,this.payment_status=null,this.order_status=null,this.mode_of_payment=null,[4,this.getOrders()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){return this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),1==this.visible_columns.length?(t=this.ths.length-1,this.ths[t].isVisible=!1):(t=this.ths.length-1,this.ths[t].isVisible=!0),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.goBack=function(){this.location.back()},t.prototype.showPassword=function(){this.show_password=!this.show_password},t.ctorParameters=function(){return[{type:c.d},{type:Se},{type:c.g},{type:u.a},{type:ie},{type:Oe}]},t=o.__decorate([Object(i.n)({selector:"app-customer-view",template:o.__importDefault(n("VfB6")).default,styles:[o.__importDefault(n("bFxj")).default]})],t)}(),Ne=[{label:"Date and Time",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Age",key:"age_week",canSort:!0,isVisible:!0,canToggle:!0},{label:"Mortality",key:"mortality",canSort:!0,isVisible:!0,canToggle:!0},{label:"Mortality Rate %",key:"mortality",canSort:!0,isVisible:!0,canToggle:!0},{label:"Cull",key:"cull",canSort:!0,isVisible:!0,canToggle:!0},{label:"End Bird Population",key:"bird_count",canSort:!0,isVisible:!0,canToggle:!0},{label:"Total Egg Count",key:"real_egg_count",canSort:!0,isVisible:!0,canToggle:!0},{label:"Production Rate %",key:"feed_consumption",canSort:!0,isVisible:!0,canToggle:!0},{label:"No. of bags",key:"feed_consumption",canSort:!0,isVisible:!0,canToggle:!0},{label:"Feed Consumption",key:"feed_consumption",canSort:!0,isVisible:!0,canToggle:!0},{label:"Medicine Intake",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Report Status",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],je=[{label:"Daily report for approval",value:1},{label:"Approved daily report",value:2},{label:"For sorting",value:3},{label:"Sorted report for approval",value:4},{label:"Approved sorted report",value:5},{label:"Received on warehouse",value:6}],qe=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getList=function(t,e,n,o,i,s,a,r){var l=this;return void 0===t&&(t=1),void 0===e&&(e=10),console.log(a),new Promise((function(c){l.env.getHttpOptions().then((function(d){var u=l.env.getUrl($)+"/page/"+t+"/limit/"+e;n&&0!=n&&(u+="/type/"+n),o&&0!=o&&(u+="/flockman_id/"+o),i&&s&&(u+="/from/"+i+"/to/"+s),a&&(u+="/order_by_column/"+a.order_by_column+"/order_by/"+a.order_by),r&&(u+="?search="+r),l.http.get(u,d).subscribe((function(t){c(t)}),(function(t){console.log("err2",t),c({error:1,message:"error"})}))}))}))},t.prototype.getRecord=function(t,e,n,o,i,s,a,r){var l=this;return void 0===t&&(t=1),void 0===e&&(e=10),console.log("type",o),new Promise((function(c){l.env.getHttpOptions().then((function(d){var u=l.env.getUrl(G)+"/page/"+t+"/limit/"+e+"/house_id/"+n;o&&0!=o&&(u+="/type/"+o),i&&s&&(u+="/from/"+i+"/to/"+s),a&&(u+="/order_by_column/"+a.order_by_column+"/order_by/"+a.order_by),r&&(u+="?search="+r),l.http.get(u,d).subscribe((function(t){c(t)}),(function(t){console.log("err2",t),c({error:1,message:"error"})}))}))}))},t.prototype.getSortingRecord=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(Mt)+"/house_harvest_id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){console.log("err2",t),n({error:1,message:"error"})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),He=n("+zAx"),Ue=function(){function t(t,e,n,o,i){var s=this;this.dialogRef=t,this.data=e,this.dailyReportsService=n,this.exportAsService=o,this.datePipe=i,this.isLoaded=!1,this.ths=Ne,this.visible_columns=[],this.items=[],this.totalItems=0,this.item=[],this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.search="",this.staff_items=[],this.flockmanId=0,this.type=0,this.from=null,this.to=null,this.created_at=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"A4"},margin:10,compress:!0,pagebreak:{after:".break-now"},showall:!0,pdfCallbackFn:this.pdfCallbackFn}},this.user_profile=[],this.date_today=new Date,this.all=!0,this.ths.forEach((function(t,e){s.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.type=this.data.type,this.order=this.data.order,this.search=this.data.search,this.houseId=this.data.houseId,this.getList()},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dailyReportsService.getRecord(this.page,this.limit,this.houseId,this.type,this.from,this.to,this.order,this.search).then((function(e){t.isLoaded=!0,0==e.error?(t.item=e.data,e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Daily-House-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.pdfCallbackFn=function(t){for(var e=t.internal.getNumberOfPages(),n=1;n<=e;n++)t.setPage(n),t.setFontSize(12),t.text(n+" of "+e,t.internal.pageSize.getWidth()-25,t.internal.pageSize.getHeight()-10)},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:qe},{type:He.b},{type:c.d}]},t=o.__decorate([Object(i.n)({selector:"app-report-daily-house",template:o.__importDefault(n("Vwsj")).default,styles:[o.__importDefault(n("duur")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),ze=n("8j+T"),$e=function(){function t(t,e,n,o,i,s,a){var r=this;this.auth=t,this.datePipe=e,this._route=n,this.dialog=o,this.dailyReportsService=i,this.generalService=s,this.staffService=a,this.isLoaded=!1,this.ths=Ne,this.limits=Me,this.visible_columns=[],this.report_status_options=je,this.items=[],this.item=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.search="",this.staff_items=[],this.type=0,this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.activity=[],this.showtimeago=!0,this.max_date=new Date,this.ths.forEach((function(t,e){r.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=this;this.auth.validateUserRole(),this._route.params.subscribe((function(e){console.log(e),t.houseId=e.id,t.clearFilters(),t.getActivity("daily_reports_listing",t.houseId)}))},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dailyReportsService.getRecord(this.page,this.limit,this.houseId,this.type,this.from,this.to,this.order,this.search).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.item=e.data,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.changeReportStatus=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.type=0,this.from=null,this.to=null,this.created_at=[],this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){return this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),1==this.visible_columns.length?(t=this.ths.length-1,this.ths[t].isVisible=!1):(t=this.ths.length-1,this.ths[t].isVisible=!0),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n=this;return o.__generator(this,(function(o){switch(o.label){case 0:return[4,this.generalService.getActivity(t,e).then((function(t){0==t.error?(n.showtimeago=!0,n.activity=t.data):n.showtimeago=!1})).catch((function(t){console.log(t),n.showtimeago=!1}))];case 1:return o.sent(),[2]}}))}))},t.prototype.openModal=function(){this.dialog.open(Ue,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,visible_columns:this.visible_columns,ths:this.ths,type:this.type,houseId:this.houseId,order:this.order,search:this.search,all:!1}}).afterClosed().subscribe((function(t){}))},t.prototype.exportToCsv=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return t=[],[4,this.dailyReportsService.getRecord(1,this.totalItems,this.houseId,this.type,this.from,this.to,this.order,this.search).then((function(n){if(0==n.error){n.datas.forEach((function(n){var o=[];n.medicine_name&&n.medicine_name.forEach((function(t){o.push(t.medicine)})),o=o.join(", "),t.push({"Date and Time":e.datePipe.transform(new Date(n.prepared_by_date),"yyyy-MM-dd"),Age:n.age,Mortality:n.mortality,"Mortality Rate %":n.mortality_rate,Cull:n.cull,"End Bird Population":n.bird_count,"Total Egg Count":n.real_egg_count,"Production Rate %":n.production_rate,"No. of Bags":n.feeds.bags,"Feed Consumption":n.feeds.string,"Medicine Intake":o,"Report Status":n.sortingRecordstatus?n.sortingRecordstatus:n.recordStatus,Flockman:n.flockman})}));var o={fieldSeparator:",",quoteStrings:'"',decimalSeparator:".",showLabels:!0,showTitle:!0,title:"Report-Daily-House-"+e.datePipe.transform(new Date,"yyyy-MM-dd"),useTextFile:!1,useBom:!0,useKeysAsHeaders:!0,filename:"Report-Daily-House-"+e.datePipe.transform(new Date,"yyyy-MM-dd")};new ze.ExportToCsv(o).generateCsv(t)}})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:ge},{type:c.d},{type:u.a},{type:g.b},{type:qe},{type:Fe},{type:Se}]},t=o.__decorate([Object(i.n)({selector:"app-daily-reports-house-listing",template:o.__importDefault(n("giWx")).default,styles:[o.__importDefault(n("2Bv7")).default]})],t)}(),Ge=[{label:"Date and Time",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"House/Building no.",key:"house_name",canSort:!0,isVisible:!0,canToggle:!0},{label:"Age",key:"age_week",canSort:!0,isVisible:!0,canToggle:!0},{label:"Mortality",key:"mortality",canSort:!0,isVisible:!0,canToggle:!0},{label:"Mortality Rate %",key:"mortality",canSort:!0,isVisible:!0,canToggle:!0},{label:"Cull",key:"cull",canSort:!0,isVisible:!0,canToggle:!0},{label:"End Bird Population",key:"bird_count",canSort:!0,isVisible:!0,canToggle:!0},{label:"Total Egg Count",key:"real_egg_count",canSort:!0,isVisible:!0,canToggle:!0},{label:"Production Rate %",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"No. of bags",key:"feed_consumption",canSort:!0,isVisible:!0,canToggle:!0},{label:"Feed Consumption",key:"feed_consumption",canSort:!0,isVisible:!0,canToggle:!0},{label:"Medicine Intake",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Report Status",key:"recordStatus",canSort:!0,isVisible:!0,canToggle:!0},{label:"Flockman",key:"",canSort:!0,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],We=function(){function t(t,e,n,o,i){var s=this;this.dialogRef=t,this.data=e,this.dailyReportsService=n,this.exportAsService=o,this.datePipe=i,this.isLoaded=!1,this.ths=Ge,this.visible_columns=[],this.items=[],this.totalItems=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.search="",this.staff_items=[],this.flockmanId=0,this.type=0,this.from=null,this.to=null,this.created_at=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"A4"},margin:10,compress:!0,pagebreak:{after:".break-now"},showall:!0,pdfCallbackFn:this.pdfCallbackFn}},this.user_profile=[],this.date_today=new Date,this.all=!0,this.ths.forEach((function(t,e){s.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.type=this.data.type,this.flockmanId=this.data.flockmanId,this.order=this.data.order,this.search=this.data.search,this.getList()},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dailyReportsService.getList(this.page,this.limit,this.type,this.flockmanId,this.from,this.to,this.order,this.search).then((function(e){t.isLoaded=!0,0==e.error?e.datas.forEach((function(e){t.items.push(e)})):(t.items=[],t.totalItems=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Daily-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.pdfCallbackFn=function(t){for(var e=t.internal.getNumberOfPages(),n=1;n<=e;n++)t.setPage(n),t.setFontSize(12),t.text(n+" of "+e,t.internal.pageSize.getWidth()-25,t.internal.pageSize.getHeight()-10)},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:qe},{type:He.b},{type:c.d}]},t=o.__decorate([Object(i.n)({selector:"app-report-daily",template:o.__importDefault(n("WyUq")).default,styles:[o.__importDefault(n("fc8k")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),Ye=function(){function t(t,e,n,o,i,s,a){var r=this;this.auth=t,this.datePipe=e,this.dialog=n,this._route=o,this.dailyReportsService=i,this.generalService=s,this.staffService=a,this.isLoaded=!1,this.ths=Ge,this.limits=Me,this.visible_columns=[],this.report_status_options=je,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.search="",this.staff_items=[],this.flockmanId=0,this.type=0,this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.activity=[],this.showtimeago=!0,this.max_date=new Date,this.ths.forEach((function(t,e){r.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getList(),this.getStaffList(),this.getActivity("daily_reports_listing")},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dailyReportsService.getList(this.page,this.limit,this.type,this.flockmanId,this.from,this.to,this.order,this.search).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.getStaffList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){return this.staffService.getList(1,10,null,8).then((function(e){console.log("getStaffListing",e),0==e.error&&(t.staff_items=e.datas)})).catch((function(t){console.log("e",t)})),[2]}))}))},t.prototype.changeFlockman=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeReportStatus=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.flockmanId=0,this.type=0,this.from=null,this.to=null,this.created_at=[],this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){return this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),1==this.visible_columns.length?(t=this.ths.length-1,this.ths[t].isVisible=!1):(t=this.ths.length-1,this.ths[t].isVisible=!0),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.prototype.openModal=function(){this.dialog.open(We,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,visible_columns:this.visible_columns,ths:this.ths,type:this.type,flockmanId:this.flockmanId,order:this.order,search:this.search,all:!0}}).afterClosed().subscribe((function(t){}))},t.prototype.exportToCsv=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return t=[],[4,this.dailyReportsService.getList(1,this.totalItems,this.type,this.flockmanId,this.from,this.to,this.order,this.search).then((function(n){if(0==n.error){n.datas.forEach((function(n){var o=[];n.medicine_name&&n.medicine_name.forEach((function(t){o.push(t.medicine)})),o=o.join(", "),t.push({"Date and Time":e.datePipe.transform(new Date(n.prepared_by_date),"yyyy-MM-dd"),"House/Building no.":n.house_name.house_name,Age:n.age,Mortality:n.mortality,"Mortality Rate %":n.mortality_rate,Cull:n.cull,"End Bird Population":n.bird_count,"Total Egg Count":n.real_egg_count,"Production Rate %":n.production_rate,"No. of bags":n.feeds.bags,"Feed Consumption":n.feeds.string,"Medicine Intake":o,"Report Status":n.sortingRecordstatus?n.sortingRecordstatus:n.recordStatus,Flockman:n.flockman})}));var o={fieldSeparator:",",quoteStrings:'"',decimalSeparator:".",showLabels:!0,showTitle:!0,title:"Report-Daily-"+e.datePipe.transform(new Date,"yyyy-MM-dd"),useTextFile:!1,useBom:!0,useKeysAsHeaders:!0,filename:"Report-Daily-"+e.datePipe.transform(new Date,"yyyy-MM-dd")};new ze.ExportToCsv(o).generateCsv(t)}})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:ge},{type:c.d},{type:g.b},{type:u.a},{type:qe},{type:Fe},{type:Se}]},t=o.__decorate([Object(i.n)({selector:"app-daily-reports-listing",template:o.__importDefault(n("w82W")).default,styles:[o.__importDefault(n("BMn+")).default]})],t)}(),Qe=function(){function t(t,e,n,o,i){this.dialogRef=t,this.data=e,this.exportAsService=n,this._route=o,this.datePipe=i,this.item=[],this.sorting_item=[],this.user_profile=[],this.date_today=new Date,this.isLoaded=!1,this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"portrait",format:"legal"},html2canvas:{scale:2},margin:10,compress:!0,pagebreak:{after:".break-now"},image:{type:"jpeg",quality:.95}}}}return t.prototype.ngOnInit=function(){JSON.parse(localStorage.getItem("user"));this.item=this.data.daily_report,this.sorting_item=this.data.sorting_report,this.isLoaded=!0,console.log("this.item",this.item),console.log("this.sorting_item",this.sorting_item)},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Daily-View-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:He.b},{type:u.a},{type:c.d}]},t=o.__decorate([Object(i.n)({selector:"app-report-daily-view",template:o.__importDefault(n("o+1E")).default,styles:[o.__importDefault(n("vvYg")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),Je=function(){function t(t,e,n,o,i,s,a){this.auth=t,this.dailyReportsService=e,this.location=n,this._route=o,this.staffService=i,this.datePipe=s,this.dialog=a,this.item=[],this.sorting_item=[],this.isLoaded=!1,this.selectedIndex=0,this.printabledata=[]}return t.prototype.ngOnInit=function(){var t=this;this.auth.validateUserRole(),this._route.params.subscribe((function(e){t.getRecord(e.id),t.getSortingRecord(e.id)}))},t.prototype.getRecord=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.staffService.getRecord(t).then((function(t){console.log("getRecord",t),e.isLoaded=!0,0==t.error&&(e.item=t.data)})).catch((function(t){console.log("e",t),e.isLoaded=!0}))];case 1:return n.sent(),[2]}}))}))},t.prototype.getSortingRecord=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.dailyReportsService.getSortingRecord(t).then((function(t){0==t.error&&(e.sorting_item=t.data)})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.prototype.goBack=function(){this.location.back()},t.prototype.openModal=function(){this.dialog.open(Qe,{panelClass:"scroll",data:{daily_report:this.item,sorting_report:this.sorting_item}}).afterClosed().subscribe((function(t){}))},t.prototype.exportToCsv=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e,n;return o.__generator(this,(function(o){return t=[],e=[],this.item.medicine.forEach((function(t){e.push(t.medicine)})),this.printabledata={"Harvested By":this.item.name,"House/Building no.":this.item.house.house_name,"Report Date":this.datePipe.transform(new Date(this.sorting_item.prepared_by_date),"yyyy-MM-dd"),"Report Time":this.datePipe.transform(new Date(this.sorting_item.prepared_by_date),"hh:mm aaa"),"Bird Count":this.item.bird_count,Age:this.item.age,Mortality:this.item.mortality,Cull:this.item.cull,"End Bird Population":this.item.bird_count,"No. of Sacks":this.item.feeds.bags,"Feed Consumption":this.item.feeds.string,"Medicine Intake":e.join(","),"Egg Count":this.item.egg_count,"Validated Egg Count":this.item.real_egg_count,"Prepared By":this.item.name,"Checked By":this.item.checked_by_name,"Received by":this.item.received_by_name,"Sorted By":this.sorting_item?this.sorting_item.prepared_by_name:"","Sorted Date":this.sorting_item?this.datePipe.transform(new Date(this.sorting_item.prepared_by_date),"yyyy-MM-dd"):"","Sorted Time":this.sorting_item?this.datePipe.transform(new Date(this.sorting_item.prepared_by_date),"hh:mm aaa"):"","Sorted Checked By":this.sorting_item?this.sorting_item.checked_by_name:"","Sorted Received By":this.sorting_item?this.sorting_item.received_by_name:""},t.push(this.printabledata),n={fieldSeparator:",",quoteStrings:'"',decimalSeparator:".",showLabels:!0,showTitle:!0,title:"Daily-Report-View-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),useTextFile:!1,useBom:!0,useKeysAsHeaders:!0,filename:"Daily-Report-View-"+this.datePipe.transform(new Date,"yyyy-MM-dd")},new ze.ExportToCsv(n).generateCsv(t),[2]}))}))},t.prototype.tabChanged=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){return console.log(this.selectedIndex),[2]}))}))},t.ctorParameters=function(){return[{type:ge},{type:qe},{type:c.g},{type:u.a},{type:Se},{type:c.d},{type:g.b}]},t=o.__decorate([Object(i.n)({selector:"app-daily-reports-view",template:o.__importDefault(n("2Q4y")).default,styles:[o.__importDefault(n("Nah4")).default]})],t)}(),Ke=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getDashboard=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(k);t&&(i+="/type/"+t),e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getFeedConsumption=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(I);t&&(i+="/type/"+t),e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getMedicineConsumption=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(C);t&&(i+="/type/"+t),e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getHarvestStatus=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(P);t&&(i+="/type/"+t),e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getHarvestRate=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(M);t&&(i+="/type/"+t),e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getRecentTransactions=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(F);t&&(i+="/type/"+t),e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getActivityLog=function(){var t=this;return new Promise((function(e){t.env.getHttpOptions().then((function(n){var o=t.env.getUrl(Gt);t.http.get(o,n).subscribe((function(t){e(t)}),(function(t){e({error:1,message:t})}))}))}))},t.prototype.getStaffActivities=function(t,e,n,o,i,s,a,r){var l=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(c){l.env.getHttpOptions().then((function(d){var u=l.env.getUrl(L)+"/page/"+t+"/limit/"+e;n&&(u+="/user_id/"+n),o&&i&&(u+="/from/"+o+"/to/"+i),s&&(u+="/code/"+s),a&&(u+="/order_by_column/"+a.order_by_column+"/order_by/"+a.order_by),r&&(u+="?search="+r),l.http.get(u,d).subscribe((function(t){c(t)}),(function(t){c({error:1,message:t})}))}))}))},t.prototype.getCode=function(t){var e=[];return new Promise((function(n){console.log("userID",t),4==t?e=[{label:"Approved Payment",value:"payment_approved"},{label:"Approved Order",value:"order_approved"},{label:"Declined Order",value:"order_decline"},{label:"Released Order",value:"order_forrelease"}]:5==t?e=[{label:"Approved Payment",value:"payment_approved"},{label:"Approved Order",value:"order_approved"},{label:"Declined Order",value:"order_decline"},{label:"Pickup Order",value:"order_pickup"},{label:"Released Order",value:"order_forrelease"}]:6==t?e=[{label:"Received Daily House Report",value:"daily_house_report_receive"},{label:"Received Daily Sorting Report",value:"daily_sorting_report_receive"},{label:"Approved Daily House Report",value:"daily_house_report_approve"},{label:"Approved Daily Sorting Report",value:"daily_sorting_report_approve"},{label:"Sent Daily House Incident Report",value:"incident_report_sentyou_dhr"},{label:"Sent Daily Sorting Incident Report",value:"incident_report_sentyou_dsr"},{label:"Approved Daily Harvest Incident Report",value:"incident_report_approve_dhreport"},{label:"Approved Daily Sorting Incident Report",value:"incident_report_approve_sortedreport"}]:7==t?e=[{label:"Released Order",value:"order_forrelease"}]:8==t?e=[{label:"Submit Daily House Report",value:"daily_house_report_submit"},{label:"Submit Daily House Incident Report",value:"incident_report_submit_flockman"},{label:"File Daily Harvest Incident Report",value:"incident_report_mustfile_dhr"}]:9==t?e=[{label:"Submit Daily Sorting Report",value:"daily_sorting_report_submit"},{label:"Submit Daily Sorting Incident Report",value:"incident_report_submit_sorter"},{label:"File Daily Sorting Incident Report",value:"incident_report_mustfile_dsr"}]:10==t&&(e=[{label:"Pickup Order",value:"order_pickup"},{label:"Submitted Sack Report",value:"sack_report_submit"},{label:"Submitted Tray Report",value:"tray_report_submit"},{label:"Received Daily Sorting Report",value:"daily_sorting_report_receive"}]),e.length>0?n({error:0,datas:e}):n({error:1,message:"error"})}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),Ze=n("qb46"),Xe=function(){function t(t,e){this.auth=t,this.dashboardService=e,this.pieChartOptions={responsive:!0,legend:{position:"left",labels:{fontSize:16,fontColor:"#1E2631"}},tooltips:{callbacks:{label:function(t,e){var n=t.datasetIndex;return e.labels[n].toString()},footer:function(t,e){console.log("item",t),console.log("data",e);var n=t[0].index,o=Number(e.datasets[0].data[n]),i=o.toFixed(2)+" %";return 0==o?"":"Production Rate: "+i}}},plugins:{datalabels:{formatter:function(t,e){var n=t.toFixed(2)+" %";return 0==t?"":n}}}},this.pieChartLabels=[],this.pieChartData=[],this.pieChartType="pie",this.pieChartLegend=!0,this.pieChartPlugins=[Ze],this.piechartvalues=[],this.barChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:1,scales:{yAxes:[{scaleLabel:{display:!0,labelString:"No. of consumed (g)",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}]},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){return"House/Building no. "+t.label},footer:function(t,e){if(0==Number(t[0].value))return null;var n=t[0].value.toString().split(".");return n[0]=n[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),"Consumed: "+n.join(".")+" g"}}},plugins:{datalabels:{color:"#FFF",formatter:function(t,e){var n=Math.log10(Math.abs(t))/3|0;if(0==n)return t;var o=["","K","M","G","T","P","E"][n],i=(t/Math.pow(10,3*n)).toFixed(1)+"";return/\.0$/.test(i)&&(i=i.substr(0,i.length-2)),i+o}}}},this.barChartLabels=[],this.barChartType="bar",this.barChartLegend=!1,this.barChartPlugins=[Ze],this.barChartData=[],this.barchartvalues=[],this.dateToday=new Date,this.type=0,this.dashboard_data=null,this.feed_consumption_data=null,this.medicine_consumption_data=null,this.harvest_production_status_data=null,this.harvest_rate_data=null,this.recent_transactions_data=null,this.staff_activities_data=null,this.masonryItems=[{title:"Feed Consumption",key:"feed_consumption",url:"/performance-report/consumption/feeds"},{title:"Medicine Consumption",key:"medicine_consumption",url:"/performance-report/consumption/medicine"},{title:"Harvest Production Status",key:"harvest_production_status",url:"/daily-reports"},{title:"Harvest Production Rate per houses",key:"harvest_production_rate",url:null},{title:"Recent Transactions",key:"recent_transactions",url:"/transactions"},{title:"Recent Staff Activities",key:"recent_staff_activities",url:null}],this.userProfile=[]}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getDashboard(),this.getFeedConsumption(),this.getHarvestRate(),this.getHarvestStatus(),this.getMedicineConsumption(),this.getRecentTransactions(),this.getStaffActivities()},t.prototype.changeType=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.type=1==this.type?0:1,[4,this.ngOnInit()];case 1:return t.sent(),[2]}}))}))},t.prototype.getDashboard=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dashboardService.getDashboard(this.type).then((function(e){console.log("getDashboard",e),0==e.error&&(t.dashboard_data=e.data)})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getFeedConsumption=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.barChartLabels=[],this.barChartData=[],this.barchartvalues=[],[4,this.dashboardService.getFeedConsumption(this.type).then((function(e){console.log("getFeedConsumption",e),0==e.error?(t.feed_consumption_data=e.data,e.data.forEach((function(e){t.barChartLabels.push(e.house_name),t.barchartvalues.push(e.consumed_feeds)})),t.barChartData=[{data:t.barchartvalues,label:"Consumed",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"}]):t.barChartData=[{data:t.barchartvalues,label:"Consumed",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"}]})).catch((function(e){console.log("e",e),t.barChartData=[{data:t.barchartvalues,label:"Consumed",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"}]}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getMedicineConsumption=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dashboardService.getMedicineConsumption(this.type).then((function(e){console.log("getMedicineConsumption",e),0==e.error&&(t.medicine_consumption_data=e.data)})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getHarvestStatus=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dashboardService.getHarvestStatus(this.type).then((function(e){console.log("getHarvestStatus",e),0==e.error&&(t.harvest_production_status_data=e.data)})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getHarvestRate=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.piechartvalues=[],this.pieChartLabels=[],this.pieChartData=[],[4,this.dashboardService.getHarvestRate(this.type).then((function(e){console.log("getHarvestRate",e),0==e.error?(t.harvest_rate_data=e.data,t.harvest_rate_data.forEach((function(e){t.pieChartLabels.push("House/Building no. "+e.house_name),0==e.production_rate?t.piechartvalues.push(0):t.piechartvalues.push(Number(e.production_rate))})),t.pieChartData=t.piechartvalues):t.pieChartData=[]})).catch((function(e){console.log("e",e),t.pieChartData=[]}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getRecentTransactions=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dashboardService.getRecentTransactions(this.type).then((function(e){console.log("getRecentTransactions",e),0==e.error&&(t.recent_transactions_data=e.data)})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getStaffActivities=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dashboardService.getActivityLog().then((function(e){console.log("getActivityLog",e),0==e.error&&(t.staff_activities_data=e.data)})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.abbreviateNumber=function(t){var e=Math.log10(Math.abs(t))/3|0;if(0==e)return t;var n=["","k","M","G","T","P","E"][e],o=(t/Math.pow(10,3*e)).toFixed(1)+"";return/\.0$/.test(o)&&(o=o.substr(0,o.length-2)),o+n},t.ctorParameters=function(){return[{type:ge},{type:Ke}]},t=o.__decorate([Object(i.n)({selector:"app-dashboard",template:o.__importDefault(n("1MjJ")).default,styles:[o.__importDefault(n("b8v5")).default]})],t)}(),tn=function(){function t(t,e,n,o,i,s,a,r,l){this.auth=t,this.formBuilder=e,this.houseService=n,this.location=o,this.feedsandmedicineConsumption=i,this.datePipe=s,this.dialog=a,this._snackBar=r,this._route=l,this.monthdatetoday=new Date,this.house_options=[],this.isLoaded=!1,this.order={order_by_column:"created_at",order_by:"asc"},this.totalItems=0,this.page=1,this.prev_page=0,this.next_page=0,this.totalPages=0,this.limit_disabled=0,this.feeds_and_medicine=[],this.medicines=[],this.checkedMedicine=[],this.medicine=[],this.days=[],this.med=[],this.medic=[],this.disable_main_input=!0,this.date_increment=new Date,this.date_today=new Date,this.feed_options=[],this.feed=[],this.medicineConsumptionForm=this.formBuilder.group({house_id:["",se.k.compose([se.k.required])],bird_count:["",se.k.compose([se.k.required,se.k.min(0)])],age_week:["",se.k.compose([se.k.required,se.k.min(1)])],age_day:["",se.k.compose([se.k.required,se.k.min(1)])]})}return t.prototype.loopDates=function(){this.days=[],this.medicine=[];for(var t=new Date,e=t.getFullYear(),n=t.getMonth(),o=this.datePipe.transform(new Date(e,n,1),"yyyy-MM-dd"),i=this.datePipe.transform(new Date(e,n+1,0),"yyyy-MM-dd"),s=new Date(o),a=function(){var t=[];r.medicines.forEach((function(e){t.push({med_id:e.id,value:0})})),r.days.push({day:new Date(s)}),r.medicine.push({day:r.datePipe.transform(new Date(s),"yyyy-MM-dd"),med:t,feed:{feed_id:null,feed_consumption:null}});var e=s.setDate(s.getDate()+1);s=new Date(e)},r=this;s<=new Date(i);)a()},t.prototype.ngOnInit=function(){var t=this;this.auth.validateUserRole(),this.getHouseList(),this.getAllmedicines(),this.getAllFeeds(),this._route.params.subscribe((function(e){e.id&&(t.daily_house_harvest_id=e.id,t.getDailyhouserecord())}))},t.prototype.getHouseList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.houseService.getAllList().then((function(e){0==e.error&&(t.house_options=e.datas)})).catch((function(t){console.log(t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.goBack=function(){this.location.back()},t.prototype.getFeedsandmedicineconsumption=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.loopDates()];case 1:return e.sent(),[4,this.feedsandmedicineConsumption.getList(this.order,this.house_id).then((function(e){t.isLoaded=!0,0==e.error?e.data?(t.house_data=e.data,t.house_data.forEach((function(e,n){t.house_details=e;var o=t.medicine.findIndex((function(n){return n.day==t.datePipe.transform(new Date(e.created_at),"yyyy-MM-dd")}));if(e.medicine_ids){var i=e.medicine_ids.split(","),s=e.medicine_values.split(",");i.forEach((function(e,n){var i=t.medicines.findIndex((function(t){return t.id==e}));t.medicine[o].med[i].med_id=e,t.medicine[o].med[i].value=s[n]}))}t.medicine[o].feed.feed_id=e.feed_id,t.medicine[o].feed.feed_consumption=Number(e.feed_consumption)})),t.disable_main_input=!0,t.medicineConsumptionForm.controls.bird_count.setValue(e.house_details.current_age_of_chicken.bird_count),t.medicineConsumptionForm.controls.age_week.setValue(e.house_details.current_age_of_chicken.age_week),t.medicineConsumptionForm.controls.age_day.setValue(e.house_details.current_age_of_chicken.age_day)):(t.disable_main_input=!1,t.medicineConsumptionForm.controls.bird_count.setValue(e.house_details.beginning_population),t.medicineConsumptionForm.controls.age_week.setValue(1),t.medicineConsumptionForm.controls.age_day.setValue(0)):t.house_data=[]})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 2:return e.sent(),[2]}}))}))},t.prototype.getDailyhouserecord=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.feedsandmedicineConsumption.getHouserecord(this.daily_house_harvest_id).then((function(e){t.isLoaded=!0,0==e.error?(t.house_record=e.data,t.medicineConsumptionForm.controls.house_id.setValue(t.house_record.house_id),t.medicineConsumptionForm.controls.bird_count.setValue(t.house_record.bird_count),t.medicineConsumptionForm.controls.age_week.setValue(t.house_record.age_week),t.medicineConsumptionForm.controls.age_day.setValue(t.house_record.age_day),t.house_id=t.house_record.house_id):t.house_record=[]})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getHousedetails=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){return this.isLoaded=!1,this.house_id=this.medicineConsumptionForm.controls.house_id.value,this.medicineConsumptionForm.controls.bird_count.setValue(null),this.medicineConsumptionForm.controls.age_week.setValue(null),this.medicineConsumptionForm.controls.age_day.setValue(null),this.getFeedsandmedicineconsumption(),[2]}))}))},t.prototype.getAllmedicines=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.feedsandmedicineConsumption.getAllmedicine().then((function(e){t.isLoaded=!0,0==e.error?e.data.forEach((function(e){t.medicines.push(e)})):t.medicines=[]})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getAllFeeds=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.feedsandmedicineConsumption.getAllFeeds().then((function(e){0==e.error&&(t.feed_options=e.datas)})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.setMedvalue=function(t,e,n){this.medicine[e].med[n].value=t},t.prototype.chooseFeed=function(t,e){this.medicine[e].feed.feed_id=t.value},t.prototype.setFeedValue=function(t,e){this.medicine[e].feed.feed_consumption=t},t.prototype.openModal=function(t,e){var n=this;"form_cancel"==t||"go_back"==t?this.dialog.open(he,{width:"400px",data:{action:t,page:e}}).afterClosed().subscribe((function(t){t&&n.location.back()})):(this.medic={info:this.medicineConsumptionForm.value,medicines:this.medicine},this.dialog.open(me,{width:"400px",data:{item:this.medic,action:"medicine_add"}}).afterClosed().subscribe((function(t){t&&(n.location.back(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))})))},t.prototype.checkbox=function(t,e,n){t.checked||(this.medicine[e].med[n].value=0)},t.ctorParameters=function(){return[{type:ge},{type:se.b},{type:oe},{type:c.g},{type:ue},{type:c.d},{type:g.b},{type:ae.a},{type:u.a}]},t=o.__decorate([Object(i.n)({selector:"app-feeds-medicine-consumption-create",template:o.__importDefault(n("F67/")).default,styles:[o.__importDefault(n("HeGO")).default]})],t)}(),en=function(){function t(t,e,n){this.auth=t,this.datePipe=e,this.feedsandmedicineConsumption=n,this.isLoaded=!1,this.monthdatetoday=new Date,this.page=1,this.limit=10,this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.limit_disabled=0,this.houses=[],this.canAdd=!1}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.validate(),this.getHouseListing()},t.prototype.getHouseListing=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.feedsandmedicineConsumption.getHouselist(this.page,this.limit).then((function(e){console.log("getHouselisting",e),t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.houses.push(e)}))):(t.houses=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),[2]}}))}))},t.prototype.validate=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){return this.feedsandmedicineConsumption.validate().then((function(e){0==e.error?t.canAdd=!0:t.canAdd=!1})).catch((function(t){console.log("e",t)})),[2]}))}))},t.ctorParameters=function(){return[{type:ge},{type:c.d},{type:ue}]},t=o.__decorate([Object(i.n)({selector:"app-feeds-medicine-consumption-listing",template:o.__importDefault(n("6oWD")).default,styles:[o.__importDefault(n("YCJ9")).default]})],t)}(),nn=[{label:"Day",key:"age_day",canSort:!0,isVisible:!0,canToggle:!0},{label:"Age",key:"age_week",canSort:!0,isVisible:!0,canToggle:!0},{label:"Mortality",key:"mortality",canSort:!0,isVisible:!0,canToggle:!0},{label:"Mortality Rate %",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Cull",key:"cull",canSort:!0,isVisible:!0,canToggle:!0},{label:"End Population",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Egg production",key:"egg_count",canSort:!0,isVisible:!0,canToggle:!0},{label:"Production Rate %",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Grams/Bird",key:"feed_consumption",canSort:!0,isVisible:!0,canToggle:!0},{label:"Feeds/Bags",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Recommended Feeds (g)",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Recommended Feeds/Bag",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Medication",key:"",canSort:!1,isVisible:!0,canToggle:!0}],on=function(){function t(t,e,n,o,i,s){this.dialogRef=t,this.data=e,this.feedsandmedicineConsumption=n,this._snackBar=o,this.datePipe=i,this.formBuilder=s,this.item=null,this.action="update",this.modal_title="Update Medicine Consumption",this.modal_primary_button="Save Changes",this.modal_message="Are you sure you want to update medicines?",this.modal_primary_button_class="btn-primary",this.isLoaded=!1,this.medicines=[],this.monthdatetoday=new Date,this.med=[],this.medicineUpdateForm=this.formBuilder.group({daily_house_report_id:["",se.k.compose([se.k.required])],medicines:[]})}return t.prototype.ngOnInit=function(){this.getAllmedicines(),this.medicineUpdateForm.controls.daily_house_report_id.setValue(this.data.item.id)},t.prototype.getAllmedicines=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.feedsandmedicineConsumption.getAllmedicine().then((function(e){if(console.log("getAllmedicinesss",e),t.isLoaded=!0,0==e.error){var n=t.data.item.medicine_ids.split(","),o=t.data.item.medicine_values.split(",");e.data.forEach((function(e){t.medicines.push(e),t.med.push({med_id:e.id,value:0})})),n.forEach((function(e,n){var i=t.medicines.findIndex((function(t){return t.id==e}));t.med[i].value=o[n]}))}else t.medicines=[]})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),console.log("med",this.med),[2]}}))}))},t.prototype.setMedvalue=function(t,e){console.log("eee",t),this.med[e].value=t},t.prototype.submit=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.medicineUpdateForm.controls.medicines.setValue(this.med),[4,this.feedsandmedicineConsumption.updateMeds(this.medicineUpdateForm.value).then((function(e){t.isLoaded=!1,0==e.error&&t.closeModal(e.message)})).catch((function(e){t.isLoaded=!1,console.log("e",e),t._snackBar.open(e,null,{verticalPosition:"top",announcementMessage:e,duration:3e3})}))];case 1:return e.sent(),[2]}}))}))},t.prototype.closeModal=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dialogRef.close(t)];case 1:return e.sent(),[2]}}))}))},t.prototype.checkbox=function(t,e){t.checked||(this.med[e].value=0)},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:ue},{type:ae.a},{type:c.d},{type:se.b}]},t=o.__decorate([Object(i.n)({selector:"app-medicine-consumption-update-modal",template:o.__importDefault(n("pejN")).default,styles:[o.__importDefault(n("4hAz")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),sn=function(){function t(t,e,n,o,i,s){this.dialogRef=t,this.data=e,this.feedsandmedicineConsumption=n,this._snackBar=o,this.datePipe=i,this.formBuilder=s,this.item=null,this.action="update",this.modal_title="Update Feed Consumption",this.modal_primary_button="Save Changes",this.modal_message="Are you sure you want to update feed consumption?",this.modal_primary_button_class="btn-primary",this.isLoaded=!1,this.feed_options=[],this.feed={feed_id:null,feed_consumption:null},this.feedUpdateForm=this.formBuilder.group({daily_house_report_id:["",se.k.compose([se.k.required])],feed:[]})}return t.prototype.ngOnInit=function(){this.getAllFeeds(),this.feedUpdateForm.controls.daily_house_report_id.setValue(this.data.item.id),this.feed={feed_id:this.data.item.feed_id?this.data.item.feed_id:null,feed_consumption:this.data.item.feed_consumption?Number(this.data.item.feed_consumption):0}},t.prototype.getAllFeeds=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.feedsandmedicineConsumption.getAllFeeds().then((function(e){t.isLoaded=!0,0==e.error&&(t.feed_options=e.datas)})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.chooseFeed=function(t){this.feed.feed_id=t.value},t.prototype.setFeedValue=function(t){this.feed.feed_consumption=t},t.prototype.submit=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.feedUpdateForm.controls.feed.setValue(this.feed),[4,this.feedsandmedicineConsumption.updateFeeds(this.feedUpdateForm.value).then((function(e){t.isLoaded=!1,0==e.error&&t.closeModal(e.message)})).catch((function(e){t.isLoaded=!1,console.log("e",e),t._snackBar.open(e,null,{verticalPosition:"top",announcementMessage:e,duration:3e3})}))];case 1:return e.sent(),[2]}}))}))},t.prototype.closeModal=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dialogRef.close(t)];case 1:return e.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:ue},{type:ae.a},{type:c.d},{type:se.b}]},t=o.__decorate([Object(i.n)({selector:"app-feed-consumption-update-modal",template:o.__importDefault(n("tpiK")).default,styles:[o.__importDefault(n("eGkx")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),an=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getTrayList=function(t,e,n,o,i,s){var a=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(r){a.env.getHttpOptions().then((function(l){var c=a.env.getUrl(tt)+"/page/"+t+"/limit/"+e;n&&(c+="/order_by_column/"+n.order_by_column+"/order_by/"+n.order_by),o&&i&&(c+="/from/"+o+"/to/"+i),s&&(c+="?search="+s),a.http.get(c,l).subscribe((function(t){r(t)}),(function(t){r({error:1,message:t})}))}))}))},t.prototype.getTrayRecord=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(et)+"/id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getSackList=function(t,e,n,o,i,s){var a=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(r){a.env.getHttpOptions().then((function(l){var c=a.env.getUrl(nt)+"/page/"+t+"/limit/"+e;n&&(c+="/order_by_column/"+n.order_by_column+"/order_by/"+n.order_by),o&&i&&(c+="/from/"+o+"/to/"+i),s&&(c+="?search="+s),a.http.get(c,l).subscribe((function(t){r(t)}),(function(t){r({error:1,message:t})}))}))}))},t.prototype.getSackRecord=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(ot)+"/id/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.getEggList=function(t,e,n,o,i,s){var a=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(r){a.env.getHttpOptions().then((function(l){var c=a.env.getUrl(_t)+"/page/"+t+"/limit/"+e;n&&(c+="/order_by_column/"+n.order_by_column+"/order_by/"+n.order_by),o&&i&&(c+="/from/"+o+"/to/"+i),s&&(c+="?search="+s),a.http.get(c,l).subscribe((function(t){r(t)}),(function(t){r({error:1,message:t})}))}))}))},t.prototype.getEggRecord=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(yt)+"/date/"+t;e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.prototype.search=function(t){var e=this;return new Promise((function(n){e.env.getHttpOptions().then((function(o){var i=e.env.getUrl(Lt);t&&(i+="?search="+t),e.http.get(i,o).subscribe((function(t){n(t)}),(function(t){n({error:1,message:t})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),rn=function(){function t(t,e,n,o,i){var s=this;this.dialogRef=t,this.data=e,this.datePipe=n,this.inventoryStocksService=o,this.exportAsService=i,this.visible_columns=[],this.ths=nn,this.order={order_by_column:"created_at",order_by:"asc"},this.house_data=[],this.feeds_and_medicine=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"legal"},margin:10,compress:!0,pagebreak:{after:".break-now"}}},this.user_profile=[],this.date_today=new Date,this.isLoaded=!1,this.ths.forEach((function(t,e){s.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.house_id=this.data.house_id,this.order=this.data.order,this.house_data=this.data.house_data,this.feeds_and_medicine=this.data.feeds_and_medicine,this.isLoaded=!0},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Feeds-And-Medicine-Consumption-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:c.d},{type:an},{type:He.b}]},t=o.__decorate([Object(i.n)({selector:"app-report-monthly-record",template:o.__importDefault(n("FaBt")).default,styles:[o.__importDefault(n("xRk5")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),ln=function(){function t(t,e,n,o,i,s,a){var r=this;this.auth=t,this.feedsandmedicineConsumption=e,this._route=n,this.location=o,this.datePipe=i,this.dialog=s,this._snackBar=a,this.isLoaded=!1,this.feeds_and_medicine=[],this.house_data=[],this.feedsmedicine=[],this.limit=10,this.order={order_by_column:"created_at",order_by:"asc"},this.totalItems=0,this.page=1,this.prev_page=0,this.next_page=0,this.totalPages=0,this.ths=nn,this.visible_columns=[],this.limit_disabled=0,this.dateCreatedat=[],this.id=[],this.contentEditable=!1,this.formdata=[],this.datetoday=new Date,this.isToday=!1,this.ths.forEach((function(t,e){r.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=this;this.auth.validateUserRole(),this._route.params.subscribe((function(e){console.log("param",e),t.house_id=e.house_id,t.getFeedsandmedicineconsumption()})),this.d=this.datetoday.setDate(this.datetoday.getDate()+1)},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.feeds_and_medicine=[],this.totalItems=0,this.totalPages=0,[4,this.getFeedsandmedicineconsumption()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoaded=!1,this.page=t,this.feeds_and_medicine=[],this.totalItems=0,this.totalPages=0,[4,this.getFeedsandmedicineconsumption()];case 1:return e.sent(),[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.feeds_and_medicine=[],this.totalItems=0,this.totalPages=0,[4,this.getFeedsandmedicineconsumption()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.getFeedsandmedicineconsumption=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.feedsandmedicineConsumption.getList(this.order,this.house_id).then((function(e){console.log("feedsandmedicineConsumption",e),t.isLoaded=!0,0==e.error?(t.totalItems<10&&(t.limit_disabled=t.totalItems),e.data.forEach((function(e){t.feeds_and_medicine.push(e),t.date=new Date,t.date.setDate(t.date.getDate()+1),t.dateCreatedat=t.datePipe.transform(new Date(e.created_at),"yyyy-MM-dd"),t.dateToday=t.datePipe.transform(new Date(t.date),"yyyy-MM-dd"),t.dateToday>t.dateCreatedat&&(t.isToday=!0)})),t.house_data=e.house_details,console.log("j feeds_and_medicine",t.feeds_and_medicine)):(t.feeds_and_medicine=[],t.totalItems=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){return console.log(t),this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),console.log("new ths",this.ths),[2]}))}))},t.prototype.goBack=function(){this.location.back()},t.prototype.onRowEnter=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n=this;return o.__generator(this,(function(o){return t.preventDefault(),this.formdata={feed_id:e,feeds_bags:t.target.innerHTML},13===t.which&&this.dialog.open(he,{width:"400px",data:{item:this.formdata,action:"feed_add"}}).afterClosed().subscribe((function(t){t&&(n.reloadData(),window.getSelection().removeAllRanges(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))})),[2]}))}))},t.prototype.updateMed=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){return console.log("house_data",this.house_data),console.log("daily_house_report",this.feeds_and_medicine),[2]}))}))},t.prototype.reloadData=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.feeds_and_medicine=[],[4,this.getFeedsandmedicineconsumption()];case 1:return t.sent(),[2]}}))}))},t.prototype.openModal=function(t,e){var n=this;this.datePipe.transform(new Date(this.d),"yyyy-MM-dd")>this.datePipe.transform(new Date(t.created_at),"yyyy-MM-dd")||("feed"==e?this.dialog.open(sn,{width:"400px",data:{item:t,action:"feed_update"}}).afterClosed().subscribe((function(t){t&&(n.reloadData(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))})):this.dialog.open(on,{width:"400px",data:{item:t,action:"medicine_update"}}).afterClosed().subscribe((function(t){t&&(n.reloadData(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))})))},t.prototype.openPdf=function(){this.dialog.open(rn,{panelClass:"scroll",data:{visible_columns:this.visible_columns,ths:this.ths,house_id:this.house_id,order:this.order,house_data:this.house_data,feeds_and_medicine:this.feeds_and_medicine}}).afterClosed().subscribe((function(t){}))},t.prototype.exportToCsv=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e,n=this;return o.__generator(this,(function(o){return t=[],this.feeds_and_medicine.forEach((function(e){var o=e.age_week>1?e.age_week+" weeks, ":e.age_week+" week, ";o+=e.age_day>1?e.age_day+" days":e.age_day+" day";var i="";e.medicine_name&&e.medicine_name.forEach((function(t,n){i+=t.medicine+" ("+t.medicine_value+" "+t.medicine_unit.unit+")",i+=n<e.medicine_name.length-1?", ":""})),t.push({Day:n.datePipe.transform(new Date(e.created_at),"yyyy-MM-dd"),Age:o,Mortality:e.mortality,"Mortality Rate %":e.mortality_rate+" %",Cull:e.cull,"End Population":e.end_bird_population,"Egg Production":e.real_egg_count,"Production Rate %":e.production_rate+" %","Grams/Bird":e.feed_info?e.feed_info.feed:" ("+e.feed_consumption+" g)","Feeds/Bags":e.feeds?e.feeds.string:"","Recommended Feeds (g)":e.feed_info?e.feed_info.feed:" ("+e.rec_feed_consumption+" g)","Recommended Feeds/Bags":e.req_feeds?e.req_feeds.string:"",Medication:i})})),e={fieldSeparator:",",quoteStrings:'"',decimalSeparator:".",showLabels:!0,showTitle:!0,title:"Feeds-And-Medicine-Consumption-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),useTextFile:!1,useBom:!0,useKeysAsHeaders:!0,filename:"Feeds-And-Medicine-Consumption-"+this.datePipe.transform(new Date,"yyyy-MM-dd")},new ze.ExportToCsv(e).generateCsv(t),[2]}))}))},t.ctorParameters=function(){return[{type:ge},{type:ue},{type:u.a},{type:c.g},{type:c.d},{type:g.b},{type:ae.a}]},t=o.__decorate([Object(i.n)({selector:"app-feeds-medicine-consumption-view",template:o.__importDefault(n("e6vJ")).default,styles:[o.__importDefault(n("7fJn")).default]})],t)}(),cn=function(){function t(t,e,n,o,i){this.auth=t,this.dialog=e,this._snackBar=n,this.formBuilder=o,this.location=i,this.max_date=new Date,this.min_date=new Date,this.min_date.setDate(this.min_date.getDate()+1),this.feedForm=this.formBuilder.group({id:[null],feeds:["",se.k.compose([se.k.required])],kg_per_bag:["",se.k.compose([se.k.required,se.k.min(.01),se.k.max(9999999999)])],pieces:["",se.k.compose([se.k.required,se.k.min(1)])],converted:[""],delivery_date:["",se.k.compose([se.k.required])],unit_price:["",se.k.compose([se.k.required,se.k.min(.01)])],expiration_date:["",se.k.compose([se.k.required])],remarks:["",se.k.compose([se.k.maxLength(250)])]})}return t.prototype.ngOnInit=function(){this.auth.validateUserRole()},t.prototype.convertWeight=function(){var t=1e3*Number(this.feedForm.controls.kg_per_bag.value);this.feedForm.controls.converted.setValue(t)},t.prototype.openModal=function(t,e){var n=this;console.log(t),console.log(e),this.dialog.open(he,{width:"400px",data:{item:t||null,action:e}}).afterClosed().subscribe((function(t){t&&(n.location.back(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))},t.prototype.goBack=function(t,e){var n=this;this.dialog.open(he,{width:"400px",data:{item:null,action:t,page:e}}).afterClosed().subscribe((function(t){t&&n.location.back()}))},t.ctorParameters=function(){return[{type:ge},{type:g.b},{type:ae.a},{type:se.b},{type:c.g}]},t=o.__decorate([Object(i.n)({selector:"app-feeds-create",template:o.__importDefault(n("ZeXu")).default,styles:[o.__importDefault(n("QSWX")).default]})],t)}(),dn=[{label:"Feed Name",key:"feed",canSort:!0,isVisible:!0,canToggle:!0},{label:"Net weight (kg)",key:"kg_per_bag",canSort:!0,isVisible:!0,canToggle:!0},{label:"Converted (g)",key:"kg_per_bag",canSort:!0,isVisible:!0,canToggle:!0},{label:"No. of orders (pcs)",key:"pieces",canSort:!0,isVisible:!0,canToggle:!0},{label:"Consumed value (g)",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Remaining value (g)",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Last updated",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Delivery Date",key:"delivery_date",canSort:!0,isVisible:!0,canToggle:!0},{label:"Unit Price",key:"unit_price",canSort:!0,isVisible:!0,canToggle:!0},{label:"Expiration Date",key:"expiration_date",canSort:!0,isVisible:!0,canToggle:!0},{label:"Remarks",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],un=function(){function t(t,e,n,o){var i=this;this.auth=t,this.datePipe=e,this.feedsMedicineManagementService=n,this.generalService=o,this.isLoaded=!1,this.ths=dn,this.limits=Me,this.visible_columns=[],this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"feed",order_by:"asc"},this.search="",this.show_filter=!1,this.activity=[],this.showtimeago=!0,this.current_date=new Date,this.ths.forEach((function(t,e){i.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getList(),this.getActivity("feeds_listing")},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.feedsMedicineManagementService.getFeedsList(this.page,this.limit,this.delivery_date,this.feed,this.expiration_date,this.order,this.search).then((function(e){console.log("res",e),t.isLoaded=!0,0==e.error?(t.totalItems=e.data.feed_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){e.converted=1e3*Number(e.kg_per_bag),e.isExpired=t.datePipe.transform(new Date(t.current_date),"yyyy-MM-dd")>=t.datePipe.transform(new Date(e.expiration_date),"yyyy-MM-dd"),t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoaded=!1,this.limit=t.target.value,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return e.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return e.sent(),[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.chooseDeliveryDate=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.delivery_date=this.datePipe.transform(new Date(t.value),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return e.sent(),[2]}}))}))},t.prototype.chooseExpirationDate=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.expiration_date=this.datePipe.transform(new Date(t.value),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return e.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,this.delivery_date=null,this.expiration_date=null,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:ge},{type:c.d},{type:pe},{type:Fe}]},t=o.__decorate([Object(i.n)({selector:"app-feeds-listing",template:o.__importDefault(n("erh8")).default,styles:[o.__importDefault(n("cgvz")).default]})],t)}(),mn=function(){function t(t,e,n,o,i,s,a){this.auth=t,this.dialog=e,this._snackBar=n,this._route=o,this.feedsMedicineManagementService=i,this.formBuilder=s,this.location=a,this.max_date=new Date,this.min_date=new Date,this.min_date.setDate(this.min_date.getDate()+1),this.feedForm=this.formBuilder.group({id:[null],feeds:["",se.k.compose([se.k.required])],kg_per_bag:["",se.k.compose([se.k.required,se.k.min(.01),se.k.max(9999999999)])],pieces:["",se.k.compose([se.k.required,se.k.min(1)])],converted:[""],delivery_date:["",se.k.compose([se.k.required])],unit_price:["",se.k.compose([se.k.required,se.k.min(.01)])],expiration_date:["",se.k.compose([se.k.required])],remarks:["",se.k.compose([se.k.maxLength(250)])]})}return t.prototype.ngOnInit=function(){var t=this;this.auth.validateUserRole(),this._route.params.subscribe((function(e){t.getRecord(e.id)}))},t.prototype.getRecord=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.feedsMedicineManagementService.getFeedRecord(t).then((function(t){console.log("res",t),0==t.error&&(e.feedForm.controls.id.setValue(t.data.id),e.feedForm.controls.feeds.setValue(t.data.feed),e.feedForm.controls.kg_per_bag.setValue(t.data.kg_per_bag),e.feedForm.controls.pieces.setValue(t.data.pieces),e.feedForm.controls.converted.setValue(1e3*Number(t.data.kg_per_bag)),e.feedForm.controls.delivery_date.setValue(t.data.delivery_date),e.feedForm.controls.unit_price.setValue(t.data.unit_price),e.feedForm.controls.expiration_date.setValue(t.data.expiration_date),e.feedForm.controls.remarks.setValue(t.data.remarks?t.data.remarks:""))})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.prototype.openModal=function(t,e){var n=this;console.log(t),console.log(e),this.dialog.open(he,{width:"400px",data:{item:t||null,action:e}}).afterClosed().subscribe((function(t){t&&(n.location.back(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))},t.prototype.goBack=function(t,e){var n=this;this.dialog.open(he,{width:"400px",data:{item:null,action:t,page:e}}).afterClosed().subscribe((function(t){t&&n.location.back()}))},t.prototype.convertWeight=function(){var t=1e3*Number(this.feedForm.controls.kg_per_bag.value);this.feedForm.controls.converted.setValue(t)},t.ctorParameters=function(){return[{type:ge},{type:g.b},{type:ae.a},{type:u.a},{type:pe},{type:se.b},{type:c.g}]},t=o.__decorate([Object(i.n)({selector:"app-feeds-update",template:o.__importDefault(n("W5GM")).default,styles:[o.__importDefault(n("VTOx")).default]})],t)}(),pn=function(){function t(t,e,n,o,i){this.dialogRef=t,this.data=e,this.formBuilder=n,this.feedsMedicineManagementService=o,this._snackBar=i,this.item=[],this.action="create",this.modal_title="Add new medicine unit",this.modal_primary_button="Add Medicine Unit",this.modal_message="Are you sure you want to remove this medicine unit?",this.isLoading=!1,this.medicineUnitForm=this.formBuilder.group({id:[null],unit:["",se.k.compose([se.k.required])]})}return t.prototype.ngOnInit=function(){console.log("data",this.data),this.item=this.data.item,this.action=this.data.action,this.item&&(this.modal_title="Edit medicine unit details",this.modal_primary_button="Save Changes",this.action&&"delete"==this.action&&(this.modal_primary_button="Yes, remove",this.modal_title="Remove medicine unit"),this.medicineUnitForm.controls.id.setValue(this.item.id),this.medicineUnitForm.controls.unit.setValue(this.item.unit))},t.prototype.submit=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoading=!0,"delete"!=this.action?[3,2]:(this.modal_primary_button="Removing...",[4,this.feedsMedicineManagementService.removeMedicineUnit(this.medicineUnitForm.value).then((function(e){t.isLoading=!1,0==e.error?t.closeModal(e.message):(t.modal_primary_button="Yes, remove",t._snackBar.open(e.message,null,{verticalPosition:"top",announcementMessage:e.message,duration:3e3}))})).catch((function(e){t.isLoading=!1,console.log("e",e),t._snackBar.open(e,null,{verticalPosition:"top",announcementMessage:e,duration:3e3})}))]);case 1:return e.sent(),[3,4];case 2:return this.modal_primary_button="create"==this.action?"Saving...":"Updating...",[4,this.feedsMedicineManagementService.saveMedicineUnit(this.medicineUnitForm.value).then((function(e){t.isLoading=!1,0==e.error?t.closeModal(e):(t.modal_primary_button="create"==t.action?"Add Medicine Unit":"Save Changes",t._snackBar.open(e.message,null,{verticalPosition:"top",announcementMessage:e.message,duration:3e3}))})).catch((function(e){t.isLoading=!1,console.log("e",e),t._snackBar.open(e,null,{verticalPosition:"top",announcementMessage:e,duration:3e3})}))];case 3:e.sent(),e.label=4;case 4:return[2]}}))}))},t.prototype.closeModal=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dialogRef.close(t)];case 1:return e.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:se.b},{type:pe},{type:ae.a}]},t=o.__decorate([Object(i.n)({selector:"app-medicine-unit-modal",template:o.__importDefault(n("TQ/h")).default,styles:[o.__importDefault(n("+A87")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),hn=function(){function t(t,e,n,o,i,s){this.auth=t,this.feedsMedicineManagementService=e,this.dialog=n,this._snackBar=o,this.formBuilder=i,this.location=s,this.max_date=new Date,this.min_date=new Date,this.units=[],this.min_date.setDate(this.min_date.getDate()+1),this.medicineForm=this.formBuilder.group({id:[null],medicine:["",se.k.compose([se.k.required])],unit_id:[null,se.k.compose([se.k.required])],net_weight:["",se.k.compose([se.k.required,se.k.min(.01),se.k.max(9999999999)])],pieces:["",se.k.compose([se.k.required,se.k.min(1)])],delivery_date:["",se.k.compose([se.k.required])],unit_price:["",se.k.compose([se.k.required,se.k.min(.01)])],expiration_date:["",se.k.compose([se.k.required])],remarks:["",se.k.compose([se.k.maxLength(250)])]})}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getMedicineUnits()},t.prototype.getMedicineUnits=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.feedsMedicineManagementService.getMedicineUnits().then((function(e){console.log("res",e),0==e.error&&(t.units=e.data)})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.openModal=function(t,e){var n=this;(console.log("medicineito",t),console.log(e),t)?this.dialog.open(he,{width:"400px",data:{item:t||null,action:e}}).afterClosed().subscribe((function(t){t&&(n.location.back(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))})):this.dialog.open(pn,{width:"400px",data:{item:t||null,action:e||"create"}}).afterClosed().subscribe((function(t){t&&(n.getMedicineUnits(),n._snackBar.open(t.message,"Okay",{verticalPosition:"top",announcementMessage:t.message,duration:3e3}),n.medicineForm.controls.unit_id.setValue(t.data))}))},t.prototype.goBack=function(t,e){var n=this;this.dialog.open(he,{width:"400px",data:{item:null,action:t,page:e}}).afterClosed().subscribe((function(t){t&&n.location.back()}))},t.ctorParameters=function(){return[{type:ge},{type:pe},{type:g.b},{type:ae.a},{type:se.b},{type:c.g}]},t=o.__decorate([Object(i.n)({selector:"app-medicine-create",template:o.__importDefault(n("HZQ3")).default,styles:[o.__importDefault(n("5zYH")).default]})],t)}(),gn=[{label:"Medicine Name",key:"medicine",canSort:!0,isVisible:!0,canToggle:!0},{label:"Unit",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Net Weight",key:"net_weight",canSort:!0,isVisible:!0,canToggle:!0},{label:"No. of orders (pcs)",key:"pieces",canSort:!0,isVisible:!0,canToggle:!0},{label:"Consumed value",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Remaining value",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Last updated",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Delivery Date",key:"delivery_date",canSort:!0,isVisible:!0,canToggle:!0},{label:"Unit Price",key:"unit_price",canSort:!0,isVisible:!0,canToggle:!0},{label:"Expiration Date",key:"expiration_date",canSort:!0,isVisible:!0,canToggle:!0},{label:"Remarks",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],fn=function(){function t(t,e,n,o){var i=this;this.auth=t,this.datePipe=e,this.feedsMedicineManagementService=n,this.generalService=o,this.isLoaded=!1,this.ths=gn,this.limits=Me,this.visible_columns=[],this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"medicine",order_by:"asc"},this.search="",this.show_filter=!1,this.activity=[],this.showtimeago=!0,this.current_date=new Date,this.ths.forEach((function(t,e){i.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getList(),this.getActivity("medicine_listing")},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.feedsMedicineManagementService.getMedicineList(this.page,this.limit,this.delivery_date,this.medicine,this.expiration_date,this.order,this.search).then((function(e){console.log("res",e),t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){e.isExpired=t.datePipe.transform(new Date(t.current_date),"yyyy-MM-dd")>=t.datePipe.transform(new Date(e.expiration_date),"yyyy-MM-dd"),t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoaded=!1,this.limit=t.target.value,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return e.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return e.sent(),[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.chooseDeliveryDate=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.delivery_date=this.datePipe.transform(new Date(t.value),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return e.sent(),[2]}}))}))},t.prototype.chooseExpirationDate=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.expiration_date=this.datePipe.transform(new Date(t.value),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return e.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,this.delivery_date=null,this.expiration_date=null,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:ge},{type:c.d},{type:pe},{type:Fe}]},t=o.__decorate([Object(i.n)({selector:"app-medicine-listing",template:o.__importDefault(n("duk+")).default,styles:[o.__importDefault(n("/a1x")).default]})],t)}(),bn=function(){function t(t,e,n,o,i,s,a){this.auth=t,this.dialog=e,this._snackBar=n,this._route=o,this.feedsMedicineManagementService=i,this.formBuilder=s,this.location=a,this.max_date=new Date,this.min_date=new Date,this.units=[],this.item=[],this.min_date.setDate(this.min_date.getDate()+1),this.medicineForm=this.formBuilder.group({id:[null],medicine:["",se.k.compose([se.k.required])],unit_id:[null,se.k.compose([se.k.required])],net_weight:["",se.k.compose([se.k.required,se.k.min(.01),se.k.max(9999999999)])],pieces:["",se.k.compose([se.k.required,se.k.min(1)])],delivery_date:["",se.k.compose([se.k.required])],unit_price:["",se.k.compose([se.k.required,se.k.min(.01)])],expiration_date:["",se.k.compose([se.k.required])],remarks:["",se.k.compose([se.k.maxLength(250)])]})}return t.prototype.ngOnInit=function(){var t=this;this.auth.validateUserRole(),this._route.params.subscribe((function(e){t.getRecord(e.id),t.getMedicineUnits()}))},t.prototype.getRecord=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.feedsMedicineManagementService.getMedicineRecord(t).then((function(t){console.log("res",t),0==t.error&&(e.medicineForm.controls.id.setValue(t.data.id),e.medicineForm.controls.medicine.setValue(t.data.medicine),e.medicineForm.controls.unit_id.setValue(t.data.unit_id),e.medicineForm.controls.net_weight.setValue(t.data.net_weight),e.medicineForm.controls.pieces.setValue(1e3*Number(t.data.pieces)),e.medicineForm.controls.delivery_date.setValue(t.data.delivery_date),e.medicineForm.controls.unit_price.setValue(t.data.unit_price),e.medicineForm.controls.expiration_date.setValue(t.data.expiration_date),e.medicineForm.controls.remarks.setValue(t.data.remarks?t.data.remarks:""),e.item=t.data)})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.prototype.getMedicineUnits=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.feedsMedicineManagementService.getMedicineUnits().then((function(e){console.log("res",e),0==e.error&&(t.units=e.data)})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.openModal=function(t,e){var n=this;(console.log(t),console.log(e),t)?this.dialog.open(he,{width:"400px",data:{item:t||null,action:e}}).afterClosed().subscribe((function(t){t&&(n.location.back(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))})):this.dialog.open(pn,{width:"400px",data:{item:t||null,action:e||"create"}}).afterClosed().subscribe((function(t){t&&(n.getMedicineUnits(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))},t.prototype.goBack=function(t,e){var n=this;this.dialog.open(he,{width:"400px",data:{item:null,action:t,page:e}}).afterClosed().subscribe((function(t){t&&n.location.back()}))},t.ctorParameters=function(){return[{type:ge},{type:g.b},{type:ae.a},{type:u.a},{type:pe},{type:se.b},{type:c.g}]},t=o.__decorate([Object(i.n)({selector:"app-medicine-update",template:o.__importDefault(n("WO/7")).default,styles:[o.__importDefault(n("CEfV")).default]})],t)}(),vn=[{label:"House/Building no.",key:"house_name",canSort:!0,isVisible:!0,canToggle:!0},{label:"Maximum Capacity",key:"capacity",canSort:!0,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],_n=function(){function t(t,e,n,o,i,s){this.dialogRef=t,this.data=e,this.events=n,this.formBuilder=o,this.houseService=i,this._snackBar=s,this.item=null,this.action="create",this.modal_title="Add new house/building",this.modal_primary_button="Add House/Building",this.modal_message="Are you sure you want to remove this house/building?",this.modal_primary_button_class="btn-primary",this.isLoading=!1,this.houseForm=this.formBuilder.group({id:[null],house_name:["",se.k.compose([se.k.required,se.k.pattern("^[0-9]+$")])],capacity:["",se.k.compose([se.k.min(1),se.k.required])]})}return t.prototype.ngOnInit=function(){if(console.log("data",this.data),this.item=this.data.item,this.action=this.data.action,console.log("candelete",this.item),this.item){if(this.modal_title="Edit house/building details",this.modal_primary_button="Save Changes",this.item.beginning){var t=Number(this.item.beginning.bird_count)+Number(this.item.beginning.cull)+Number(this.item.beginning.mortality);this.houseForm.controls.capacity.clearValidators(),this.houseForm.controls.capacity.setValidators([se.k.required,se.k.min(t)])}this.action&&"delete"==this.action&&(this.item&&this.item.canDelete?(this.modal_primary_button="Yes, remove",this.modal_primary_button_class="btn-danger",this.modal_title="Remove house/building"):(this.modal_primary_button="Okay",this.modal_primary_button_class="btn-primary",this.modal_title="Remove house/building",this.modal_message="You can not delete this house because it has an existing record.")),this.houseForm.controls.id.setValue(this.item.id),this.houseForm.controls.house_name.setValue(this.item.house_name),this.houseForm.controls.capacity.setValue(this.item.capacity)}else this.modal_primary_button="Save",this.modal_primary_button_class="btn-primary",this.modal_title="Add House/Building"},t.prototype.submit=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return console.log(this.houseForm.value),this.isLoading=!0,"delete"!=this.action?[3,4]:this.item&&this.item.canDelete?(this.modal_primary_button="Removing...",[4,this.houseService.remove(this.houseForm.value).then((function(e){t.isLoading=!1,0==e.error?(t.events.publish("sidebar_house_refresh",!0),t.closeModal(e.message)):(t.modal_primary_button="Yes, remove",t._snackBar.open(e.message,null,{verticalPosition:"top",announcementMessage:e.message,duration:3e3}))})).catch((function(e){t.isLoading=!1,console.log("e",e),t._snackBar.open(e,null,{verticalPosition:"top",announcementMessage:e,duration:3e3})}))]):[3,2];case 1:return e.sent(),[3,3];case 2:this.closeModal(),e.label=3;case 3:return[3,6];case 4:return this.modal_primary_button="create"==this.action?"Saving...":"Updating...",[4,this.houseService.save(this.houseForm.value).then((function(e){t.isLoading=!1,0==e.error?(t.events.publish("sidebar_house_refresh",!0),t.closeModal(e.message)):(t.modal_primary_button="create"==t.action?"Add House/Building":"Save Changes",t._snackBar.open(e.message,null,{verticalPosition:"top",announcementMessage:e.message,duration:3e3}))})).catch((function(e){t.isLoading=!1,console.log("e",e),t._snackBar.open(e,null,{verticalPosition:"top",announcementMessage:e,duration:3e3})}))];case 5:e.sent(),e.label=6;case 6:return[2]}}))}))},t.prototype.closeModal=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dialogRef.close(t)];case 1:return e.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:d.b},{type:se.b},{type:oe},{type:ae.a}]},t=o.__decorate([Object(i.n)({selector:"app-house-modal",template:o.__importDefault(n("LbD4")).default,styles:[o.__importDefault(n("Izxn")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),yn=function(){function t(t,e,n,o,i){var s=this;this.auth=t,this.dialog=e,this._snackBar=n,this.generalService=o,this.houseService=i,this.isLoaded=!1,this.ths=vn,this.limits=Me,this.visible_columns=[],this.items=[],this.totalItems=0,this.page=1,this.prev_page=0,this.next_page=0,this.totalPages=0,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"house_name",order_by:"asc"},this.search="",this.activity=[],this.showtimeago=!0,this.ths.forEach((function(t,e){s.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getListing(),this.getActivity("house_listing")},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return e.sent(),[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.getListing=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.houseService.getList(this.page,this.limit,this.order,this.search).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.reloadData=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.prototype.openModal=function(t,e){var n=this;console.log("item: ",t),this.dialog.open(_n,{width:"400px",data:{item:t||null,action:e||"create"}}).afterClosed().subscribe((function(t){t&&(n.reloadData(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))},t.ctorParameters=function(){return[{type:ge},{type:g.b},{type:ae.a},{type:Fe},{type:oe}]},t=o.__decorate([Object(i.n)({selector:"app-house-listing",template:o.__importDefault(n("oD5Q")).default,styles:[o.__importDefault(n("Qxmw")).default]})],t)}(),xn=[{label:"Dates",key:"dates",canSort:!0,isVisible:!0,canToggle:!0},{label:"Beginning no. of stocks",key:"beginning_no",canSort:!0,isVisible:!0,canToggle:!0},{label:"Total Harvested",key:"total_harvested",canSort:!0,isVisible:!0,canToggle:!0},{label:"No. of Waste/Sales",key:"sales",canSort:!0,isVisible:!0,canToggle:!0},{label:"Total Remaining stocks",key:"total_remaining",canSort:!0,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],wn=function(){function t(t,e,n,o,i){var s=this;this.dialogRef=t,this.data=e,this.datePipe=n,this.inventoryStocksService=o,this.exportAsService=i,this.isLoaded=!1,this.ths=xn,this.visible_columns=[],this.items=[],this.page=1,this.limit=10,this.order={order_by_column:"created_at",order_by:"asc"},this.search="",this.from=null,this.to=null,this.created_at=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"A4"},margin:10,compress:!0,pagebreak:{after:".break-now"},showall:!0,pdfCallbackFn:this.pdfCallbackFn}},this.user_profile=[],this.date_today=new Date,this.ths.forEach((function(t,e){s.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.getListing()},t.prototype.getListing=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.inventoryStocksService.getEggList(this.page,this.limit,this.order,this.from,this.to,this.search).then((function(e){t.isLoaded=!0,0==e.error?e.datas.forEach((function(e){e.date=t.datePipe.transform(new Date(e.created_at),"yyyy-MM-dd"),t.items.push(e)})):t.items=[]})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Fresh-Eggs-Inventory-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.pdfCallbackFn=function(t){for(var e=t.internal.getNumberOfPages(),n=1;n<=e;n++)t.setPage(n),t.setFontSize(12),t.text(n+" of "+e,t.internal.pageSize.getWidth()-25,t.internal.pageSize.getHeight()-10)},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:c.d},{type:an},{type:He.b}]},t=o.__decorate([Object(i.n)({selector:"app-report-fresh-eggs",template:o.__importDefault(n("Z+Vu")).default,styles:[o.__importDefault(n("vw11")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),kn=function(){function t(t,e,n,o){var i=this;this.dialog=t,this.datePipe=e,this.generalService=n,this.inventoryStocksService=o,this.isLoaded=!1,this.show_filter=!1,this.ths=xn,this.limits=Me,this.visible_columns=[],this.items=[],this.totalItems=0,this.page=1,this.prev_page=0,this.next_page=0,this.totalPages=0,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"created_at",order_by:"asc"},this.search="",this.from=null,this.to=null,this.created_at=[],this.activity=[],this.showtimeago=!0,this.ths.forEach((function(t,e){i.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){this.getListing(),this.getActivity("fresh_egg_inventory_listing")},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return e.sent(),[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.getListing=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.inventoryStocksService.getEggList(this.page,this.limit,this.order,this.from,this.to,this.search).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){e.date=t.datePipe.transform(new Date(e.created_at),"yyyy-MM-dd"),t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.reloadData=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=null,this.to=null,this.created_at=[],this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.prototype.openModal=function(){this.dialog.open(wn,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,order:this.order,search:this.search,visible_columns:this.visible_columns,ths:this.ths}}).afterClosed().subscribe((function(t){}))},t.prototype.exportToCsv=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return t=[],[4,this.inventoryStocksService.getEggList(1,this.totalItems,this.order,this.from,this.to,this.search).then((function(n){if(0==n.error){n.datas.forEach((function(n){t.push({Dates:e.datePipe.transform(new Date(n.created_at),"yyyy-MM-dd"),"Beginning no. of stocks":n.beginning_stocks,"Total Harvested":n.total_harvested,"No. of Waste/Sales":n.waste_sales,"Total Remaining Stocks":n.total_remaining_stocks})}));var o={fieldSeparator:",",quoteStrings:'"',decimalSeparator:".",showLabels:!0,showTitle:!0,title:"Fresh-Eggs-Inventory-"+e.datePipe.transform(new Date,"yyyy-MM-dd"),useTextFile:!1,useBom:!0,useKeysAsHeaders:!0,filename:"Fresh-Eggs-Inventory-"+e.datePipe.transform(new Date,"yyyy-MM-dd")};new ze.ExportToCsv(o).generateCsv(t)}})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.b},{type:c.d},{type:Fe},{type:an}]},t=o.__decorate([Object(i.n)({selector:"app-fresh-eggs-listing",template:o.__importDefault(n("SIyb")).default,styles:[o.__importDefault(n("xpm3")).default]})],t)}(),In=[{label:"Item Details",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Status",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Beginning no.",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Harvested",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Sales",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Remaining Stocks",key:"",canSort:!1,isVisible:!0,canToggle:!0}],Cn=function(){function t(t,e,n,o,i){this.dialogRef=t,this.data=e,this.datePipe=n,this.inventoryStocksService=o,this.exportAsService=i,this.isLoaded=!1,this.item=[],this.items=[],this.ths=[],this.visible_columns=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"legal"},margin:10,compress:!0,pagebreak:{after:".break-now"}}},this.user_profile=[],this.date_today=new Date}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.item=this.data.item,this.items=this.data.items,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.isLoaded=!0},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Fresh-Eggs-Inventory-View-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:c.d},{type:an},{type:He.b}]},t=o.__decorate([Object(i.n)({selector:"app-report-fresh-eggs-view",template:o.__importDefault(n("eAV1")).default,styles:[o.__importDefault(n("CnOH")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),Pn=function(){function t(t,e,n,o,i,s){var a=this;this.dialog=t,this._route=e,this.generalService=n,this.inventoryStocksService=o,this.location=i,this.datePipe=s,this.isLoaded=!1,this.ths=In,this.limits=Me,this.visible_columns=[],this.date=new Date,this.dateToday=new Date,this.items=[],this.item=[],this.totalItems=0,this.page=1,this.prev_page=0,this.next_page=0,this.totalPages=0,this.limit=10,this.order={order_by_column:"id",order_by:"asc"},this.activity=[],this.showtimeago=!0,this.ths.forEach((function(t,e){a.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=this;this._route.params.subscribe((function(e){t.date=e.date,t.getRecord(),t.getActivity("fresh_egg_inventory_view",t.date)}))},t.prototype.getRecord=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.inventoryStocksService.getEggRecord(this.date).then((function(e){console.log("freshEggsinventory",e),t.isLoaded=!0,0==e.error?(t.item=e.data,e.datas.forEach((function(e){e.remaining=Number(e.beginning)+Number(e.harvested)-Number(e.sales),t.items.push(e)}))):t.item=[]})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n=this;return o.__generator(this,(function(o){switch(o.label){case 0:return[4,this.generalService.getActivity(t,null,null,null,null,e).then((function(t){0==t.error?(n.showtimeago=!0,n.activity=t.data):n.showtimeago=!1})).catch((function(t){console.log(t),n.showtimeago=!1}))];case 1:return o.sent(),[2]}}))}))},t.prototype.openModal=function(){this.dialog.open(Cn,{panelClass:"scroll",data:{item:this.item,items:this.items,ths:this.ths,visible_columns:this.visible_columns}}).afterClosed().subscribe((function(t){}))},t.prototype.goBack=function(){this.location.back()},t.prototype.exportToCsv=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e;return o.__generator(this,(function(n){return t=[],this.items.forEach((function(e){t.push({"Item Details":e.egg_type.type,Status:e.remaining>0?"Available":"Out of Stock","Beginning no.":e.beginning,Harvested:e.harvested,Sales:e.sales,"Remaining Stocks":e.remaining})})),e={fieldSeparator:",",quoteStrings:'"',decimalSeparator:".",showLabels:!0,showTitle:!0,title:"Fresh-Eggs-Inventory-View-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),useTextFile:!1,useBom:!0,useKeysAsHeaders:!0,filename:"Fresh-Eggs-Inventory-View-"+this.datePipe.transform(new Date,"yyyy-MM-dd")},new ze.ExportToCsv(e).generateCsv(t),[2]}))}))},t.ctorParameters=function(){return[{type:g.b},{type:u.a},{type:Fe},{type:an},{type:c.g},{type:c.d}]},t=o.__decorate([Object(i.n)({selector:"app-fresh-eggs-view",template:o.__importDefault(n("NWxB")).default,styles:[o.__importDefault(n("uehR")).default]})],t)}(),Mn=[{label:"Dates",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Beginning no. of stocks (pcs)",key:"",canSort:!0,isVisible:!0,canToggle:!0},{label:"No. of In/from Houses (pcs)",key:"",canSort:!0,isVisible:!0,canToggle:!0},{label:"No. of Out/Sales (pcs)",key:"",canSort:!0,isVisible:!0,canToggle:!0},{label:"Total Remaining stocks (pcs)",key:"last_ending",canSort:!0,isVisible:!0,canToggle:!0},{label:"Warehouseman",key:"",canSort:!0,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],Fn=function(){function t(t,e,n,o,i){var s=this;this.dialogRef=t,this.data=e,this.datePipe=n,this.inventoryStocksService=o,this.exportAsService=i,this.isLoaded=!1,this.ths=Mn,this.visible_columns=[],this.items=[],this.page=1,this.limit=10,this.order={order_by_column:"created_at",order_by:"asc"},this.search="",this.from=null,this.to=null,this.created_at=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"A4"},margin:10,compress:!0,pagebreak:{after:".break-now"},showall:!0,pdfCallbackFn:this.pdfCallbackFn}},this.user_profile=[],this.date_today=new Date,this.ths.forEach((function(t,e){s.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.getListing()},t.prototype.getListing=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.inventoryStocksService.getSackList(this.page,this.limit,this.order,this.from,this.to,this.search).then((function(e){t.isLoaded=!0,0==e.error?e.datas.forEach((function(e){e.date=t.datePipe.transform(new Date(e.created_at),"yyyy-MM-dd"),t.items.push(e)})):t.items=[]})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Sacks-Inventory-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.pdfCallbackFn=function(t){for(var e=t.internal.getNumberOfPages(),n=1;n<=e;n++)t.setPage(n),t.setFontSize(12),t.text(n+" of "+e,t.internal.pageSize.getWidth()-25,t.internal.pageSize.getHeight()-10)},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:c.d},{type:an},{type:He.b}]},t=o.__decorate([Object(i.n)({selector:"app-report-sacks",template:o.__importDefault(n("5Zcm")).default,styles:[o.__importDefault(n("yMES")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),Ln=function(){function t(t,e,n,o){var i=this;this.dialog=t,this.datePipe=e,this.generalService=n,this.inventoryStocksService=o,this.isLoaded=!1,this.show_filter=!1,this.ths=Mn,this.limits=Me,this.visible_columns=[],this.items=[],this.totalItems=0,this.page=1,this.prev_page=0,this.next_page=0,this.totalPages=0,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"created_at",order_by:"desc"},this.search="",this.activity=[],this.from=null,this.to=null,this.created_at=[],this.showtimeago=!0,this.max_date=new Date,this.ths.forEach((function(t,e){i.visible_columns.push(e)})),this.max_date.setDate(this.max_date.getDate())}return t.prototype.ngOnInit=function(){this.getListing(),this.getActivity("sacks_listing")},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return e.sent(),[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.getListing=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.inventoryStocksService.getSackList(this.page,this.limit,this.order,this.from,this.to,this.search).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){e.total_out_sales=Number(e.total_out)+Number(e.sales),t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.reloadData=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.openModal=function(){this.dialog.open(Fn,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,order:this.order,search:this.search,visible_columns:this.visible_columns,ths:this.ths}}).afterClosed().subscribe((function(t){}))},t.prototype.exportToCsv=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return t=[],[4,this.inventoryStocksService.getSackList(1,this.totalItems,this.order,this.from,this.to,this.search).then((function(n){if(0==n.error){n.datas.forEach((function(n){t.push({Dates:e.datePipe.transform(new Date(n.created_at),"yyyy-MM-dd"),"Beginning no. of stocks (pcs)":n.last_data?n.last_data.last_ending:0,"No. of In/From House (pcs)":n.total_in,"No. of Out/Sales (pcs)":n.total_out_sales,"Total Remaining Stocks (pcs)":n.last_ending,Warehouseman:n.name})}));var o={fieldSeparator:",",quoteStrings:'"',decimalSeparator:".",showLabels:!0,showTitle:!0,title:"Sacks-Inventory-"+e.datePipe.transform(new Date,"yyyy-MM-dd"),useTextFile:!1,useBom:!0,useKeysAsHeaders:!0,filename:"Sacks-Inventory-"+e.datePipe.transform(new Date,"yyyy-MM-dd")};new ze.ExportToCsv(o).generateCsv(t)}})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.b},{type:c.d},{type:Fe},{type:an}]},t=o.__decorate([Object(i.n)({selector:"app-sacks-listing",template:o.__importDefault(n("tIRD")).default,styles:[o.__importDefault(n("itpO")).default]})],t)}(),Sn=[{label:"Item Details",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Status",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Last Ending no.",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"House/Bldg. 5",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"House/Bldg. 6",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"House/Bldg. 7",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"House/Bldg. 8",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Total In",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Total Out",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Sales",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Remaining stocks",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Remarks (In)",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Remarks (Out)",key:"",canSort:!1,isVisible:!0,canToggle:!0}],Dn=function(){function t(t,e,n,o){var i=this;this._route=t,this.generalService=e,this.inventoryStocksService=n,this.location=o,this.isLoaded=!1,this.ths=Sn,this.limits=Me,this.visible_columns=[],this.items=[],this.totalItems=0,this.page=1,this.prev_page=0,this.next_page=0,this.totalPages=0,this.limit=10,this.order={order_by_column:"id",order_by:"asc"},this.in_house=0,this.out_sales=0,this.activity=[],this.showtimeago=!0,this.ths.forEach((function(t,e){i.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=this;this._route.params.subscribe((function(e){t.id=e.id,t.getRecord(),t.getActivity("sacks_view",t.id)}))},t.prototype.getRecord=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.inventoryStocksService.getSackRecord(this.id).then((function(e){t.isLoaded=!0,console.log(e),0==e.error?(t.items=e.data,t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.items.sack_bldg_inventory.forEach((function(e){t.in_house+=Number(e.count)})),t.out_sales=Number(t.items.total_out)+Number(t.items.sales)):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.goBack=function(){this.location.back()},t.prototype.getActivity=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n=this;return o.__generator(this,(function(o){switch(o.label){case 0:return[4,this.generalService.getActivity(t,null,null,null,e).then((function(t){0==t.error?(n.showtimeago=!0,n.activity=t.data):n.showtimeago=!1})).catch((function(t){console.log(t),n.showtimeago=!1}))];case 1:return o.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:u.a},{type:Fe},{type:an},{type:c.g}]},t=o.__decorate([Object(i.n)({selector:"app-sacks-view",template:o.__importDefault(n("qItx")).default,styles:[o.__importDefault(n("z8we")).default]})],t)}(),Vn=[{label:"Time and Date",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Beginning no. of stocks (pcs)",key:"",canSort:!0,isVisible:!0,canToggle:!0},{label:"In/Return of Stocks (pcs)",key:"",canSort:!0,isVisible:!0,canToggle:!0},{label:"No. of Out/Sales (pcs)",key:"",canSort:!0,isVisible:!0,canToggle:!0},{label:"Total Remaining stocks (pcs)",key:"",canSort:!0,isVisible:!0,canToggle:!0},{label:"Warehouseman",key:"",canSort:!0,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],An=function(){function t(t,e,n,o,i){var s=this;this.dialogRef=t,this.data=e,this.datePipe=n,this.inventoryStocksService=o,this.exportAsService=i,this.isLoaded=!1,this.ths=Vn,this.visible_columns=[],this.items=[],this.page=1,this.limit=10,this.order={order_by_column:"created_at",order_by:"asc"},this.search="",this.from=null,this.to=null,this.created_at=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"A4"},margin:10,compress:!0,pagebreak:{after:".break-now"},showall:!0,pdfCallbackFn:this.pdfCallbackFn}},this.user_profile=[],this.date_today=new Date,this.ths.forEach((function(t,e){s.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.getListing()},t.prototype.getListing=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.inventoryStocksService.getTrayList(this.page,this.limit,this.order,this.from,this.to,this.search).then((function(e){t.isLoaded=!0,0==e.error?e.datas.forEach((function(e){e.date=t.datePipe.transform(new Date(e.created_at),"yyyy-MM-dd"),t.items.push(e)})):t.items=[]})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Trays-Inventory-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.pdfCallbackFn=function(t){for(var e=t.internal.getNumberOfPages(),n=1;n<=e;n++)t.setPage(n),t.setFontSize(12),t.text(n+" of "+e,t.internal.pageSize.getWidth()-25,t.internal.pageSize.getHeight()-10)},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:c.d},{type:an},{type:He.b}]},t=o.__decorate([Object(i.n)({selector:"app-report-trays",template:o.__importDefault(n("0PFK")).default,styles:[o.__importDefault(n("lSXh")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),En=function(){function t(t,e,n,o){var i=this;this.dialog=t,this.datePipe=e,this.generalService=n,this.inventoryStocksService=o,this.isLoaded=!1,this.show_filter=!1,this.ths=Vn,this.limits=Me,this.visible_columns=[],this.items=[],this.totalItems=0,this.page=1,this.prev_page=0,this.next_page=0,this.totalPages=0,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"created_at",order_by:"desc"},this.search="",this.from=null,this.to=null,this.created_at=[],this.activity=[],this.showtimeago=!0,this.max_date=new Date,this.ths.forEach((function(t,e){i.visible_columns.push(e)})),this.max_date.setDate(this.max_date.getDate())}return t.prototype.ngOnInit=function(){this.getListing(),this.getActivity("trays_listing")},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return e.sent(),[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.getListing=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.inventoryStocksService.getTrayList(this.page,this.limit,this.order,this.from,this.to,this.search).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.reloadData=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=null,this.to=null,this.created_at=[],this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.prototype.openModal=function(){this.dialog.open(An,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,order:this.order,search:this.search,visible_columns:this.visible_columns,ths:this.ths}}).afterClosed().subscribe((function(t){}))},t.prototype.exportToCsv=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return t=[],[4,this.inventoryStocksService.getTrayList(1,this.totalItems,this.order,this.from,this.to,this.search).then((function(n){if(0==n.error){n.datas.forEach((function(n){t.push({"Time and Date":e.datePipe.transform(new Date(n.created_at),"yyyy-MM-dd"),"Beginning no. of stocks (pcs)":n.beginning,"In/Return of Stocks (pcs)":n.returned,"No. of Out/Sales (pcs)":n.number_of_out_sales,"Total Remaining Stocks (pcs)":n.total_remaining,Warehouseman:n.name})}));var o={fieldSeparator:",",quoteStrings:'"',decimalSeparator:".",showLabels:!0,showTitle:!0,title:"Tray-Inventory-"+e.datePipe.transform(new Date,"yyyy-MM-dd"),useTextFile:!1,useBom:!0,useKeysAsHeaders:!0,filename:"Tray-Inventory-"+e.datePipe.transform(new Date,"yyyy-MM-dd")};new ze.ExportToCsv(o).generateCsv(t)}})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.b},{type:c.d},{type:Fe},{type:an}]},t=o.__decorate([Object(i.n)({selector:"app-trays-listing",template:o.__importDefault(n("76H5")).default,styles:[o.__importDefault(n("VQx6")).default]})],t)}(),Tn=[{label:"Item Details",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Status",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Beginning no.",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"In/Return",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Sorting (Waste)",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Marketing (Waste)",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Out/Hiram",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Remaining stocks",key:"",canSort:!1,isVisible:!0,canToggle:!0}],Rn=function(){function t(t,e,n,o){var i=this;this._route=t,this.generalService=e,this.inventoryStocksService=n,this.location=o,this.isLoaded=!1,this.ths=Tn,this.limits=Me,this.visible_columns=[],this.items=[],this.totalItems=0,this.page=1,this.prev_page=0,this.next_page=0,this.totalPages=0,this.limit=10,this.order={order_by_column:"id",order_by:"asc"},this.in_house=0,this.out_sales=0,this.activity=[],this.showtimeago=!0,this.ths.forEach((function(t,e){i.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=this;this._route.params.subscribe((function(e){t.id=e.id,t.getRecord(),t.getActivity("trays_view",t.id)}))},t.prototype.getRecord=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.inventoryStocksService.getTrayRecord(this.id).then((function(e){t.isLoaded=!0,console.log(e),0==e.error?(t.items=e.data,t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.goBack=function(){this.location.back()},t.prototype.getActivity=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n=this;return o.__generator(this,(function(o){switch(o.label){case 0:return[4,this.generalService.getActivity(t,null,null,null,e).then((function(t){0==t.error?(n.showtimeago=!0,n.activity=t.data):n.showtimeago=!1})).catch((function(t){console.log(t),n.showtimeago=!1}))];case 1:return o.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:u.a},{type:Fe},{type:an},{type:c.g}]},t=o.__decorate([Object(i.n)({selector:"app-trays-view",template:o.__importDefault(n("KF12")).default,styles:[o.__importDefault(n("cgRm")).default]})],t)}(),On=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getList=function(){var t=this;return new Promise((function(e){t.env.getHttpOptions().then((function(n){var o=t.env.getUrl(Ct);t.http.get(o,n).subscribe((function(t){e(t)}),(function(t){console.log("err2",t),e({error:1,message:"error"})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),Bn=function(){function t(t,e){this.http=t,this.env=e}return t.prototype.getProductionHouse=function(t,e,n,o,i,s){var a=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(r){a.env.getHttpOptions().then((function(l){var c=a.env.getUrl(Dt)+"/page/"+t+"/limit/"+e;n&&0!=n&&(c+="/house_id/"+n),o&&i&&(c+="/from/"+o+"/to/"+i),s&&(c+="/order_by_column/"+s.order_by_column+"/order_by/"+s.order_by),a.http.get(c,l).subscribe((function(t){r(t)}),(function(t){console.log("err2",t),r({error:1,message:"error"})}))}))}))},t.prototype.getProductionEggSize=function(t,e,n,o,i,s){var a=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(r){a.env.getHttpOptions().then((function(l){var c=a.env.getUrl(Vt)+"/page/"+t+"/limit/"+e;o&&i&&(c+="/from/"+o+"/to/"+i),s&&(c+="/order_by_column/"+s.order_by_column+"/order_by/"+s.order_by),n&&(c+="/house_id/"+n),a.http.get(c,l).subscribe((function(t){r(t)}),(function(t){console.log("err2",t),r({error:1,message:"error"})}))}))}))},t.prototype.getOverallSales=function(t,e,n,o,i){var s=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(a){s.env.getHttpOptions().then((function(r){var l=s.env.getUrl(At)+"/page/"+t+"/limit/"+e;n&&o&&(l+="/from/"+n+"/to/"+o),i&&(l+="/order_by_column/"+i.order_by_column+"/order_by/"+i.order_by),s.http.get(l,r).subscribe((function(t){a(t)}),(function(t){console.log("err2",t),a({error:1,message:"error"})}))}))}))},t.prototype.getSalesByEggSize=function(t,e,n,o,i){var s=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(a){s.env.getHttpOptions().then((function(r){var l=s.env.getUrl(Et)+"/page/"+t+"/limit/"+e;n&&o&&(l+="/from/"+n+"/to/"+o),i&&(l+="/order_by_column/"+i.order_by_column+"/order_by/"+i.order_by),s.http.get(l,r).subscribe((function(t){a(t)}),(function(t){console.log("err2",t),a({error:1,message:"error"})}))}))}))},t.prototype.getFeedConsumptionReport=function(t,e,n,o,i,s){var a=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(r){a.env.getHttpOptions().then((function(l){var c=a.env.getUrl(Rt)+"/page/"+t+"/limit/"+e;n&&0!=n&&(c+="/house_id/"+n),o&&i&&(c+="/from/"+o+"/to/"+i),s&&(c+="/order_by_column/"+s.order_by_column+"/order_by/"+s.order_by),a.http.get(c,l).subscribe((function(t){r(t)}),(function(t){console.log("err2",t),r({error:1,message:"error"})}))}))}))},t.prototype.getMedicineConsumption=function(t,e,n,o,i){var s=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(a){s.env.getHttpOptions().then((function(r){var l=s.env.getUrl(Ot)+"/page/"+t+"/limit/"+e;n&&o&&(l+="/from/"+n+"/to/"+o),i&&(l+="/order_by_column/"+i.order_by_column+"/order_by/"+i.order_by),s.http.get(l,r).subscribe((function(t){a(t)}),(function(t){console.log("err2",t),a({error:1,message:"error"})}))}))}))},t.prototype.getStocks=function(t,e,n,o,i){var s=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(a){s.env.getHttpOptions().then((function(r){var l=s.env.getUrl(Tt)+"/page/"+t+"/limit/"+e;n&&o&&(l+="/from/"+n+"/to/"+o),i&&(l+="/order_by_column/"+i.order_by_column+"/order_by/"+i.order_by),s.http.get(l,r).subscribe((function(t){a(t)}),(function(t){console.log("err2",t),a({error:1,message:"error"})}))}))}))},t.prototype.getMedicineconsumption=function(t,e,n,o,i,s,a,r){var l=this;return void 0===t&&(t=1),void 0===e&&(e=10),new Promise((function(c){l.env.getHttpOptions().then((function(d){var u=l.env.getUrl(Ot)+"/page/"+t+"/limit/"+e;n&&o&&(u+="/from/"+n+"/to/"+o),i&&(u+="/order_by_column/"+i.order_by_column+"/order_by/"+i.order_by),s&&(u+="/month/"+s),a&&(u+="/house_id/"+a),r&&(u+="/med_id/"+r),l.http.get(u,d).subscribe((function(t){c(t)}),(function(t){console.log("err2",t),c({error:1,message:"error"})}))}))}))},t.prototype.getAllmedicine=function(){var t=this;return new Promise((function(e){t.env.getHttpOptions().then((function(n){var o=t.env.getUrl(Wt);t.http.get(o,n).subscribe((function(t){e(t)}),(function(t){console.log("err2",t),e({error:1,message:"error"})}))}))}))},t.prototype.getAllList=function(){var t=this;return new Promise((function(e){t.env.getHttpOptions().then((function(n){var o=t.env.getUrl(S);t.http.get(o,n).subscribe((function(t){e(t)}),(function(t){e({error:1,message:t})}))}))}))},t.prototype.getLocationwithhighestorders=function(t,e){var n=this;return new Promise((function(o){n.env.getHttpOptions().then((function(i){var s=n.env.getUrl(te);t&&e&&(s+="/from/"+t+"/to/"+e),n.http.get(s,i).subscribe((function(t){o(t)}),(function(t){o({error:1,message:t})}))}))}))},t.prototype.getCreditBalance=function(t,e){var n=this;return new Promise((function(o){n.env.getHttpOptions().then((function(i){var s=n.env.getUrl(ee);t&&e&&(s+="/from/"+t+"/to/"+e),n.http.get(s,i).subscribe((function(t){o(t)}),(function(t){o({error:1,message:t})}))}))}))},t.ctorParameters=function(){return[{type:r.a},{type:ne}]},t=o.__decorate([Object(i.C)({providedIn:"root"})],t)}(),Nn=function(){function t(t,e,n,o,i,s,a,r,l,c,d){this.dialogRef=t,this.data=e,this.formBuilder=n,this._snackBar=o,this.dialog=i,this.datePipe=s,this.houseService=a,this.eggTypeService=r,this.performanceReportService=l,this.router=c,this.exportAsService=d,this.lineChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{stacked:!1,scaleLabel:{display:!0,labelString:"Consumed feeds (grams)",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}],xAxes:[{stacked:!1}]},legend:{position:"top"},tooltips:{callbacks:{title:function(t,e){return"Week "+t[0].label},label:function(t,e){var n=t.index,o=t.datasetIndex;e.datasets.forEach((function(t){Number(t.data[n])}));var i=e.datasets[o].label;return 0==Number(t.value)?null:i},footer:function(t,e){var n=0;if(0!=Number(t[0].value)){var o=t[0].value.toString().split(".");o[0]=o[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),n=o.join(".")}return"Consumed: "+n+" g"}}},plugins:{datalabels:{formatter:function(t,e){return null}}}},this.lineChartLabels=[],this.lineChartType="line",this.lineChartLegend=!0,this.lineChartPlugins=[Ze],this.lineChartData=[],this.chartvalues=[],this.chartlabels=[],this.isLoaded=!1,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.from=null,this.to=null,this.created_at=[],this.activity=[],this.showtimeago=!0,this.max_date=new Date,this.house_options=[],this.visible_columns=[],this.ths=[],this.overall_harvested_eggs=0,this.charthousevalues=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"legal"},margin:10,compress:!0,pagebreak:{after:".break-now"}}},this.user_profile=[],this.date_today=new Date;var u=new Date,m=u.getFullYear(),p=u.getMonth();this.from=this.datePipe.transform(new Date(m,p,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(m,p+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to}}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.order=this.data.order,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.lineChartLabels=this.data.lineChartLabels,this.charthousevalues=this.data.charthousevalues,this.getList()},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getFeedConsumptionReport(this.page,this.limit,null,this.from,this.to,this.order).then((function(e){0==e.error?(t.totalItems=Number(e.total_count),e.datas.forEach((function(e){t.items.push(e)}))):(t.isLoaded=!0,t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.lineChartLabels=[],this.lineChartData=[],this.chartvalues=[],this.charthousevalues.forEach((function(t){t.data.forEach((function(e,n){t.data[n]=0}))})),this.totalItems=1==this.totalItems?2:this.totalItems,[4,this.performanceReportService.getFeedConsumptionReport(1,this.totalItems,null,this.from,this.to,this.order).then((function(e){t.isLoaded=!0,0==e.error?(e.datas.forEach((function(e){t.lineChartLabels.push(e.age_week);var n=t.lineChartLabels.indexOf(e.age_week);t.charthousevalues.forEach((function(o){"Recommended"==o.house_id&&(o.data[n]=e.rec_feed_consumption,o.backgroundColor="transparent",o.hoverBackgroundColor="transparent");var i=e.house.find((function(t){return t.id==o.house_id}));if(i&&i.daily_harvest_report){o.data[n]=i.daily_harvest_report.sum;var s=t.ths.find((function(t){return t.key==o.house_id}));o.hidden=!s.isVisible,o.backgroundColor="transparent",o.hoverBackgroundColor="transparent"}}))})),t.lineChartData=t.charthousevalues):t.lineChartData=t.charthousevalues})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.lineChartData=t.charthousevalues}))];case 1:return e.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Feed-Consumption-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:se.b},{type:ae.a},{type:g.b},{type:c.d},{type:oe},{type:On},{type:Bn},{type:u.b},{type:He.b}]},t=o.__decorate([Object(i.n)({selector:"app-report-feeds-consumption",template:o.__importDefault(n("hEX2")).default,styles:[o.__importDefault(n("TgR/")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),jn=function(){function t(t,e,n,o,i,s,a,r,l){this.auth=t,this.datePipe=e,this.eggTypeService=n,this.generalService=o,this.houseService=i,this.performanceReportService=s,this.router=a,this.exportAsService=r,this.dialog=l,this.lineChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{stacked:!1,scaleLabel:{display:!0,labelString:"Consumed feeds (grams)",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}],xAxes:[{stacked:!1}]},legend:{position:"top"},tooltips:{callbacks:{title:function(t,e){return"Week "+t[0].label},label:function(t,e){var n=t.index,o=t.datasetIndex;console.log("datasetIndex",o);e.datasets.forEach((function(t){Number(t.data[n])}));var i=e.datasets[o].label;return console.log("label",i),0==Number(t.value)?null:i},footer:function(t,e){var n=0;if(0!=Number(t[0].value)){var o=t[0].value.toString().split(".");o[0]=o[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),n=o.join(".")}return"Consumed: "+n+" g"}}},plugins:{datalabels:{formatter:function(t,e){return null}}}},this.lineChartLabels=[],this.lineChartType="line",this.lineChartLegend=!0,this.lineChartPlugins=[Ze],this.lineChartData=[],this.chartvalues=[],this.chartlabels=[],this.isLoaded=!1,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.from=null,this.to=null,this.created_at=[],this.activity=[],this.showtimeago=!0,this.max_date=new Date,this.house_options=[],this.visible_columns=[],this.ths=[],this.overall_harvested_eggs=0,this.charthousevalues=[];var c=new Date,d=c.getFullYear(),u=c.getMonth();this.from=this.datePipe.transform(new Date(d,u,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(d,u+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to}}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getHouses(),this.getActivity("daily_reports_listing")},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getFeedConsumptionReport(this.page,this.limit,null,this.from,this.to,this.order).then((function(e){0==e.error?(t.totalItems=Number(e.total_count)+1,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.isLoaded=!0,t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.lineChartLabels=[],this.lineChartData=[],this.chartvalues=[],this.charthousevalues.forEach((function(t){t.data.forEach((function(e,n){t.data[n]=0}))})),this.totalItems=1==this.totalItems?2:this.totalItems,[4,this.performanceReportService.getFeedConsumptionReport(1,this.totalItems,null,this.from,this.to,this.order).then((function(e){t.isLoaded=!0,0==e.error?(e.datas.forEach((function(e){t.lineChartLabels.push(e.age_week);var n=t.lineChartLabels.indexOf(e.age_week);t.charthousevalues.forEach((function(o){"Recommended"==o.house_id&&(o.data[n]=e.rec_feed_consumption,o.backgroundColor="transparent",o.hoverBackgroundColor="transparent");var i=e.house.find((function(t){return t.id==o.house_id}));if(i&&i.daily_harvest_report){o.data[n]=i.daily_harvest_report.sum;var s=t.ths.find((function(t){return t.key==o.house_id}));o.hidden=!s.isVisible,o.backgroundColor="transparent",o.hoverBackgroundColor="transparent"}}))})),t.lineChartData=t.charthousevalues):t.lineChartData=t.charthousevalues})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.lineChartData=t.charthousevalues}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getHouses=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.houseService.getAllList().then((function(e){0==e.error&&(e.datas.forEach((function(e){t.house_options.push(e),t.ths.push({label:"House/Bldg no. "+e.house_name,key:e.id,canSort:!1,isVisible:!0,canToggle:!0})})),t.charthousevalues.push({data:[],house_id:"Recommended",label:"Recommended"}),t.lineChartLabels.forEach((function(){t.charthousevalues[0].data.push(0)})),t.ths.forEach((function(e,n){t.visible_columns.push(n),t.charthousevalues.push({data:[],house_id:e.key,label:e.label}),t.lineChartLabels.forEach((function(){t.charthousevalues[n].data.push(0)}))})),t.getList())})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,this.chartvalues=[],[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e,n;return o.__generator(this,(function(o){switch(o.label){case 0:return t=new Date,e=t.getFullYear(),n=t.getMonth(),this.from=this.datePipe.transform(new Date(e,n,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(e,n+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,this.chartvalues=[],[4,this.getList()];case 1:return o.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){return console.log("e",t),this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),this.getGraph(),[2]}))}))},t.prototype.openModal=function(){this.dialog.open(Nn,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,order:this.order,visible_columns:this.visible_columns,ths:this.ths,lineChartLabels:this.lineChartLabels,charthousevalues:this.charthousevalues}}).afterClosed().subscribe((function(t){}))},t.ctorParameters=function(){return[{type:ge},{type:c.d},{type:On},{type:Fe},{type:oe},{type:Bn},{type:u.b},{type:He.b},{type:g.b}]},t=o.__decorate([Object(i.n)({selector:"app-feeds",template:o.__importDefault(n("jpTY")).default,styles:[o.__importDefault(n("/psW")).default]})],t)}(),qn=function(){function t(t,e,n,o,i){var s=this;this.dialogRef=t,this.data=e,this.exportAsService=n,this.performanceReportService=o,this.datePipe=i,this.barChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{stacked:!0,scaleLabel:{display:!0,labelString:"Total Consumed",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}],xAxes:[{stacked:!0}]},legend:{position:"top"},tooltips:{callbacks:{label:function(t,e){var n=t.index,o=t.datasetIndex;e.datasets.forEach((function(t){Number(t.data[n])}));var i=e.datasets[o].label;return 0==Number(t.value)?null:i},footer:function(t,e){var n=t[0].index,o=0;e.datasets.forEach((function(t){t.hidden||(o+=Number(t.data[n]))}));var i=0;if(0!=Number(t[0].value)){var s=t[0].value.toString().split(".");s[0]=s[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),i=s.join(".")}var a=o.toString().split(".");return a[0]=a[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),"Total: "+i+" ml\nOverall: "+a.join(".")+" ml"}}},plugins:{datalabels:{formatter:function(t,e){return null}}}},this.barChartLabels=[],this.barChartType="bar",this.barChartLegend=!0,this.barChartPlugins=[Ze],this.barChartData=[],this.chartvalues=[],this.chartlabels=[],this.isLoaded=!1,this.ths=[],this.visible_columns=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.from=null,this.to=null,this.items=[],this.max_date=new Date,this.medicines=[],this.houses=[],this.created_at=[],this.activity=[],this.charthousevalues=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"legal"},margin:10,compress:!0,pagebreak:{after:".break-now"}}},this.user_profile=[],this.date_today=new Date,this.ths.forEach((function(t,e){s.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.order=this.data.order,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.med_id=this.data.med_id,this.barChartLabels=this.data.barChartLabels,this.charthousevalues=this.data.charthousevalues,this.getList()},t.prototype.loopDates=function(){for(var t=new Date(this.from);t<=new Date(this.to);){this.barChartLabels.push(this.datePipe.transform(new Date(t),"MM/dd"));var e=t.setDate(t.getDate()+1);t=new Date(e)}this.getList()},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getMedicineconsumption(this.page,this.limit,this.from,this.to,this.order,this.month,this.house_id,this.med_id).then((function(e){0==e.error?e.datas.forEach((function(e){t.items.push(e)})):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.barChartData=[],this.chartvalues=[],this.charthousevalues.forEach((function(t){t.data.forEach((function(e,n){t.data[n]=0}))})),this.totalItems=1==this.totalItems?2:this.totalItems,[4,this.performanceReportService.getMedicineconsumption(1,this.limit,this.from,this.to,this.order,this.month,this.house_id,this.med_id).then((function(e){t.isLoaded=!0,0==e.error?(e.datas.forEach((function(e){console.log("datad",e);var n=t.barChartLabels.indexOf(t.datePipe.transform(new Date(e.date),"MM/dd"));console.log("index_of_date",n),t.charthousevalues.forEach((function(o){console.log("chv",o);var i=e.house.find((function(t){return t.id==o.house_id}));if(i){o.data[n]=i.medicine_volume;var s=t.ths.find((function(t){return t.key==o.house_id}));o.hidden=!s.isVisible}}))})),console.log("this.charthousevalues",t.charthousevalues),t.barChartData=t.charthousevalues):t.barChartData=t.charthousevalues})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.barChartData=t.charthousevalues}))];case 1:return e.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Medicine-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:He.b},{type:Bn},{type:c.d}]},t=o.__decorate([Object(i.n)({selector:"app-report-medicine",template:o.__importDefault(n("bPis")).default,styles:[o.__importDefault(n("0yIp")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),Hn=function(){function t(t,e,n,o){var i=this;this.auth=t,this.performanceReportService=e,this.datePipe=n,this.dialog=o,this.barChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{stacked:!0,scaleLabel:{display:!0,labelString:"Total Consumed",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}],xAxes:[{stacked:!0}]},legend:{position:"top"},tooltips:{callbacks:{label:function(t,e){var n=t.index,o=t.datasetIndex;e.datasets.forEach((function(t){Number(t.data[n])}));var i=e.datasets[o].label;return 0==Number(t.value)?null:i},footer:function(t,e){var n=t[0].index,o=0;e.datasets.forEach((function(t){t.hidden||(o+=Number(t.data[n]))}));var i=0;if(0!=Number(t[0].value)){var s=t[0].value.toString().split(".");s[0]=s[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),i=s.join(".")}var a=o.toString().split(".");return a[0]=a[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),"Total: "+i+" ml\nOverall: "+a.join(".")+" ml"}}},plugins:{datalabels:{formatter:function(t,e){return null}}}},this.barChartLabels=[],this.barChartType="bar",this.barChartLegend=!0,this.barChartPlugins=[Ze],this.barChartData=[],this.chartvalues=[],this.chartlabels=[],this.isLoaded=!1,this.ths=[],this.visible_columns=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.from=null,this.to=null,this.items=[],this.max_date=new Date,this.medicines=[],this.houses=[],this.created_at=[],this.activity=[],this.charthousevalues=[],this.ths.forEach((function(t,e){i.visible_columns.push(e)}));var s=new Date,a=s.getFullYear(),r=s.getMonth();this.from=this.datePipe.transform(new Date(a,r,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(a,r+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.loopDates()}return t.prototype.loopDates=function(){for(var t=new Date(this.from);t<=new Date(this.to);){this.barChartLabels.push(this.datePipe.transform(new Date(t),"MM/dd"));var e=t.setDate(t.getDate()+1);t=new Date(e)}},t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getAllmedicines(),this.getAllhouse()},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getMedicineconsumption(this.page,this.limit,this.from,this.to,this.order,this.month,this.house_id,this.med_id).then((function(e){console.log("medicineConsumption",e),0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.barChartData=[],this.chartvalues=[],this.charthousevalues.forEach((function(t){t.data.forEach((function(e,n){t.data[n]=0}))})),this.totalItems=1==this.totalItems?2:this.totalItems,[4,this.performanceReportService.getMedicineconsumption(1,this.totalItems,this.from,this.to,this.order,this.month,this.house_id,this.med_id).then((function(e){t.isLoaded=!0,0==e.error?(e.datas.forEach((function(e){console.log("datad",e);var n=t.barChartLabels.indexOf(t.datePipe.transform(new Date(e.date),"MM/dd"));console.log("index_of_date",n),t.charthousevalues.forEach((function(o){console.log("chv",o);var i=e.house.find((function(t){return t.id==o.house_id}));if(i){o.data[n]=i.medicine_volume;var s=t.ths.find((function(t){return t.key==o.house_id}));o.hidden=!s.isVisible}}))})),console.log("this.charthousevalues",t.charthousevalues),t.barChartData=t.charthousevalues):t.barChartData=t.charthousevalues})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.barChartData=t.charthousevalues}))];case 1:return e.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getAllmedicines=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getAllmedicine().then((function(e){console.log("medicines",e),0==e.error?e.data.forEach((function(e){t.medicines.push(e)})):t.medicines=[]})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getAllhouse=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getAllList().then((function(e){console.log("houses",e),0==e.error?(e.datas.forEach((function(e){t.houses.push(e),t.ths.push({label:"House/Bldg no. "+e.house_name,key:e.id,canSort:!1,isVisible:!0,canToggle:!0})})),t.ths.forEach((function(e,n){t.visible_columns.push(n),t.charthousevalues.push({data:[],house_id:e.key,label:e.label}),t.barChartLabels.forEach((function(){t.charthousevalues[n].data.push(0)}))}))):t.houses=[]})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),this.getList(),[2]}}))}))},t.prototype.changeHouse=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.houses=[],[4,this.getAllhouse()];case 1:return t.sent(),[2]}}))}))},t.prototype.selectMed=function(t){this.med_id=t,this.items=[],this.getList()},t.prototype.selectHouse=function(t){this.items=[],this.getList()},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){return console.log("e",t),this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),this.getGraph(),[2]}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,this.chartvalues=[],this.barChartLabels=[],this.loopDates(),[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e,n;return o.__generator(this,(function(o){switch(o.label){case 0:return t=new Date,e=t.getFullYear(),n=t.getMonth(),this.from=this.datePipe.transform(new Date(e,n,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(e,n+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,this.chartvalues=[],this.barChartLabels=[],this.loopDates(),[4,this.getList()];case 1:return o.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.downloadModal=function(){this.dialog.open(qn,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,order:this.order,ths:this.ths,visible_columns:this.visible_columns,med_id:this.med_id,barChartLabels:this.barChartLabels,charthousevalues:this.charthousevalues}}).afterClosed().subscribe((function(t){}))},t.ctorParameters=function(){return[{type:ge},{type:Bn},{type:c.d},{type:g.b}]},t=o.__decorate([Object(i.n)({selector:"app-medicine",template:o.__importDefault(n("pNTh")).default,styles:[o.__importDefault(n("TWb5")).default]})],t)}(),Un=function(){function t(t,e,n,o,i,s,a,r,l,c){this.dialogRef=t,this.data=e,this.formBuilder=n,this._snackBar=o,this.dialog=i,this.datePipe=s,this.eggTypeService=a,this.performanceReportService=r,this.router=l,this.exportAsService=c,this.page=1,this.visible_columns=[],this.barChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Total quantity of eggs",fontSize:14,lineHeight:4,fontColor:"#72787F"},ticks:{min:0,fontSize:12,fontColor:"#72787F",callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}],xAxes:[{ticks:{fontSize:12,fontColor:"#72787F"}}]},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){return"Size: "+t.label},footer:function(t,e){if(0==Number(t[0].value))return null;var n=t[0].value.toString().split(".");return n[0]=n[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),"Quantity: "+n.join(".")+" pcs"}}},plugins:{datalabels:{color:"#FFF",formatter:function(t,e){var n=Math.log10(Math.abs(t))/3|0;if(0==n)return t;var o=["","K","M","G","T","P","E"][n],i=(t/Math.pow(10,3*n)).toFixed(1)+"";return/\.0$/.test(i)&&(i=i.substr(0,i.length-2)),i+o}}}},this.barChartLabels=[],this.barChartType="bar",this.barChartLegend=!1,this.barChartPlugins=[Ze],this.barChartData=[],this.chartvalues=[],this.chartlabels=[],this.isLoaded=!1,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.created_at=[],this.activity=[],this.showtimeago=!0,this.max_date=new Date,this.egg_type_options=[],this.house_options=[],this.selected_house=[],this.ths=[],this.overall_harvested_eggs=0,this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"legal"},margin:10,compress:!0,pagebreak:{after:".break-now"}}},this.user_profile=[],this.date_today=new Date}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.house_id=this.data.house_id,this.barChartLabels=this.data.barChartLabels,this.barChartData=this.data.barChartData,this.overall_harvested_eggs=this.data.overall_harvested_eggs,this.getEggTypeList()},t.prototype.getEggTypeList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.eggTypeService.getList().then((function(e){0==e.error&&(e.datas.forEach((function(e,n){t.egg_type_options.push(e)})),t.ths.forEach((function(e,n){t.visible_columns.push(n)})),t.getList())})).catch((function(t){console.log(t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getProductionEggSize(this.page,this.limit,this.house_id,this.from,this.to,this.order).then((function(e){0==e.error?(t.isLoaded=!0,e.datas.forEach((function(e){t.items.push(e)}))):(t.isLoaded=!0,t.items=[])})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),[2]}}))}))},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Production-By-Egg-Size-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.prototype.pdfCallbackFn=function(t){for(var e=t.internal.getNumberOfPages(),n=1;n<=e;n++)t.setPage(n),t.text("Page "+n+" of "+e,t.internal.pageSize.getWidth()-100,t.internal.pageSize.getHeight()-30)},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:se.b},{type:ae.a},{type:g.b},{type:c.d},{type:On},{type:Bn},{type:u.b},{type:He.b}]},t=o.__decorate([Object(i.n)({selector:"app-report-production-by-egg-size",template:o.__importDefault(n("nJR6")).default,styles:[o.__importDefault(n("pIw5")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),zn=function(){function t(t,e,n,o,i,s,a,r){this.auth=t,this.datePipe=e,this.eggTypeService=n,this.generalService=o,this.houseService=i,this.performanceReportService=s,this.router=a,this.dialog=r,this.barChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Total quantity of eggs",fontSize:14,lineHeight:4,fontColor:"#72787F"},ticks:{min:0,fontSize:12,fontColor:"#72787F",callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}],xAxes:[{ticks:{fontSize:12,fontColor:"#72787F"}}]},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){return"Size: "+t.label},footer:function(t,e){if(0==Number(t[0].value))return null;var n=t[0].value.toString().split(".");return n[0]=n[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),"Quantity: "+n.join(".")+" pcs"}}},plugins:{datalabels:{color:"#FFF",formatter:function(t,e){var n=Math.log10(Math.abs(t))/3|0;if(0==n)return t;var o=["","K","M","G","T","P","E"][n],i=(t/Math.pow(10,3*n)).toFixed(1)+"";return/\.0$/.test(i)&&(i=i.substr(0,i.length-2)),i+o}}}},this.barChartLabels=[],this.barChartType="bar",this.barChartLegend=!1,this.barChartPlugins=[Ze],this.barChartData=[],this.chartvalues=[],this.chartlabels=[],this.isLoaded=!1,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.from=null,this.to=null,this.created_at=[],this.activity=[],this.showtimeago=!0,this.max_date=new Date,this.egg_type_options=[],this.visible_columns=[],this.house_options=[],this.ths=[],this.overall_harvested_eggs=0;var l=new Date,c=l.getFullYear(),d=l.getMonth();this.from=this.datePipe.transform(new Date(c,d,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(l),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to}}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getEggTypeList(),this.getHouses(),this.getActivity("daily_sorting_reports_listing")},t.prototype.getEggTypeList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.eggTypeService.getList().then((function(e){0==e.error&&(e.datas.forEach((function(e,n){t.egg_type_options.push(e),t.ths.push({label:e.type,id:e.id,key:"type_shortcode",canSort:!1,isVisible:!0,canToggle:!0})})),t.ths.forEach((function(e,n){t.visible_columns.push(n)})),t.getList())})).catch((function(t){console.log(t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getProductionEggSize(this.page,this.limit,this.house_id,this.from,this.to,this.order).then((function(e){0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return this.chartvalues=[],this.chartlabels=[],this.barChartLabels=[],this.overall_harvested_eggs=0,[4,(t=this.ths.filter((function(t){return 1==t.isVisible}))).forEach((function(t,n){e.chartvalues.push(0);var o=e.egg_type_options.find((function(e){return e.id==Number(t.id)}));e.chartlabels.push(o.type),e.barChartLabels.push(o.type_shortcode)}))];case 1:return n.sent(),this.barChartData=[],[4,this.performanceReportService.getProductionEggSize(1,this.totalItems>1?this.totalItems:this.limit,this.house_id,this.from,this.to,this.order).then((function(n){e.isLoaded=!0,0==n.error&&(n.datas.forEach((function(n){n.daily_sorting_inventory.forEach((function(n,o){var i=e.ths.find((function(t){return t.id==n.type_id}));if(i.isVisible){var s=t.indexOf(i);e.chartvalues[s]+=Number(n.sum),e.overall_harvested_eggs+=Number(n.sum)}}))})),e.barChartData=[{data:e.chartvalues,label:"Qty",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"}])})).catch((function(t){console.log("e",t),e.isLoaded=!0}))];case 2:return n.sent(),[2]}}))}))},t.prototype.getHouses=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.houseService.getAllList().then((function(e){0==e.error&&e.datas.forEach((function(e){t.house_options.push(e)}))})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){return this.ths.forEach((function(e,n){e.isVisible=t.visible_columns.some((function(t){return t==n}))})),console.log("column count",this.visible_columns.length),this.getGraph(),[2]}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e,n;return o.__generator(this,(function(o){switch(o.label){case 0:return t=new Date,e=t.getFullYear(),n=t.getMonth(),this.from=this.datePipe.transform(new Date(e,n,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(e,n+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,this.house_id=null,[4,this.getList()];case 1:return o.sent(),[2]}}))}))},t.prototype.houseSelected=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.openModal=function(){this.dialog.open(Un,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,visible_columns:this.visible_columns,ths:this.ths,house_id:this.house_id,items:this.items,barChartLabels:this.barChartLabels,barChartData:this.barChartData,overall_harvested_eggs:this.overall_harvested_eggs}}).afterClosed().subscribe((function(t){}))},t.ctorParameters=function(){return[{type:ge},{type:c.d},{type:On},{type:Fe},{type:oe},{type:Bn},{type:u.b},{type:g.b}]},t=o.__decorate([Object(i.n)({selector:"app-production-by-egg-size",template:o.__importDefault(n("7j3S")).default,styles:[o.__importDefault(n("3LC1")).default]})],t)}(),$n=function(){function t(t,e,n,o,i,s,a,r,l,c,d){var u=this;this.dialogRef=t,this.data=e,this.formBuilder=n,this._snackBar=o,this.dialog=i,this.datePipe=s,this.houseService=a,this.eggTypeService=r,this.performanceReportService=l,this.router=c,this.exportAsService=d,this.page=1,this.visible_columns=[],this.barChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{stacked:!0,scaleLabel:{display:!0,labelString:"Total no. of eggs harvested",fontSize:16,lineHeight:4,fontColor:"#05172e",fontStyle:"bold"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}],xAxes:[{stacked:!0}]},legend:{position:"top"},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){var n=t.index,o=t.datasetIndex;e.datasets.forEach((function(t){Number(t.data[n])}));var i=e.datasets[o].label;return 0==Number(t.value)?null:i},footer:function(t,e){var n=t[0].index,o=0;e.datasets.forEach((function(t){console.log("dset",t),t.hidden||(o+=Number(t.data[n]))}));var i=0;if(0!=Number(t[0].value)){var s=t[0].value.toString().split(".");s[0]=s[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),i=s.join(".")}var a=o.toString().split(".");return a[0]=a[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),"Total: "+i+" pcs\nOverall: "+a.join(".")+" pcs"}}},plugins:{datalabels:{formatter:function(t,e){return null}}}},this.barChartLabels=[],this.barChartType="bar",this.barChartLegend=!0,this.barChartPlugins=[Ze],this.barChartData=[],this.chartvalues=[],this.chartlabels=[],this.isLoaded=!1,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.created_at=[],this.activity=[],this.showtimeago=!0,this.max_date=new Date,this.house_options=[],this.ths=[],this.overall_harvested_eggs=0,this.charthousevalues=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"legal"},margin:10,compress:!0,pagebreak:{after:".break-now"}}},this.user_profile=[],this.date_today=new Date,this.ths.forEach((function(t,e){u.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.order=this.data.order,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.barChartLabels=this.data.barChartLabels,this.charthousevalues=this.data.charthousevalues,this.getList()},t.prototype.loopDates=function(){for(var t=new Date(this.from);t<=new Date(this.to);){this.barChartLabels.push(this.datePipe.transform(new Date(t),"MM/dd"));var e=t.setDate(t.getDate()+1);t=new Date(e)}this.getList()},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getProductionHouse(this.page,this.limit,null,this.from,this.to,this.order).then((function(e){0==e.error?(t.totalItems=Number(e.total_count)+1,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.isLoaded=!0,t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.barChartData=[],this.chartvalues=[],this.charthousevalues.forEach((function(t){t.data.forEach((function(e,n){t.data[n]=0}))})),this.totalItems=1==this.totalItems?2:this.totalItems,[4,this.performanceReportService.getProductionHouse(1,this.totalItems,null,this.from,this.to,this.order).then((function(e){t.isLoaded=!0,0==e.error?(e.datas.forEach((function(e){var n=t.barChartLabels.indexOf(t.datePipe.transform(new Date(e.grouped_date),"MM/dd"));t.charthousevalues.forEach((function(o){var i=e.house.find((function(t){return t.id==o.house_id}));if(i&&i.daily_sorting_report){o.data[n]=i.daily_sorting_report.sum;var s=t.ths.find((function(t){return t.key==o.house_id}));o.hidden=!s.isVisible}}))})),t.barChartData=t.charthousevalues):t.barChartData=t.charthousevalues})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.barChartData=t.charthousevalues}))];case 1:return e.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Production-Per-House-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:se.b},{type:ae.a},{type:g.b},{type:c.d},{type:oe},{type:On},{type:Bn},{type:u.b},{type:He.b}]},t=o.__decorate([Object(i.n)({selector:"app-report-production-per-house",template:o.__importDefault(n("XM0N")).default,styles:[o.__importDefault(n("HijM")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),Gn=function(){function t(t,e,n,o,i,s,a,r,l){this.auth=t,this.datePipe=e,this.eggTypeService=n,this.generalService=o,this.houseService=i,this.performanceReportService=s,this.router=a,this.exportAsService=r,this.dialog=l,this.barChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{stacked:!0,scaleLabel:{display:!0,labelString:"Total no. of eggs harvested",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,fontSize:12,fontColor:"#72787F",callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}],xAxes:[{stacked:!0,ticks:{fontSize:12,fontColor:"#72787F"}}]},legend:{position:"top"},tooltips:{callbacks:{label:function(t,e){var n=t.index,o=t.datasetIndex;e.datasets.forEach((function(t){Number(t.data[n])}));var i=e.datasets[o].label;return 0==Number(t.value)?null:i},footer:function(t,e){var n=t[0].index,o=0;e.datasets.forEach((function(t){t.hidden||(o+=Number(t.data[n]))}));var i=0;if(0!=Number(t[0].value)){var s=t[0].value.toString().split(".");s[0]=s[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),i=s.join(".")}var a=o.toString().split(".");return a[0]=a[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),"Total: "+i+" pcs\nOverall: "+a.join(".")+" pcs"}}},plugins:{datalabels:{formatter:function(t,e){return null}}}},this.barChartLabels=[],this.barChartType="bar",this.barChartLegend=!0,this.barChartPlugins=[Ze],this.barChartData=[],this.chartvalues=[],this.chartlabels=[],this.isLoaded=!1,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.from=null,this.to=null,this.created_at=[],this.activity=[],this.showtimeago=!0,this.max_date=new Date,this.house_options=[],this.visible_columns=[],this.ths=[],this.overall_harvested_eggs=0,this.charthousevalues=[];var c=new Date,d=c.getFullYear(),u=c.getMonth();this.from=this.datePipe.transform(new Date(d,u,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(d,u+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.loopDates()}return t.prototype.loopDates=function(){for(var t=new Date(this.from);t<=new Date(this.to);){this.barChartLabels.push(this.datePipe.transform(new Date(t),"MM/dd"));var e=t.setDate(t.getDate()+1);t=new Date(e)}},t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getHouses(),this.getActivity("daily_sorting_reports_listing")},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getProductionHouse(this.page,this.limit,null,this.from,this.to,this.order).then((function(e){0==e.error?(t.totalItems=Number(e.total_count)+1,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.isLoaded=!0,t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.barChartData=[],this.chartvalues=[],this.charthousevalues.forEach((function(t){t.data.forEach((function(e,n){t.data[n]=0}))})),this.totalItems=1==this.totalItems?2:this.totalItems,[4,this.performanceReportService.getProductionHouse(1,this.totalItems,null,this.from,this.to,this.order).then((function(e){t.isLoaded=!0,0==e.error?(e.datas.forEach((function(e){var n=t.barChartLabels.indexOf(t.datePipe.transform(new Date(e.grouped_date),"MM/dd"));t.charthousevalues.forEach((function(o){var i=e.house.find((function(t){return t.id==o.house_id}));if(i&&i.daily_sorting_report){o.data[n]=i.daily_sorting_report.sum;var s=t.ths.find((function(t){return t.key==o.house_id}));o.hidden=!s.isVisible}}))})),t.barChartData=t.charthousevalues):t.barChartData=t.charthousevalues})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.barChartData=t.charthousevalues}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getHouses=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.houseService.getAllList().then((function(e){0==e.error&&(e.datas.forEach((function(e){t.house_options.push(e),t.ths.push({label:"House/Bldg no. "+e.house_name,key:e.id,canSort:!1,isVisible:!0,canToggle:!0})})),t.ths.forEach((function(e,n){t.visible_columns.push(n),t.charthousevalues.push({data:[],house_id:e.key,label:e.label}),t.barChartLabels.forEach((function(){t.charthousevalues[n].data.push(0)}))})),t.getList())})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,this.chartvalues=[],this.barChartLabels=[],this.loopDates(),[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e,n;return o.__generator(this,(function(o){switch(o.label){case 0:return t=new Date,e=t.getFullYear(),n=t.getMonth(),this.from=this.datePipe.transform(new Date(e,n,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(e,n+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,this.chartvalues=[],this.barChartLabels=[],this.loopDates(),[4,this.getList()];case 1:return o.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){return console.log("e",t),this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),this.getGraph(),[2]}))}))},t.prototype.openModal=function(){this.dialog.open($n,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,order:this.order,visible_columns:this.visible_columns,ths:this.ths,barChartLabels:this.barChartLabels,charthousevalues:this.charthousevalues}}).afterClosed().subscribe((function(t){}))},t.ctorParameters=function(){return[{type:ge},{type:c.d},{type:On},{type:Fe},{type:oe},{type:Bn},{type:u.b},{type:He.b},{type:g.b}]},t=o.__decorate([Object(i.n)({selector:"app-production-per-house",template:o.__importDefault(n("NIyI")).default,styles:[o.__importDefault(n("5OvM")).default]})],t)}(),Wn=[{label:"Transaction Date and Time",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Total Sales",key:"",canSort:!1,isVisible:!0,canToggle:!0}],Yn=function(){function t(t,e,n,o,i,s,a,r,l,c){var d=this;this.dialogRef=t,this.data=e,this.formBuilder=n,this._snackBar=o,this.dialog=i,this.datePipe=s,this.eggTypeService=a,this.performanceReportService=r,this.router=l,this.exportAsService=c,this.lineChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Total amount of sales",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,beginAtZero:!0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}],xAxes:[{ticks:{min:0,beginAtZero:!0}}]},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){return t.label},footer:function(t,e){return console.log("item",t),console.log("data",e),parseInt(t[0].value)>=1e3?"Sales: ₱ "+t[0].value.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","):"Sales: ₱ "+t[0].value}}},plugins:{datalabels:{color:"#05172e",formatter:function(t,e){if(0==t)return"";var n=Math.log10(Math.abs(t))/3|0;if(0==n)return t;var o=["","K","M","G","T","P","E"][n],i=(t/Math.pow(10,3*n)).toFixed(1)+"";return/\.0$/.test(i)&&(i=i.substr(0,i.length-2)),i+o}}}},this.lineChartLabels=[],this.lineChartType="line",this.lineChartLegend=!1,this.lineChartPlugins=[Ze],this.lineChartData=[],this.chartvalues=[],this.chartlabels=[],this.overall_value=0,this.isLoaded=!1,this.ths=Wn,this.visible_columns=[],this.items=[],this.item=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"created_at",order_by:"asc"},this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.activity=[],this.showtimeago=!0,this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"legal"},margin:10,compress:!0,pagebreak:{after:".break-now"}}},this.user_profile=[],this.date_today=new Date,this.ths.forEach((function(t,e){d.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.loopDates()},t.prototype.loopDates=function(){for(var t=new Date(this.from);t<=new Date(this.to);){this.lineChartLabels.push(this.datePipe.transform(new Date(t),"MM/dd")),this.chartvalues.push(null);var e=t.setDate(t.getDate()+1);t=new Date(e)}this.getList()},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getOverallSales(this.page,this.limit,this.from,this.to,this.order).then((function(e){0==e.error?(t.totalItems=e.datas.length,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),t.item=e.data,e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.overall_value=0,this.lineChartData=[],this.totalItems=1==this.totalItems?2:this.totalItems,[4,this.performanceReportService.getOverallSales(1,this.totalItems,this.from,this.to,this.order).then((function(e){if(t.isLoaded=!0,0==e.error){e.datas.forEach((function(e){var n=t.lineChartLabels.indexOf(t.datePipe.transform(new Date(e.date),"MM/dd"));t.chartvalues[n]=Number(e.total),t.overall_value+=Number(e.total)}));Math.max.apply(Math,t.chartvalues),Number(t.visible_columns.length);t.lineChartData=[{data:t.chartvalues,label:"Sales",borderColor:"#FF9F1A",backgroundColor:"transparent",hoverBackgroundColor:"transparent"}],console.log(t.lineChartData)}else t.lineChartData=[{data:t.chartvalues,label:"Sales",borderColor:"#FF9F1A",backgroundColor:"transparent",hoverBackgroundColor:"transparent"}]})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.lineChartData=[{data:t.chartvalues,label:"Sales",borderColor:"#FF9F1A",backgroundColor:"transparent",hoverBackgroundColor:"transparent"}]}))];case 1:return e.sent(),[2]}}))}))},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Sales-Overall-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:se.b},{type:ae.a},{type:g.b},{type:c.d},{type:On},{type:Bn},{type:u.b},{type:He.b}]},t=o.__decorate([Object(i.n)({selector:"app-report-overall-sales",template:o.__importDefault(n("Yh7n")).default,styles:[o.__importDefault(n("+j3E")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),Qn=function(){function t(t,e,n,o,i){var s=this;this.auth=t,this.dialog=e,this.datePipe=n,this.generalService=o,this.performanceReportService=i,this.lineChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,spanGaps:!0,scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Total amount of sales",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}]},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){return t.label},footer:function(t,e){return console.log("item",t),console.log("data",e),parseInt(t[0].value)>=1e3?"Sales: ₱ "+t[0].value.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","):"Sales: ₱ "+t[0].value}}},plugins:{datalabels:{color:"#05172e",formatter:function(t,e){if(0==t)return"";var n=Math.log10(Math.abs(t))/3|0;if(0==n)return t;var o=["","K","M","G","T","P","E"][n],i=(t/Math.pow(10,3*n)).toFixed(1)+"";return/\.0$/.test(i)&&(i=i.substr(0,i.length-2)),i+o}}}},this.lineChartLabels=[],this.lineChartType="line",this.lineChartLegend=!1,this.lineChartPlugins=[Ze],this.lineChartData=[],this.chartvalues=[],this.overall_value=0,this.isLoaded=!1,this.ths=Wn,this.visible_columns=[],this.items=[],this.item=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"created_at",order_by:"asc"},this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.activity=[],this.showtimeago=!0;var a=new Date,r=a.getFullYear(),l=a.getMonth();this.from=this.datePipe.transform(new Date(r,l,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(r,l+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.loopDates(),this.ths.forEach((function(t,e){s.visible_columns.push(e)}))}return t.prototype.loopDates=function(){for(var t=new Date(this.from);t<=new Date(this.to);){this.lineChartLabels.push(this.datePipe.transform(new Date(t),"MM/dd")),this.chartvalues.push(null);var e=t.setDate(t.getDate()+1);t=new Date(e)}},t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getList(),this.getActivity("transactions_listing")},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getOverallSales(this.page,this.limit,this.from,this.to,this.order).then((function(e){console.log("Overallsales",e),0==e.error?(t.totalItems=e.datas.length,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),t.item=e.data,e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.overall_value=0,this.lineChartData=[],this.totalItems=1==this.totalItems?2:this.totalItems,[4,this.performanceReportService.getOverallSales(1,this.totalItems,this.from,this.to,this.order).then((function(e){if(t.isLoaded=!0,0==e.error){e.datas.forEach((function(e){console.log("total data",e.total);var n=t.lineChartLabels.indexOf(t.datePipe.transform(new Date(e.date),"MM/dd"));t.chartvalues[n]=Number(e.total),t.overall_value+=Number(e.total)}));Math.max.apply(Math,t.chartvalues),Number(t.visible_columns.length);t.lineChartData=[{data:t.chartvalues,label:"Sales",borderColor:"#FF9F1A",backgroundColor:"transparent",hoverBackgroundColor:"transparent"}],console.log(t.lineChartData)}else t.lineChartData=[{data:t.chartvalues,label:"Sales",borderColor:"#FF9F1A",backgroundColor:"transparent",hoverBackgroundColor:"transparent"}]})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.lineChartData=[{data:t.chartvalues,label:"Sales",borderColor:"#FF9F1A",backgroundColor:"transparent",hoverBackgroundColor:"transparent"}]}))];case 1:return e.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.item=[],this.totalItems=0,this.totalPages=0,this.chartvalues=[],this.lineChartLabels=[],this.loopDates(),[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){return this.ths.forEach((function(e,n){e.isVisible=t.visible_columns.some((function(t){return t==n}))})),[2]}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.item=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e,n;return o.__generator(this,(function(o){switch(o.label){case 0:return t=new Date,e=t.getFullYear(),n=t.getMonth(),this.from=this.datePipe.transform(new Date(e,n,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(e,n+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.isLoaded=!1,this.page=1,this.items=[],this.item=[],this.totalItems=0,this.totalPages=0,this.chartvalues=[],this.lineChartLabels=[],this.loopDates(),[4,this.getList()];case 1:return o.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.item=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.prototype.openModal=function(){this.dialog.open(Yn,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,visible_columns:this.visible_columns,ths:this.ths}}).afterClosed().subscribe((function(t){}))},t.ctorParameters=function(){return[{type:ge},{type:g.b},{type:c.d},{type:Fe},{type:Bn}]},t=o.__decorate([Object(i.n)({selector:"app-overall-sales",template:o.__importDefault(n("p5Qh")).default,styles:[o.__importDefault(n("7HRm")).default]})],t)}(),Jn=function(){function t(t,e,n,o,i,s,a,r,l,c){this.dialogRef=t,this.data=e,this.datePipe=n,this.eggTypeService=o,this.generalService=i,this.houseService=s,this.performanceReportService=a,this.router=r,this.exportAsService=l,this.dialog=c,this.barChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Total no. of sales",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}]},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){return"Size: "+t.label},footer:function(t,e){if(0==Number(t[0].value))return null;var n=t[0].value.toString().split(".");return n[0]=n[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),"Qty: "+n.join(".")}}},plugins:{datalabels:{color:"#FFF",formatter:function(t,e){var n=Math.log10(Math.abs(t))/3|0;if(0==n)return t;var o=["","K","M","G","T","P","E"][n],i=(t/Math.pow(10,3*n)).toFixed(1)+"";return/\.0$/.test(i)&&(i=i.substr(0,i.length-2)),i+o}}}},this.barChartLabels=[],this.barChartType="bar",this.barChartLegend=!1,this.barChartPlugins=[Ze],this.barChartData=[],this.chartvalues=[],this.chartlabels=[],this.isLoaded=!1,this.items=[],this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.from=null,this.to=null,this.created_at=[],this.activity=[],this.showtimeago=!0,this.max_date=new Date,this.egg_type_options=[],this.visible_columns=[],this.house_options=[],this.selected_house=[],this.ths=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"legal"},margin:10,compress:!0,pagebreak:{after:".break-now"}}},this.user_profile=[],this.date_today=new Date}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.egg_type_options=this.data.egg_type_options,this.getList()},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getSalesByEggSize(this.page,this.limit,this.from,this.to,this.order).then((function(e){0==e.error?e.datas.forEach((function(e){t.items.push(e)})):(t.items=[],t.totalPages=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return this.chartvalues=[],this.chartlabels=[],this.barChartLabels=[],[4,(t=this.ths.filter((function(t){return 1==t.isVisible}))).forEach((function(t,n){e.chartvalues.push(0);var o=e.egg_type_options.find((function(e){return e.id==Number(t.id)}));e.chartlabels.push(o.type),e.barChartLabels.push(o.type_shortcode)}))];case 1:return n.sent(),this.barChartData=[],this.limit=1==this.limit?2:this.limit,[4,this.performanceReportService.getSalesByEggSize(1,this.limit,this.from,this.to,this.order).then((function(n){e.isLoaded=!0,0==n.error?(n.datas.forEach((function(n){n.egg_types.forEach((function(n,o){var i=e.ths.find((function(t){return t.id==n.id}));if(i.isVisible){var s=t.indexOf(i);e.chartvalues[s]+=Number(n.total)}}))})),e.barChartData=[{data:e.chartvalues,label:"Qty",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"}]):e.barChartData=[{data:e.chartvalues,label:"Qty",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"}]})).catch((function(t){console.log("e",t),e.isLoaded=!0,e.barChartData=[{data:e.chartvalues,label:"Qty",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"}]}))];case 2:return n.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Sales-By-Egg-Size-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:c.d},{type:On},{type:Fe},{type:oe},{type:Bn},{type:u.b},{type:He.b},{type:g.b}]},t=o.__decorate([Object(i.n)({selector:"app-report-sales-egg",template:o.__importDefault(n("NmWE")).default,styles:[o.__importDefault(n("LRir")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),Kn=function(){function t(t,e,n,o,i,s,a,r,l){this.auth=t,this.datePipe=e,this.eggTypeService=n,this.generalService=o,this.houseService=i,this.performanceReportService=s,this.router=a,this.exportAsService=r,this.dialog=l,this.barChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Total no. of sales",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}]},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){return"Size: "+t.label},footer:function(t,e){if(0==Number(t[0].value))return null;var n=t[0].value.toString().split(".");return n[0]=n[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),"Qty: "+n.join(".")+" pcs"}}},legend:{position:"top",align:"start"},plugins:{datalabels:{color:"#FFF",formatter:function(t,e){var n=Math.log10(Math.abs(t))/3|0;if(0==n)return t;var o=["","K","M","G","T","P","E"][n],i=(t/Math.pow(10,3*n)).toFixed(1)+"";return/\.0$/.test(i)&&(i=i.substr(0,i.length-2)),i+o}}}},this.barChartLabels=[],this.barChartType="bar",this.barChartLegend=!1,this.barChartPlugins=[Ze],this.barChartData=[],this.barsChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Total Quantity",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}]},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){return t.label},footer:function(t,e){if(0==Number(t[0].value))return null;var n=t[0].value.toString().split(".");return n[0]=n[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),"Total Amount: "+n.join(".")}}},plugins:{datalabels:{formatter:function(t,e){return null}}}},this.barsChartLabels=[],this.barsChartType="bar",this.barsChartLegend=!0,this.barsChartPlugins=[Ze],this.barsChartData=[],this.chartvalues=[],this.chartlabels=[],this.isLoaded=!1,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.from=null,this.to=null,this.created_at=[],this.activity=[],this.showtimeago=!0,this.max_date=new Date,this.egg_type_options=[],this.visible_columns=[],this.house_options=[],this.selected_house=[],this.ths=[],this.exportAsConfig={type:"pdf",elementId:"printable-content",options:{filename:"hey",jsPDF:{orientation:"landscape"},margin:20,image:{type:"jpeg",quality:.98},html2canvas:{scale:2},pdfCallbackFn:this.pdfCallbackFn}},this.highest_orders=[],this.credit_balance=[],this.chartvalues_balance=[],this.chartvalues_credit=[];var c=new Date,d=c.getFullYear(),u=c.getMonth();this.from=this.datePipe.transform(new Date(d,u,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(c),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to}}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getEggTypeList(),this.getHouses(),this.getActivity("daily_reports_listing"),this.getHighestorders(),this.getCreditbalance()},t.prototype.getEggTypeList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.eggTypeService.getList().then((function(e){0==e.error&&(e.datas.forEach((function(e,n){t.egg_type_options.push(e),t.ths.push({label:e.type,id:e.id,key:"type_shortcode",canSort:!1,isVisible:!0,canToggle:!0})})),t.ths.forEach((function(e,n){t.visible_columns.push(n)})),t.getList())})).catch((function(t){console.log(t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getSalesByEggSize(this.page,this.limit,this.from,this.to,this.order).then((function(e){0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return this.chartvalues=[],this.chartlabels=[],this.barChartLabels=[],[4,(t=this.ths.filter((function(t){return 1==t.isVisible}))).forEach((function(t,n){e.chartvalues.push(0);var o=e.egg_type_options.find((function(e){return e.id==Number(t.id)}));e.chartlabels.push(o.type),e.barChartLabels.push(o.type_shortcode)}))];case 1:return n.sent(),this.barChartData=[],this.totalItems=1==this.totalItems?2:this.totalItems,[4,this.performanceReportService.getSalesByEggSize(1,this.totalItems,this.from,this.to,this.order).then((function(n){e.isLoaded=!0,0==n.error?(n.datas.forEach((function(n){n.egg_types.forEach((function(n,o){var i=e.ths.find((function(t){return t.id==n.id}));if(i.isVisible){var s=t.indexOf(i);e.chartvalues[s]+=Number(n.total)}}))})),e.barChartData=[{data:e.chartvalues,label:"Qty",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"}]):e.barChartData=[{data:e.chartvalues,label:"Qty",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"}]})).catch((function(t){console.log("e",t),e.isLoaded=!0,e.barChartData=[{data:e.chartvalues,label:"Qty",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"}]}))];case 2:return n.sent(),[2]}}))}))},t.prototype.getHouses=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.houseService.getAllList().then((function(e){0==e.error&&e.datas.forEach((function(e){t.house_options.push(e),t.selected_house.push(e.id)}))})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.highest_orders=[],this.credit_balance=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[4,this.getCreditbalance()];case 2:return t.sent(),[4,this.getHighestorders()];case 3:return t.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){return this.ths.forEach((function(e,n){e.isVisible=t.visible_columns.some((function(t){return t==n}))})),this.getGraph(),[2]}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e,n;return o.__generator(this,(function(o){switch(o.label){case 0:return t=new Date,e=t.getFullYear(),n=t.getMonth(),this.from=this.datePipe.transform(new Date(e,n,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(e,n+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return o.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Sales-By-Egg-Size-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){})),[2]}))}))},t.prototype.pdfCallbackFn=function(t){for(var e=t.internal.getNumberOfPages(),n=1;n<=e;n++)t.setPage(n),t.text("Page "+n+" of "+e,t.internal.pageSize.getWidth()-100,t.internal.pageSize.getHeight()-30)},t.prototype.openModal=function(){this.dialog.open(Jn,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,visible_columns:this.visible_columns,ths:this.ths,order:this.order,egg_type_options:this.egg_type_options}}).afterClosed().subscribe((function(t){}))},t.prototype.getHighestorders=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getLocationwithhighestorders(this.from,this.to).then((function(e){t.isLoaded=!0,console.log("getHighestorders",e),0==e.error?e.data.forEach((function(e){t.highest_orders.push(e)})):t.highest_orders=[]})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getCreditbalance=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.barsChartData=[],this.barsChartLabels=[],[4,this.performanceReportService.getCreditBalance(this.from,this.to).then((function(e){console.log("getCreditbalance",e),0==e.error?(e.data.forEach((function(e){t.barsChartLabels.push("week: "+e.week),t.chartvalues_balance.push(e.balance),t.chartvalues_credit.push(e.credit)})),t.barsChartData=[{data:t.chartvalues_balance,label:"Balance",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"},{data:t.chartvalues_credit,label:"Credit",backgroundColor:"#FFC575",hoverBackgroundColor:"#FFB247"}]):t.barsChartData=[{data:t.chartvalues_balance,label:"Balance",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"},{data:t.chartvalues_credit,label:"Credit",backgroundColor:"#FFC575",hoverBackgroundColor:"#FFB247"}]})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.barsChartData=[{data:t.chartvalues_balance,label:"Balance",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"},{data:t.chartvalues_credit,label:"Credit",backgroundColor:"#FFC575",hoverBackgroundColor:"#FFB247"}]}))];case 1:return e.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:ge},{type:c.d},{type:On},{type:Fe},{type:oe},{type:Bn},{type:u.b},{type:He.b},{type:g.b}]},t=o.__decorate([Object(i.n)({selector:"app-sales-by-egg-size",template:o.__importDefault(n("uefp")).default,styles:[o.__importDefault(n("8hfo")).default]})],t)}(),Zn=[{label:"Dates",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Inflow (Qty)",key:"egg_in",canSort:!0,isVisible:!0,canToggle:!0},{label:"Outflow (Qty)",key:"egg_out",canSort:!0,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],Xn=function(){function t(t,e,n,o,i,s,a,r,l){this.dialogRef=t,this.data=e,this.formBuilder=n,this._snackBar=o,this.dialog=i,this.datePipe=s,this.performanceReportService=a,this.router=r,this.exportAsService=l,this.barChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Total no. of sales",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}]},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){return t.label},footer:function(t,e){if(0==Number(t[0].value))return null;var n=t[0].value.toString().split(".");return n[0]=n[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),"Qty: "+n.join(".")+" pcs"}}},plugins:{datalabels:{formatter:function(t,e){return null}}}},this.barChartLabels=[],this.barChartType="bar",this.barChartLegend=!1,this.barChartPlugins=[Ze],this.barChartData=[],this.chartvalues_in=[],this.chartvalues_out=[],this.isLoaded=!1,this.ths=Zn,this.visible_columns=[],this.items=[],this.item=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"created_at",order_by:"asc"},this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"legal"},margin:10,compress:!0,pagebreak:{after:".break-now"}}},this.user_profile=[],this.date_today=new Date}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.visible_columns=this.data.visible_columns,this.ths=this.data.ths,this.loopDates()},t.prototype.loopDates=function(){for(var t=new Date(this.from);t<=new Date(this.to);){this.barChartLabels.push(this.datePipe.transform(new Date(t),"MM/dd")),this.chartvalues_in.push(0),this.chartvalues_out.push(0);var e=t.setDate(t.getDate()+1);t=new Date(e)}this.getList()},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getStocks(this.page,this.limit,this.from,this.to,this.order).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.datas.length,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),t.item=e.data,e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.barChartData=[],this.totalItems=1==this.totalItems?2:this.totalItems,[4,this.performanceReportService.getStocks(1,this.totalItems,this.from,this.to,this.order).then((function(e){t.isLoaded=!0,0==e.error?(e.datas.forEach((function(e){var n=t.barChartLabels.indexOf(t.datePipe.transform(new Date(e.created_at),"MM/dd"));t.chartvalues_in[n]=Number(e.egg_in),t.chartvalues_out[n]=Number(e.egg_out)})),t.barChartData=[{data:t.chartvalues_in,label:"Inflow",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"},{data:t.chartvalues_out,label:"Outflow",backgroundColor:"#FFC575",hoverBackgroundColor:"#FFB247"}]):t.barChartData=[{data:t.chartvalues_in,label:"Inflow",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"},{data:t.chartvalues_out,label:"Outflow",backgroundColor:"#FFC575",hoverBackgroundColor:"#FFB247"}]})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.barChartData=[{data:t.chartvalues_in,label:"Inflow",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"},{data:t.chartvalues_out,label:"Outflow",backgroundColor:"#FFC575",hoverBackgroundColor:"#FFB247"}]}))];case 1:return e.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Stock-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:se.b},{type:ae.a},{type:g.b},{type:c.d},{type:Bn},{type:u.b},{type:He.b}]},t=o.__decorate([Object(i.n)({selector:"app-report-stocks",template:o.__importDefault(n("/oyo")).default,styles:[o.__importDefault(n("i8yi")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),to=function(){function t(t,e,n,o,i){var s=this;this.auth=t,this.datePipe=e,this.generalService=n,this.performanceReportService=o,this.dialog=i,this.barChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Total no. of sales",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}]},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){return t.label},footer:function(t,e){if(0==Number(t[0].value))return null;var n=t[0].value.toString().split(".");return n[0]=n[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),"Qty: "+n.join(".")+" pcs"}}},plugins:{datalabels:{formatter:function(t,e){return null}}}},this.barChartLabels=[],this.barChartType="bar",this.barChartLegend=!0,this.barChartPlugins=[Ze],this.barChartData=[],this.chartvalues_in=[],this.chartvalues_out=[],this.isLoaded=!1,this.ths=Zn,this.visible_columns=[],this.items=[],this.item=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"created_at",order_by:"asc"},this.from=null,this.to=null,this.created_at=[],this.show_filter=!1;var a=new Date,r=a.getFullYear(),l=a.getMonth();this.from=this.datePipe.transform(new Date(r,l,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(r,l+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.loopDates(),this.ths.forEach((function(t,e){s.visible_columns.push(e)}))}return t.prototype.loopDates=function(){for(var t=new Date(this.from);t<=new Date(this.to);){this.barChartLabels.push(this.datePipe.transform(new Date(t),"MM/dd")),this.chartvalues_in.push(0),this.chartvalues_out.push(0);var e=t.setDate(t.getDate()+1);t=new Date(e)}},t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getList()},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.performanceReportService.getStocks(this.page,this.limit,this.from,this.to,this.order).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.datas.length,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),t.item=e.data,e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){console.log("e",e),t.isLoaded=!0}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.barChartData=[],this.totalItems=1==this.totalItems?2:this.totalItems,[4,this.performanceReportService.getStocks(1,this.totalItems,this.from,this.to,this.order).then((function(e){t.isLoaded=!0,0==e.error?(e.datas.forEach((function(e){var n=t.barChartLabels.indexOf(t.datePipe.transform(new Date(e.created_at),"MM/dd"));t.chartvalues_in[n]=Number(e.egg_in),t.chartvalues_out[n]=Number(e.egg_out)})),t.barChartData=[{data:t.chartvalues_in,label:"Inflow",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"},{data:t.chartvalues_out,label:"Outflow",backgroundColor:"#FFC575",hoverBackgroundColor:"#FFB247"}],console.log("barchartdata",t.barChartData)):t.barChartData=[{data:t.chartvalues_in,label:"Inflow",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"},{data:t.chartvalues_out,label:"Outflow",backgroundColor:"#FFC575",hoverBackgroundColor:"#FFB247"}]})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.barChartData=[{data:t.chartvalues_in,label:"Inflow",backgroundColor:"#FF9F1A",hoverBackgroundColor:"#FFB247"},{data:t.chartvalues_out,label:"Outflow",backgroundColor:"#FFC575",hoverBackgroundColor:"#FFB247"}]}))];case 1:return e.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.item=[],this.totalItems=0,this.totalPages=0,this.chartvalues_in=[],this.chartvalues_out=[],this.barChartLabels=[],this.loopDates(),[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e,n;return o.__generator(this,(function(o){switch(o.label){case 0:return t=new Date,e=t.getFullYear(),n=t.getMonth(),this.from=this.datePipe.transform(new Date(e,n,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(e,n+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.isLoaded=!1,this.page=1,this.items=[],this.item=[],this.totalItems=0,this.totalPages=0,this.chartvalues_in=[],this.chartvalues_out=[],this.barChartLabels=[],this.loopDates(),[4,this.getList()];case 1:return o.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.openModal=function(){this.dialog.open(Xn,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,visible_columns:this.visible_columns,ths:this.ths}}).afterClosed().subscribe((function(t){}))},t.ctorParameters=function(){return[{type:ge},{type:c.d},{type:Fe},{type:Bn},{type:g.b}]},t=o.__decorate([Object(i.n)({selector:"app-stocks-listing",template:o.__importDefault(n("dkWk")).default,styles:[o.__importDefault(n("qzQC")).default]})],t)}(),eo=function(){function t(){}return t.prototype.ngOnInit=function(){},t=o.__decorate([Object(i.n)({selector:"app-stocks-view",template:o.__importDefault(n("oCoS")).default,styles:[o.__importDefault(n("G5K1")).default]})],t)}(),no=[{label:"OR No.",key:"attachment_no",canSort:!0,isVisible:!0,canToggle:!0},{label:"Amount",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Uploaded by",key:"first_name",canSort:!0,isVisible:!0,canToggle:!0},{label:"Upload Date",key:"updated_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],oo=[{label:"Type",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Uploaded by",key:"first_name",canSort:!0,isVisible:!0,canToggle:!0},{label:"Upload Date",key:"updated_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],io=[{label:"Official Receipt",value:1},{label:"Payment Form",value:2},{label:"Credit Form",value:3},{label:"Balance Form",value:4}],so=function(){function t(t,e,n,o,i,s,a,r,l){this.dialogRef=t,this.data=e,this.events=n,this.formBuilder=o,this._snackBar=i,this.dialog=s,this.strand=a,this.router=r,this.location=l,this.item=[],this.paymentattachment_options=io,this.type_label="Official Receipt",this.action="create",this.modal_title="Upload Signed Form",this.modal_primary_button="Save",this.modal_message="",this.isLoading=!1,this.isPhotoLoaded=!1,this.isPhotoCropped=!1,this.photoUploadWrongFile=!1,this.uploadMaxLimitReached=!1,this.attachmentForm=this.formBuilder.group({id:[""],type:[""],attachment_no:[""],payment_id:[""],attachment:["",se.k.compose([se.k.required])]})}return t.prototype.ngOnInit=function(){this.item=this.data.item,this.action=this.data.action,this.payment_id=this.data.payment_id,console.log("item",this.item),this.item&&(this.attachmentForm.controls.id.setValue(this.item.id),this.attachmentForm.controls.type.setValue(Number(this.item.type)),1==this.item.type&&(this.attachmentForm.controls.attachment_no.setValue(this.item.attachment_no),this.attachmentForm.controls.attachment_no.setValidators([se.k.required])),this.type_label=this.item.type_label,this.temp_photo=this.item.attachment,this.attachmentForm.controls.attachment.clearValidators()),this.attachmentForm.controls.payment_id.setValue(this.payment_id)},t.prototype.changeType=function(t){var e=this.attachmentForm.controls.type.value;console.log("type",e),1==e?(this.type_label="Official Receipt",this.attachmentForm.controls.attachment_no.setValidators([se.k.required]),this.attachmentForm.controls.attachment_no.setValue(this.item.attachment_no)):2==e?(this.type_label="Payment Form",this.attachmentForm.controls.attachment_no.clearValidators(),this.attachmentForm.controls.attachment_no.setValue("")):3==e?(this.type_label="Credit Form",this.attachmentForm.controls.attachment_no.clearValidators(),this.attachmentForm.controls.attachment_no.setValue("")):4==e&&(this.type_label="Balance Form",this.attachmentForm.controls.attachment_no.clearValidators(),this.attachmentForm.controls.attachment_no.setValue(""))},t.prototype.photoChange=function(t){console.log(t),t.target.files[0].type.match("image.*")?t.target.files[0].size>1e6?this.uploadMaxLimitReached=!0:(this.uploadMaxLimitReached=!1,this.isPhotoLoaded=!1,this.isPhotoCropped=!1,this.photoUploadWrongFile=!1,this.photo=t,this.temp_photo=null):(this.isPhotoLoaded=!0,this.isPhotoCropped=!0,this.photoUploadWrongFile=!0,this.photo=null)},t.prototype.imagePhotoCropped=function(t){this.croppedPhoto=t.base64,this.isPhotoCropped=!0;var e=new File([t.file],this.strand.generateFileName());this.attachmentForm.controls.attachment.setValue(e)},t.prototype.imageLoaded=function(){this.isPhotoLoaded=!0},t.prototype.startCrop=function(t){this.imageCropper.crop()},t.prototype.openModal=function(){var t=this;this.closeModal(),this.dialog.open(me,{width:"400px",data:{item:this.attachmentForm.value,action:this.action?this.action:"attachment_create"}}).afterClosed().subscribe((function(e){e&&t._snackBar.open(e,"Okay",{verticalPosition:"top",announcementMessage:e,duration:3e3})}))},t.prototype.closeModal=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dialogRef.close(t)];case 1:return e.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:d.b},{type:se.b},{type:ae.a},{type:g.b},{type:Ie},{type:u.b},{type:c.g}]},o.__decorate([Object(i.nb)(ke.a,{static:!1})],t.prototype,"imageCropper",void 0),t=o.__decorate([Object(i.n)({selector:"app-view-payment-modal",template:o.__importDefault(n("PoNx")).default,styles:[o.__importDefault(n("vrfp")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),ao=function(){function t(t,e,n,o,i,s,a,r){var l=this;this._route=t,this.generalService=e,this.dialog=n,this._snackBar=o,this.datePipe=i,this.events=s,this.paymentService=a,this.location=r,this.items=[],this.item=[],this.ths=no,this.visible_columns=[],this.visible_columns_others=[],this.isLoaded=!1,this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"updated_at",order_by:"desc"},this.search="",this.type=0,this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.activity=[],this.showtimeago=!1,this.ths_others=oo,this.items_others=[],this.ths.forEach((function(t,e){l.visible_columns.push(e)})),this.ths_others.forEach((function(t,e){l.visible_columns_others.push(e)})),this.events.subscribe("attachments_refresh",(function(t){t&&(l.isLoaded=!1,l.page=1,l.items=[],l.items_others=[],l.totalItems=0,l.totalPages=0,l.ngOnInit())}))}return t.prototype.ngOnInit=function(){var t=this;this._route.params.subscribe((function(e){t.order_id=e.id,t.getList(),t.getListOthers()}))},t.prototype.getListOthers=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.paymentService.getListByOrderId(this.page,this.limit,this.order_id,this.type,this.from,this.to,this.order,this.search).then((function(e){console.log("getListOthers",e),0==e.error?t.items_others=e.datas:t.items_others=[]})).catch((function(t){console.log("e",t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.paymentService.getListByOrderId(this.page,this.limit,this.order_id,1,this.from,this.to,this.order,this.search).then((function(e){t.isLoaded=!0,console.log("getList",e),0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),t.item=e.data,e.datas.forEach((function(e){t.items.push(e)})),t.getActivity("payment_attachment_listing")):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t,null,null,null,this.item.payment_id).then((function(t){console.log("resres",t),0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.type=0,this.from=null,this.to=null,this.created_at=[],this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){return this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),1==this.visible_columns.length?(t=this.ths.length-1,this.ths[t].isVisible=!1):(t=this.ths.length-1,this.ths[t].isVisible=!0),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.openModal=function(t,e){var n=this;"attachment_delete"==e?this.dialog.open(me,{width:"400px",data:{item:t||null,action:e||null,payment_id:this.item.payment.id}}).afterClosed().subscribe((function(t){t&&n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3})})):this.dialog.open(so,{width:"400px",data:{item:t||null,action:e||null,payment_id:this.item.payment.id}}).afterClosed().subscribe((function(t){t&&n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3})}))},t.prototype.goBack=function(){this.location.back()},t.ctorParameters=function(){return[{type:u.a},{type:Fe},{type:g.b},{type:ae.a},{type:c.d},{type:d.b},{type:de},{type:c.g}]},t=o.__decorate([Object(i.n)({selector:"app-payment-listing",template:o.__importDefault(n("JMJj")).default,styles:[o.__importDefault(n("9Ylf")).default]})],t)}(),ro=function(){function t(t,e,n,o,i,s,a,r,l,c){this.formBuilder=t,this.location=e,this._snackBar=n,this.dialog=o,this._route=i,this.session=s,this.transactionsService=a,this.strand=r,this.route=l,this.ordersService=c,this.item=[],this.order_items=[],this.isLoaded=!1,this.mode_of_payment_options=Re,this.payment_status_options=Te,this.userProfile=[],this.canChangeMode=!1,this.min_date=new Date,this.max_date=new Date,this.mode_of_payment=null,this.isReceiptPhotoLoaded=!1,this.isReceiptPhotoCropped=!1,this.receiptUploadWrongFile=!1,this.uploadReceiptMaxLimitReached=!1,this.max_date.setDate(this.max_date.getDate()+7),this.paymentForm=this.formBuilder.group({id:[null],mode_of_payment:[null],payment_status:[null],total_price:[null],payment:[null],balance:[null],due_date:[null],receipt_photo:[null],receipt_no:[null,se.k.compose([se.k.required])]})}return t.prototype.ngOnInit=function(){var t=this;this.userProfile=JSON.parse(localStorage.getItem("user")),this.canChangeMode=5!=this.userProfile.user_role_id,this._route.params.subscribe((function(e){t.order_id=e.id,t.getRecord()}))},t.prototype.getRecord=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.transactionsService.getRecord(this.order_id).then((function(e){t.isLoaded=!0,0==e.error&&(t.item=e.data,console.log("this item",t.item),t.order_items=e.data.order_items,t.mode_of_payment=t.item.mode_of_payment,t.paymentForm.controls.id.setValue(t.item.id),t.paymentForm.controls.mode_of_payment.setValue(Number(t.item.mode_of_payment)),t.paymentForm.controls.payment_status.setValue(Number(t.item.payment_status)),t.paymentForm.controls.total_price.setValue(Number(t.item.total_price)),t.paymentForm.controls.payment.setValue(t.item.payment.payment),1==t.mode_of_payment?t.paymentForm.controls.payment.setValidators([se.k.required,se.k.min(Number(t.item.total_price)),se.k.max(Number(t.item.total_price))]):2==t.mode_of_payment?t.item.last_payment?t.paymentForm.controls.payment.setValidators([se.k.required,se.k.min(Number(t.item.total_price)),se.k.max(Number(t.item.total_price))]):(console.log("this.item.last_payment",t.item.last_payment),console.log("this.mode_of_payment",t.mode_of_payment),t.paymentForm.controls.payment.setValidators([se.k.required,se.k.min(0),se.k.max(0)])):3==t.mode_of_payment&&t.paymentForm.controls.payment.setValidators([se.k.required,se.k.min(Number(t.item.total_price)/2),se.k.max(Number(t.item.total_price))]),t.item.last_payment?(t.paymentForm.controls.balance.setValue(Number(t.item.total_price)-Number(t.item.last_payment.payment)),t.paymentForm.controls.payment.setValue(null),2==t.mode_of_payment&&t.paymentForm.controls.payment.setValue(Number(t.item.total_price)),t.paymentForm.controls.payment.clearValidators(),t.paymentForm.controls.payment.setValidators([se.k.required,se.k.min(Number(t.item.total_price)-Number(t.item.last_payment.payment)),se.k.max(Number(t.item.total_price)-Number(t.item.last_payment.payment))])):t.paymentForm.controls.balance.setValue(Number(t.item.payment.balance)),t.paymentForm.controls.due_date.setValue(t.item.payment.due_date))})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.changePayment=function(t){this.mode_of_payment=this.paymentForm.controls.mode_of_payment.value,1==this.mode_of_payment?(this.paymentForm.controls.due_date.clearValidators(),this.paymentForm.controls.payment.setValue(this.item.payment.payment),this.paymentForm.controls.balance.setValue(this.item.payment.balance),this.paymentForm.controls.due_date.setValue(null),this.paymentForm.controls.payment.setValidators([se.k.required,se.k.min(Number(this.item.total_price)),se.k.max(Number(this.item.total_price))])):2==this.mode_of_payment?(this.paymentForm.controls.payment.clearValidators(),this.paymentForm.controls.payment.setValue(this.item.payment.payment),this.paymentForm.controls.balance.setValue(Number(this.item.payment.balance)+Number(this.item.payment.payment)),this.paymentForm.controls.due_date.setValidators([se.k.required]),this.paymentForm.controls.due_date.setValue(null),this.paymentForm.controls.payment.setValidators([se.k.required,se.k.min(0),se.k.max(Number(this.item.total_price))])):3==this.mode_of_payment&&(this.paymentForm.controls.payment.setValue(0),this.paymentForm.controls.balance.setValue(this.item.total_price),this.item.last_payment?this.paymentForm.controls.payment.setValidators([se.k.required,se.k.min(Number(this.item.total_price)-Number(this.item.last_payment.payment)),se.k.max(Number(this.item.total_price)-Number(this.item.last_payment.payment))]):this.paymentForm.controls.payment.setValidators([se.k.required,se.k.min(Number(this.item.total_price)/2),se.k.max(this.item.total_price)]),this.paymentForm.controls.due_date.setValidators([se.k.required]),this.paymentForm.controls.due_date.setValue(null))},t.prototype.calculateRemaining=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t;return o.__generator(this,(function(e){return t=0,(t=this.item.last_payment?Number(this.item.total_price)-Number(this.item.last_payment.payment)-Number(this.paymentForm.controls.payment.value):Number(this.paymentForm.controls.total_price.value)-Number(this.paymentForm.controls.payment.value))<0&&(t=0),this.paymentForm.controls.balance.setValue(t),[2]}))}))},t.prototype.enterCashAmount=function(t){var e=Number(this.paymentForm.controls.total_price.value)-Number(this.paymentForm.controls.payment.value);this.paymentForm.controls.balance.setValue(e)},t.prototype.receiptChange=function(t){console.log(t),t.target.files[0].type.match("image.*")?t.target.files[0].size>1e6?this.uploadReceiptMaxLimitReached=!0:(this.uploadReceiptMaxLimitReached=!1,this.isReceiptPhotoLoaded=!1,this.isReceiptPhotoCropped=!1,this.receiptUploadWrongFile=!1,this.receiptPhoto=t):(this.isReceiptPhotoLoaded=!0,this.isReceiptPhotoCropped=!0,this.receiptUploadWrongFile=!0,this.receiptPhoto=null)},t.prototype.imageReceiptPhotoCropped=function(t){this.croppedReceiptPhoto=t.base64,this.isReceiptPhotoCropped=!0;var e=new File([t.file],this.strand.generateFileName());this.paymentForm.controls.receipt_photo.setValue(e)},t.prototype.imageReceiptLoaded=function(){this.isReceiptPhotoLoaded=!0},t.prototype.startCrop=function(t){this.imageCropper.crop()},t.prototype.goBack=function(t,e){var n=this;this.dialog.open(he,{width:"400px",data:{item:null,action:t,page:e}}).afterClosed().subscribe((function(t){t&&n.location.back()}))},t.prototype.openModal=function(){var t=this;console.log("this.paymentForm.value",this.paymentForm.value),this.dialog.open(me,{width:"400px",data:{item:this.paymentForm.value,action:"payment_add"}}).afterClosed().subscribe((function(e){e&&(t.location.back(),t._snackBar.open(e,"Okay",{verticalPosition:"top",announcementMessage:e,duration:3e3}))}))},t.prototype.chooseDate=function(t){},t.prototype.savePrint=function(){var t=this;this.dialog.open(me,{width:"400px",data:{item:this.paymentForm.value,action:"payment_add"}}).afterClosed().subscribe((function(e){e&&t.route.navigate(["/transactions/payments/print",t.item.id,"payment"])}))},t.ctorParameters=function(){return[{type:se.b},{type:c.g},{type:ae.a},{type:g.b},{type:u.a},{type:f.b},{type:Oe},{type:Ie},{type:u.b},{type:ie}]},o.__decorate([Object(i.nb)(ke.a,{static:!1})],t.prototype,"imageCropper",void 0),t=o.__decorate([Object(i.n)({selector:"app-payment-update",template:o.__importDefault(n("psKS")).default,styles:[o.__importDefault(n("8y1a")).default]})],t)}(),lo=[{label:"Egg Sizes",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Case",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Tray",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Pcs",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Total Pcs",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Price per Piece",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Total Price",key:"",canSort:!1,isVisible:!0,canToggle:!0}],co=function(){function t(t,e,n,o,i,s,a,r,l,c,d){var u=this;this.formBuilder=t,this.location=e,this._snackBar=n,this.dialog=o,this._route=i,this.session=s,this.transactionsService=a,this.strand=r,this.route=l,this.exportAsService=c,this.datePipe=d,this.item=[],this.order_items=[],this.isLoaded=!1,this.date_today=new Date,this.ths=lo,this.visible_columns=[],this.user_profile=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"portrait",format:"letter"},margin:10,compress:!0,pagebreak:{after:".break-now"},image:{type:"jpeg",quality:.95},html2canvas:{scale:2}}},this.ths.forEach((function(t,e){u.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=this,e=JSON.parse(localStorage.getItem("user"));this.user_profile=e,this._route.params.subscribe((function(e){console.log(e),t.order_id=e.id,t.fromPage=e.from,t.getRecord()}))},t.prototype.getRecord=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.transactionsService.getRecord(this.order_id).then((function(e){t.isLoaded=!0,0==e.error&&(e.data.sub_total_price=Number(e.data.total_price)+Number(e.data.discount),t.item=e.data,console.log("this item",t.item),e.data.order_items.forEach((function(e,n){var o=[{},{},{}],i=0;console.log("data",e),e.order_item_details.forEach((function(t){1==t.type_id&&(o[0]=t,i=t.price),2==t.type_id&&(o[1]=t,i=t.price),3==t.type_id&&(o[2]=t,i=t.price)})),e.price=i,e.order_item_details=o,t.order_items.push(e)})),console.log("order_items",t.order_items))})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.goBack=function(){"payment"==this.fromPage?this.route.navigate(["/transactions/view",this.order_id]):this.location.back()},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Customer-Transaction-Form-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){})),[2]}))}))},t.ctorParameters=function(){return[{type:se.b},{type:c.g},{type:ae.a},{type:g.b},{type:u.a},{type:f.b},{type:Oe},{type:Ie},{type:u.b},{type:He.b},{type:c.d}]},t=o.__decorate([Object(i.n)({selector:"app-payment-print",template:o.__importDefault(n("Vh4n")).default,styles:[o.__importDefault(n("Jpie")).default]})],t)}(),uo=[{label:"Egg Size",key:"type",canSort:!0,isVisible:!0,canToggle:!0},{label:"Price per piece",key:"price",canSort:!0,isVisible:!0,canToggle:!0},{label:"Price per tray",key:"price",canSort:!0,isVisible:!0,canToggle:!0},{label:"Price per case",key:"price",canSort:!0,isVisible:!0,canToggle:!0},{label:"Pricing effective date",key:"updated_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],mo=function(){function t(t,e,n,o,i,s,a){this.dialogRef=t,this.data=e,this.events=n,this.formBuilder=o,this.priceManagementService=i,this._snackBar=s,this.dialog=a,this.item=[],this.action="create",this.modal_title="Update Price Details",this.modal_primary_button="Update pricing",this.modal_message="",this.isLoading=!1,this.priceForm=this.formBuilder.group({id:[null],current_price:[""],price:["",se.k.compose([se.k.required,se.k.min(.01)])]})}return t.prototype.ngOnInit=function(){this.item=this.data.item,this.action=this.data.action,console.log(this.item),this.item&&(this.priceForm.controls.id.setValue(this.item.id),this.priceForm.controls.current_price.setValue(this.item.per_piece),this.modal_message=this.item.egg_type_type)},t.prototype.submit=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){return this.dialog.open(me,{width:"400px",data:{item:this.priceForm.value,action:"create"==this.action?"price_create":"price_update"}}).afterClosed().subscribe((function(e){e&&t._snackBar.open(e,"Okay",{verticalPosition:"top",announcementMessage:e,duration:3e3})})),this.closeModal(),[2]}))}))},t.prototype.proceedProcess=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoading=!0,this.modal_primary_button="create"==this.action?"Saving...":"Updating...",[4,this.priceManagementService.save(this.priceForm.value).then((function(e){t.isLoading=!1,0==e.error?t.closeModal(e.message):(t.modal_primary_button="create"==t.action?"Save price":"Update pricing",t._snackBar.open(e.message,null,{verticalPosition:"top",announcementMessage:e.message,duration:3e3}))})).catch((function(e){t.isLoading=!1,console.log("e",e),t._snackBar.open(e,null,{verticalPosition:"top",announcementMessage:e,duration:3e3})}))];case 1:return e.sent(),[2]}}))}))},t.prototype.closeModal=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dialogRef.close(t)];case 1:return e.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:d.b},{type:se.b},{type:ce},{type:ae.a},{type:g.b}]},t=o.__decorate([Object(i.n)({selector:"app-price-modal",template:o.__importDefault(n("fNMn")).default,styles:[o.__importDefault(n("qg+9")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),po=function(){function t(t,e,n,o,i,s,a,r,l,c){var d=this;this.dialogRef=t,this.data=e,this.exportAsService=n,this.dialog=o,this.events=i,this._snackBar=s,this.datePipe=a,this.eggTypeService=r,this.generalService=l,this.priceManagementService=c,this.isLoaded=!1,this.ths=uo,this.limits=Me,this.egg_type_options=[],this.visible_columns=[],this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"type",order_by:"asc"},this.search="",this.staff_items=[],this.from=null,this.to=null,this.created_at=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"A4"},margin:10,compress:!0,pagebreak:{after:".break-now"},showall:!0,pdfCallbackFn:this.pdfCallbackFn}},this.user_profile=[],this.date_today=new Date,this.ths.forEach((function(t,e){d.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.ths=this.data.ths,this.type=this.data.type,this.order=this.data.order,this.search=this.data.search,this.visible_columns=this.data.visible_columns,this.getList()},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.priceManagementService.getList(this.page,this.limit,this.type,this.from,this.to,this.order,this.search).then((function(e){t.isLoaded=!0,0==e.error?e.datas.forEach((function(e){e.per_piece=Number(e.price),e.per_case=360*Number(e.price),e.per_tray=30*Number(e.price),t.items.push(e)})):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.pdfCallbackFn=function(t){for(var e=t.internal.getNumberOfPages(),n=1;n<=e;n++)t.setPage(n),t.setFontSize(12),t.text(n+" of "+e,t.internal.pageSize.getWidth()-25,t.internal.pageSize.getHeight()-10)},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Egg-Price-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:He.b},{type:g.b},{type:d.b},{type:ae.a},{type:c.d},{type:On},{type:Fe},{type:ce}]},t=o.__decorate([Object(i.n)({selector:"app-report-egg-price",template:o.__importDefault(n("J3Zg")).default,styles:[o.__importDefault(n("u4Dn")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),ho=function(){function t(t,e,n,o,i,s,a,r){var l=this;this.auth=t,this.dialog=e,this.events=n,this._snackBar=o,this.datePipe=i,this.eggTypeService=s,this.generalService=a,this.priceManagementService=r,this.isLoaded=!1,this.ths=uo,this.limits=Me,this.egg_type_options=[],this.visible_columns=[],this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"type",order_by:"asc"},this.search="",this.staff_items=[],this.type=0,this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.activity=[],this.showtimeago=!0,this.ths.forEach((function(t,e){l.visible_columns.push(e)})),this.events.subscribe("price_refresh",(function(t){t&&(l.isLoaded=!1,l.items=[],l.totalItems=0,l.totalPages=0,l.ngOnInit())}))}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getList(),this.getEggTypeList(),this.getActivity("price_management_listing")},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.priceManagementService.getList(this.page,this.limit,this.type,this.from,this.to,this.order,this.search).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){e.per_piece=Number(e.price),e.per_case=360*Number(e.price),e.per_tray=30*Number(e.price),t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getEggTypeList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.eggTypeService.getList().then((function(e){0==e.error&&(t.egg_type_options=e.datas)})).catch((function(t){console.log(t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.changeType=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.type=0,this.from=null,this.to=null,this.created_at=[],this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){return this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),1==this.visible_columns.length?(t=this.ths.length-1,this.ths[t].isVisible=!1):(t=this.ths.length-1,this.ths[t].isVisible=!0),[2]}))}))},t.prototype.reloadData=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.openModal=function(t,e){var n=this;this.dialog.open(mo,{width:"400px",data:{item:t||null,action:e||"create"}}).afterClosed().subscribe((function(t){t&&(n.reloadData(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.prototype.downloadModal=function(){this.dialog.open(po,{panelClass:"scroll",data:{page:1,limit:this.totalItems,from:this.from,to:this.to,order:this.order,search:this.search,visible_columns:this.visible_columns,ths:this.ths}}).afterClosed().subscribe((function(t){}))},t.prototype.exportToCsv=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return t=[],[4,this.priceManagementService.getList(1,this.totalItems,this.type,this.from,this.to,this.order,this.search).then((function(n){if(0==n.error){n.datas.forEach((function(n){n.per_piece=Number(n.price),n.per_case=360*Number(n.price),n.per_tray=30*Number(n.price),t.push({"Egg Size":n.egg_type_type,"Price Per Piece":n.per_piece,"Price Per Tray":n.per_tray,"Price Per Case":n.per_case,"Pricing Effective Date":e.datePipe.transform(new Date(n.updated_at),"yyyy-MM-dd")})}));var o={fieldSeparator:",",quoteStrings:'"',decimalSeparator:".",showLabels:!0,showTitle:!0,title:"Report-Egg-Price-"+e.datePipe.transform(new Date,"yyyy-MM-dd"),useTextFile:!1,useBom:!0,useKeysAsHeaders:!0,filename:"Report-Egg-Price-"+e.datePipe.transform(new Date,"yyyy-MM-dd")};new ze.ExportToCsv(o).generateCsv(t)}})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:ge},{type:g.b},{type:d.b},{type:ae.a},{type:c.d},{type:On},{type:Fe},{type:ce}]},t=o.__decorate([Object(i.n)({selector:"app-price-management-listing",template:o.__importDefault(n("BtBI")).default,styles:[o.__importDefault(n("L8yz")).default]})],t)}(),go=[{label:"Date",key:"updated_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Price",key:"price",canSort:!0,isVisible:!0,canToggle:!0}],fo=function(){function t(t,e,n,o,i,s,a,r){var l=this;this.dialogRef=t,this.data=e,this.exportAsService=n,this._route=o,this.datePipe=i,this.eggTypeService=s,this.priceManagementService=a,this.dialog=r,this.isLoaded=!1,this.ths=go,this.egg_type_options=[],this.visible_columns=[],this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"updated_at",order_by:"asc"},this.from=null,this.to=null,this.created_at=[],this.type_name="",this.lineChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,spanGaps:!0,scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Price",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}],xAxes:[{ticks:{beginAtZero:!0,min:0}}]},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){return t.label},footer:function(t,e){return console.log("item",t),console.log("data",e),parseInt(t[0].value)>=1e3?"Price: ₱ "+t[0].value.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","):"Price: ₱ "+t[0].value}}},plugins:{datalabels:{color:"#05172e",formatter:function(t,e){return""}}}},this.lineChartLabels=[],this.lineChartType="line",this.lineChartLegend=!1,this.lineChartPlugins=[Ze],this.lineChartData=[],this.chartvalues=[],this.chartlabels=[],this.exportAsConfig={type:"pdf",elementId:"printable-section",options:{jsPDF:{orientation:"landscape",format:"legal"},margin:10,compress:!0,pagebreak:{after:".break-now"}}},this.user_profile=[],this.date_today=new Date,this.ths.forEach((function(t,e){l.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){this.getEggTypeList();var t=JSON.parse(localStorage.getItem("user"));this.user_profile=t,this.page=this.data.page,this.limit=this.data.limit,this.from=this.data.from,this.to=this.data.to,this.ths=this.data.ths,this.type=this.data.type,this.order=this.data.order,this.visible_columns=this.data.visible_columns,this.loopDates()},t.prototype.loopDates=function(){for(var t=new Date(this.from);t<=new Date(this.to);){this.lineChartLabels.push(this.datePipe.transform(new Date(t),"MM/dd")),this.chartvalues.push(null);var e=t.setDate(t.getDate()+1);t=new Date(e)}this.getList()},t.prototype.getEggTypeList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.eggTypeService.getList().then((function(e){if(0==e.error){t.egg_type_options=e.datas;var n=t.egg_type_options.find((function(e){return e.id==t.type}));t.type_name=n.type}})).catch((function(t){console.log(t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.priceManagementService.getPriceTrend(this.page,this.limit,this.type,this.from,this.to,this.order).then((function(e){0==e.error?e.datas.forEach((function(e){t.items.push(e)})):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.chartvalues=[],this.lineChartData=[],[4,this.priceManagementService.getPriceTrend(1,this.limit,this.type,this.from,this.to,this.order).then((function(e){t.isLoaded=!0,0==e.error?(e.datas.forEach((function(e){var n=t.lineChartLabels.indexOf(t.datePipe.transform(new Date(e.updated_at),"MM/dd"));t.chartvalues[n]=Number(e.price)})),t.lineChartData=[{data:t.chartvalues,label:"Price",borderColor:"#FF9F1A",backgroundColor:"transparent",hoverBackgroundColor:"transparent"}]):t.lineChartData=[{data:t.chartvalues,label:"Sales",borderColor:"#FF9F1A",backgroundColor:"transparent",hoverBackgroundColor:"transparent"}]})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.lineChartData=[{data:t.chartvalues,label:"Sales",borderColor:"#FF9F1A",backgroundColor:"transparent",hoverBackgroundColor:"transparent"}]}))];case 1:return e.sent(),[2]}}))}))},t.prototype.exportPdf=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n,i=this;return o.__generator(this,(function(o){return this,this.exportAsConfig.type=t,e&&(this.exportAsConfig.options.jsPDF.orientation=e),n="Report-Price-Trend-"+this.datePipe.transform(new Date,"yyyy-MM-dd"),this.exportAsService.save(this.exportAsConfig,n).subscribe((function(){i.dialogRef.close()})),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:He.b},{type:u.a},{type:c.d},{type:On},{type:ce},{type:g.b}]},t=o.__decorate([Object(i.n)({selector:"app-report-price-trend",template:o.__importDefault(n("05oP")).default,styles:[o.__importDefault(n("+OpE")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),bo=function(){function t(t,e,n,o,i,s,a){var r=this;this.auth=t,this._route=e,this.datePipe=n,this.eggTypeService=o,this.priceManagementService=i,this.dialog=s,this.location=a,this.isLoaded=!1,this.ths=go,this.egg_type_options=[],this.visible_columns=[],this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"updated_at",order_by:"asc"},this.from=null,this.to=null,this.created_at=[],this.type_name="",this.lineChartOptions={responsive:!0,maintainAspectRatio:!1,aspectRatio:.8,spanGaps:!0,scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Price",fontSize:16,lineHeight:4,fontColor:"#05172e"},ticks:{min:0,callback:function(t,e,n){var o=Math.log10(Math.abs(t))/3|0;if(0==o)return t;var i=["","K","M","G","T","P","E"][o],s=(t/Math.pow(10,3*o)).toFixed(1)+"";return/\.0$/.test(s)&&(s=s.substr(0,s.length-2)),s+i}}}],xAxes:[{ticks:{beginAtZero:!0,min:0}}]},tooltips:{callbacks:{title:function(t,e){return null},label:function(t,e){return t.label},footer:function(t,e){return console.log("item",t),console.log("data",e),parseInt(t[0].value)>=1e3?"Price: ₱ "+t[0].value.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","):"Price: ₱ "+t[0].value}}},plugins:{datalabels:{color:"#05172e",formatter:function(t,e){return""}}}},this.lineChartLabels=[],this.lineChartType="line",this.lineChartLegend=!1,this.lineChartPlugins=[Ze],this.lineChartData=[],this.chartvalues=[],this.chartlabels=[];var l=new Date,c=l.getFullYear(),d=l.getMonth();this.from=this.datePipe.transform(new Date(c,d,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(c,d+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.loopDates(),this.ths.forEach((function(t,e){r.visible_columns.push(e)}))}return t.prototype.loopDates=function(){for(var t=new Date(this.from);t<=new Date(this.to);){this.lineChartLabels.push(this.datePipe.transform(new Date(t),"MM/dd")),this.chartvalues.push(null);var e=t.setDate(t.getDate()+1);t=new Date(e)}},t.prototype.ngOnInit=function(){var t=this;this.auth.validateUserRole(),this.getEggTypeList(),this._route.params.subscribe((function(e){t.type=e.id,t.getList()}))},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.priceManagementService.getPriceTrend(this.page,this.limit,this.type,this.from,this.to,this.order).then((function(e){0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),this.getGraph(),[2]}}))}))},t.prototype.getEggTypeList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.eggTypeService.getList().then((function(e){if(0==e.error){t.egg_type_options=e.datas;var n=t.egg_type_options.find((function(e){return e.id==t.type}));t.type_name=n.type}})).catch((function(t){console.log(t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.changeType=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,t=this.egg_type_options.find((function(t){return t.id==e.type})),this.type_name=t.type,[4,this.getList()];case 1:return n.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,this.chartvalues=[],this.lineChartLabels=[],this.loopDates(),[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e,n;return o.__generator(this,(function(o){switch(o.label){case 0:return t=new Date,e=t.getFullYear(),n=t.getMonth(),this.from=this.datePipe.transform(new Date(e,n,1),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(e,n+1,0),"yyyy-MM-dd"),this.created_at={begin:this.from,end:this.to},this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,this.chartvalues=[],this.lineChartLabels=[],this.loopDates(),[4,this.getList()];case 1:return o.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getGraph=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.chartvalues=[],this.lineChartData=[],[4,this.priceManagementService.getPriceTrend(1,this.totalItems,this.type,this.from,this.to,this.order).then((function(e){t.isLoaded=!0,0==e.error?(e.datas.forEach((function(e){var n=t.lineChartLabels.indexOf(t.datePipe.transform(new Date(e.updated_at),"MM/dd"));t.chartvalues[n]=Number(e.price)})),t.lineChartData=[{data:t.chartvalues,label:"Price",borderColor:"#FF9F1A",backgroundColor:"transparent",hoverBackgroundColor:"transparent",lineTension:0}]):t.lineChartData=[{data:t.chartvalues,label:"Sales",borderColor:"#FF9F1A",backgroundColor:"transparent",hoverBackgroundColor:"transparent",lineTension:0}]})).catch((function(e){console.log("e",e),t.isLoaded=!0,t.lineChartData=[{data:t.chartvalues,label:"Sales",borderColor:"#FF9F1A",backgroundColor:"transparent",hoverBackgroundColor:"transparent",lineTension:0}]}))];case 1:return e.sent(),[2]}}))}))},t.prototype.downloadModal=function(){this.dialog.open(fo,{panelClass:"scroll",data:{page:1,limit:this.totalItems,type:this.type,from:this.from,to:this.to,order:this.order,visible_columns:this.visible_columns,ths:this.ths}}).afterClosed().subscribe((function(t){}))},t.prototype.goBack=function(){this.location.back()},t.ctorParameters=function(){return[{type:ge},{type:u.a},{type:c.d},{type:On},{type:ce},{type:g.b},{type:c.g}]},t=o.__decorate([Object(i.n)({selector:"app-price-management-view",template:o.__importDefault(n("Gr6q")).default,styles:[o.__importDefault(n("romT")).default]})],t)}(),vo=[{label:"Flockman",value:8},{label:"General Manager",value:4},{label:"Inspector 1",value:6},{label:"Inspector 2",value:7},{label:"Sales Agent",value:5},{label:"Sorter",value:9},{label:"Warehouseman",value:10}],_o=function(){function t(t,e,n,o,i,s){this.auth=t,this.dialog=e,this._snackBar=n,this.formBuilder=o,this.location=i,this.strand=s,this.roles=vo,this.isProfileImageLoaded=!1,this.isProfilePhotoCropped=!1,this.profileUploadWrongFile=!1,this.uploadMaxLimitReached=!1,this.userForm=this.formBuilder.group({id:[null],role:["",se.k.compose([se.k.required])],first_name:["",se.k.compose([se.k.required,se.k.maxLength(50)])],last_name:["",se.k.compose([se.k.required,se.k.maxLength(50)])],username:["",se.k.compose([se.k.required,se.k.maxLength(50)])],number:["",se.k.compose([se.k.required,se.k.pattern("^[0-9]*$"),se.k.maxLength(10),se.k.minLength(10)])],location:["",se.k.compose([se.k.required,se.k.maxLength(60)])],photo:[]})}return t.prototype.ngOnInit=function(){this.auth.validateUserRole()},t.prototype.openModal=function(t,e){var n=this;console.log(t),console.log(e),this.dialog.open(me,{width:"400px",data:{item:t||null,action:e}}).afterClosed().subscribe((function(t){t&&(n.location.back(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))},t.prototype.changeRole=function(t){4==this.userForm.controls.role.value||5==this.userForm.controls.role.value?this.userForm.addControl("email",new se.c("",se.k.compose([se.k.required,se.k.pattern("^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$"),se.k.maxLength(50),se.k.minLength(6)]))):this.userForm.removeControl("email")},t.prototype.fileChange=function(t){console.log(t),t.target.files[0].type.match("image.*")?t.target.files[0].size>1e6?this.uploadMaxLimitReached=!0:(this.uploadMaxLimitReached=!1,this.isProfileImageLoaded=!1,this.isProfilePhotoCropped=!1,this.profileUploadWrongFile=!1,this.profilePhoto=t):(this.isProfileImageLoaded=!0,this.isProfilePhotoCropped=!0,this.profileUploadWrongFile=!0,this.profilePhoto=null)},t.prototype.imageProfilePhotoCropped=function(t){this.croppedprofilePhoto=t.base64,this.isProfilePhotoCropped=!0;var e=new File([t.file],this.strand.generateFileName());this.userForm.controls.photo.setValue(e)},t.prototype.imageProfileLoaded=function(){this.isProfileImageLoaded=!0},t.prototype.startCrop=function(t){this.imageCropper.crop()},t.prototype.goBack=function(t,e){var n=this;this.dialog.open(he,{width:"400px",data:{item:null,action:t,page:e}}).afterClosed().subscribe((function(t){t&&n.location.back()}))},t.ctorParameters=function(){return[{type:ge},{type:g.b},{type:ae.a},{type:se.b},{type:c.g},{type:Ie}]},o.__decorate([Object(i.nb)(ke.a,{static:!1})],t.prototype,"imageCropper",void 0),t=o.__decorate([Object(i.n)({selector:"app-staff-create",template:o.__importDefault(n("MQ7m")).default,styles:[o.__importDefault(n("xjKD")).default]})],t)}(),yo=[{label:"ID",key:"id",canSort:!0,isVisible:!0,canToggle:!0},{label:"Staff Name",key:"first_name",canSort:!0,isVisible:!0,canToggle:!0},{label:"User Role",key:"user_role_id",canSort:!0,isVisible:!0,canToggle:!0},{label:"Username",key:"username",canSort:!0,isVisible:!0,canToggle:!0},{label:"Mobile Number",key:"number",canSort:!1,isVisible:!0,canToggle:!0},{label:"Last Login",key:"last_login",canSort:!0,isVisible:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],xo=function(){function t(t,e,n,o){var i=this;this.auth=t,this.datePipe=e,this.generalService=n,this.staffService=o,this.isLoaded=!1,this.ths=yo,this.limits=Me,this.roles=vo,this.visible_columns=[],this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.search="",this.role_id=0,this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.activity=[],this.showtimeago=!0,this.max_date=new Date,this.ths.forEach((function(t,e){i.visible_columns.push(e)})),this.max_date.setDate(this.max_date.getDate())}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getList(),this.getActivity("staff_listing")},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.staffService.getList(this.page,this.limit,this.order,this.role_id,this.from,this.to,this.search).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeRole=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return e.sent(),[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.role_id=0,this.from=null,this.to=null,this.created_at=[],this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:ge},{type:c.d},{type:Fe},{type:Se}]},t=o.__decorate([Object(i.n)({selector:"app-staff-listing",template:o.__importDefault(n("8J7X")).default,styles:[o.__importDefault(n("Dmor")).default]})],t)}(),wo=function(){function t(t,e,n,o,i,s,a,r){this._route=t,this.dialog=e,this._snackBar=n,this.formBuilder=o,this.location=i,this.staffService=s,this.strand=a,this.auth=r,this.roles=vo,this.isProfileImageLoaded=!1,this.isProfilePhotoCropped=!1,this.profileUploadWrongFile=!1,this.uploadMaxLimitReached=!1,this.user_info=[],this.user_logged_in=[],this.userForm=this.formBuilder.group({id:[null],role:["",se.k.compose([se.k.required])],first_name:["",se.k.compose([se.k.required,se.k.maxLength(50)])],last_name:["",se.k.compose([se.k.required,se.k.maxLength(50)])],username:["",se.k.compose([se.k.required,se.k.maxLength(50)])],password:[""],number:["",se.k.compose([se.k.required,se.k.pattern("^[0-9]*$"),se.k.maxLength(10),se.k.minLength(10)])],location:["",se.k.compose([se.k.required,se.k.maxLength(60)])],photo:[]}),this.user_logged_in=JSON.parse(localStorage.getItem("user"))}return t.prototype.ngOnInit=function(){var t=this;this.auth.validateUserRole(),this._route.params.subscribe((function(e){t.getRecord(e.id)}))},t.prototype.getRecord=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.staffService.getProfile(t).then((function(t){0==t.error&&(e.user_info=t.data,e.user_info.profile_picture&&(e.profilePhoto=e.user_info.profile_picture),e.userForm.controls.id.setValue(e.user_info.id),e.userForm.controls.role.setValue(Number(e.user_info.user_role_id)),e.userForm.controls.first_name.setValue(e.user_info.profile_first_name),e.userForm.controls.last_name.setValue(e.user_info.profile_last_name),e.userForm.controls.number.setValue(e.user_info.contact_number),e.userForm.controls.username.setValue(e.user_info.username),e.userForm.controls.location.setValue(e.user_info.address_address),4!=e.user_info.user_role_id&&5!=e.user_info.user_role_id||e.userForm.addControl("email",new se.c(e.user_info.email,se.k.compose([se.k.required,se.k.pattern("^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$"),se.k.maxLength(50),se.k.minLength(6)]))))})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.prototype.openModal=function(t,e){var n=this;console.log(t),console.log(e),this.dialog.open(me,{width:"400px",data:{item:t||null,action:e}}).afterClosed().subscribe((function(t){t&&(n.location.back(),"user_delete"==e&&n.location.back(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))},t.prototype.changeRole=function(t){4==this.userForm.controls.role.value||5==this.userForm.controls.role.value?this.userForm.addControl("email",new se.c(this.user_info.email?this.user_info.email:"",se.k.compose([se.k.required,se.k.pattern("^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$")]))):this.userForm.removeControl("email")},t.prototype.fileChange=function(t){console.log(t),t.target.files[0].type.match("image.*")?t.target.files[0].size>1e6?this.uploadMaxLimitReached=!0:(this.uploadMaxLimitReached=!1,this.isProfileImageLoaded=!1,this.isProfilePhotoCropped=!1,this.profileUploadWrongFile=!1,this.profilePhoto=t):(this.isProfileImageLoaded=!0,this.isProfilePhotoCropped=!0,this.profileUploadWrongFile=!0,this.profilePhoto=null)},t.prototype.imageProfilePhotoCropped=function(t){this.croppedprofilePhoto=t.base64,this.isProfilePhotoCropped=!0;var e=new File([t.file],this.strand.generateFileName());this.userForm.controls.photo.setValue(e)},t.prototype.imageProfileLoaded=function(){this.isProfileImageLoaded=!0},t.prototype.startCrop=function(t){this.imageCropper.crop()},t.prototype.goBack=function(t,e){var n=this;this.dialog.open(he,{width:"400px",data:{item:null,action:t,page:e}}).afterClosed().subscribe((function(t){t&&n.location.back()}))},t.prototype.generatePassword=function(){var t=this;console.log(this.userForm.value),this.auth.generate(this.userForm.value).then((function(e){0==e.error&&t.userForm.controls.password.setValue(e.data)})).catch((function(t){console.log(t)}))},t.ctorParameters=function(){return[{type:u.a},{type:g.b},{type:ae.a},{type:se.b},{type:c.g},{type:Se},{type:Ie},{type:ge}]},o.__decorate([Object(i.nb)(ke.a,{static:!1})],t.prototype,"imageCropper",void 0),t=o.__decorate([Object(i.n)({selector:"app-staff-update",template:o.__importDefault(n("YcrU")).default,styles:[o.__importDefault(n("cPi2")).default]})],t)}(),ko=[{label:"Activity",key:"action",canSort:!0,isVisible:!0,canToggle:!0},{label:"Date",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0}],Io=function(){function t(t,e,n,o,i,s,a,r,l){var c=this;this.auth=t,this.datePipe=e,this.dailyReportsService=n,this.staffService=o,this.location=i,this._route=s,this.dashboardService=a,this.dialog=r,this._snackBar=l,this.isLoaded=!1,this.ths=ko,this.limits=Me,this.visible_columns=[],this.report_status_options=je,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"created_at",order_by:"asc"},this.search="",this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.user_profile=[],this.code_options=[],this.show_password=!1,this.user_logged_in=[],this.user_info=[],this.ths.forEach((function(t,e){c.visible_columns.push(e)})),this.user_logged_in=JSON.parse(localStorage.getItem("user"))}return t.prototype.ngOnInit=function(){var t=this;this.auth.validateUserRole(),this._route.params.subscribe((function(e){t.getRecord(e.id)}))},t.prototype.getRecord=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.staffService.getProfile(t).then((function(t){0==t.error&&(e.user_profile=t.data,e.getListing(),e.getCodefilter())})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,this.getListing(),[2]}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,this.getListing(),[2]}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){return this.page!=t&&(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,this.getListing()),[2]}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){return t&&(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,this.getListing()),[2]}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,this.getListing(),[2]}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){return this.from=null,this.to=null,this.created_at=[],this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,this.report_status=null,this.code=null,this.getListing(),[2]}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){return this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),1==this.visible_columns.length?(t=this.ths.length-1,this.ths[t].isVisible=!1):(t=this.ths.length-1,this.ths[t].isVisible=!0),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.goBack=function(){this.location.back()},t.prototype.getListing=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dashboardService.getStaffActivities(this.page,this.limit,this.user_profile.id,this.from,this.to,this.code,this.order).then((function(e){t.isLoaded=!0,console.log("staffActivities",e),0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getCodefilter=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dashboardService.getCode(this.user_profile.user_role_id).then((function(e){console.log("code",e),0==e.error&&(t.code_options=e.datas,console.log("codeoptions",t.code_options))}))];case 1:return e.sent(),[2]}}))}))},t.prototype.changeCode=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.showPassword=function(){this.show_password=!this.show_password},t.prototype.openModal=function(t,e){var n=this;console.log(t),console.log(e),this.dialog.open(me,{width:"400px",data:{item:t||null,action:e}}).afterClosed().subscribe((function(t){t&&(n.location.back(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))},t.ctorParameters=function(){return[{type:ge},{type:c.d},{type:qe},{type:Se},{type:c.g},{type:u.a},{type:Ke},{type:g.b},{type:ae.a}]},t=o.__decorate([Object(i.n)({selector:"app-staff-view",template:o.__importDefault(n("0nnc")).default,styles:[o.__importDefault(n("uj/Q")).default]})],t)}(),Co=function(){function t(t,e,n,o,i,s){var a=this;this.datePipe=t,this.dailyReportsService=e,this.staffService=n,this.location=o,this._route=i,this.dashboardService=s,this.isLoaded=!1,this.ths=ko,this.limits=Me,this.visible_columns=[],this.report_status_options=je,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"created_at",order_by:"asc"},this.search="",this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.user_profile=[],this.code_options=[],this.ths.forEach((function(t,e){a.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=this,e=JSON.parse(localStorage.getItem("user"));this._route.params.subscribe((function(n){t.getRecord(e.id)}))},t.prototype.getRecord=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.staffService.getProfile(t).then((function(t){0==t.error&&(e.user_profile=t.data,e.getListing(),e.getCodefilter())})).catch((function(t){console.log("e",t)}))];case 1:return n.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,this.getListing(),[2]}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,this.getListing(),[2]}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){return this.page!=t&&(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,this.getListing()),[2]}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){return t&&(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,this.getListing()),[2]}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,this.getListing(),[2]}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){return this.from=null,this.to=null,this.created_at=[],this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,this.report_status=null,this.code=null,this.getListing(),[2]}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){return this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),1==this.visible_columns.length?(t=this.ths.length-1,this.ths[t].isVisible=!1):(t=this.ths.length-1,this.ths[t].isVisible=!0),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.goBack=function(){this.location.back()},t.prototype.getListing=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dashboardService.getStaffActivities(this.page,this.limit,this.user_profile.id,this.from,this.to,this.code,this.order).then((function(e){t.isLoaded=!0,console.log("staffActivities",e),0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getCodefilter=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dashboardService.getCode(this.user_profile.user_role_id).then((function(e){console.log("code",e),0==e.error&&(t.code_options=e.datas,console.log("codeoptions",t.code_options))}))];case 1:return e.sent(),[2]}}))}))},t.prototype.changeCode=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:c.d},{type:qe},{type:Se},{type:c.g},{type:u.a},{type:Ke}]},t=o.__decorate([Object(i.n)({selector:"app-staff-my-profile",template:o.__importDefault(n("DosS")).default,styles:[o.__importDefault(n("R/pk")).default]})],t)}(),Po=function(){function t(t,e,n,o,i,s){this.dialogRef=t,this.data=e,this.formBuilder=n,this._snackBar=o,this.dialog=i,this.datePipe=s,this.item=[],this.total_price=0,this.grand_total=0,this.mode_of_payment_options=Re,this.modal_title="Choose Mode of Payment",this.modal_primary_button="Yes, proceed",this.modal_primary_button_class="btn-primary",this.modal_message="Please choose a mode of payment",this.min_date=new Date,this.max_date=new Date,this.mode_of_payment=null,this.max_date.setDate(this.max_date.getDate()+7),this.orderForm=this.formBuilder.group({mode_of_payment:[null],total_price:[null],payment:[null],balance:[null],due_date:[null]})}return t.prototype.ngOnInit=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.item=this.data.item,this.total_price=this.data.total_price,[4,this.item.cart.forEach((function(e){t.grand_total+=Number(e.total_price)}))];case 1:return e.sent(),this.total_price<1e5&&(this.orderForm.controls.mode_of_payment.setValue(1),this.mode_of_payment=1,this.orderForm.controls.payment.setValue(this.grand_total),this.orderForm.controls.balance.setValue(0)),this.orderForm.controls.total_price.setValue(this.grand_total),[2]}}))}))},t.prototype.changePayment=function(t){this.mode_of_payment=this.orderForm.controls.mode_of_payment.value,1==this.mode_of_payment?(this.orderForm.controls.due_date.clearValidators(),this.orderForm.controls.payment.setValue(this.grand_total),this.orderForm.controls.balance.setValue(0),this.orderForm.controls.due_date.setValue(null),this.modal_title="Choose Mode of Payment",this.modal_message="Please choose a mode of payment",this.modal_primary_button="Next",this.modal_primary_button_class="btn-primary"):2==this.mode_of_payment?(this.modal_title="Credit Form",this.modal_message="Please fill up this credit form.",this.modal_primary_button="Next",this.modal_primary_button_class="btn-primary",this.orderForm.controls.payment.clearValidators(),this.orderForm.controls.payment.setValue(0),this.orderForm.controls.balance.setValue(this.grand_total),this.orderForm.controls.due_date.setValidators([se.k.required]),this.orderForm.controls.due_date.setValue(null)):3==this.mode_of_payment&&(this.modal_title="Balance Form",this.modal_message="Please fill up this balance form.",this.modal_primary_button="Next",this.modal_primary_button_class="btn-primary",this.orderForm.controls.payment.setValue(0),this.orderForm.controls.balance.setValue(this.grand_total),this.orderForm.controls.payment.setValidators([se.k.required,se.k.min(Number(this.grand_total)/2),se.k.max(this.grand_total)]),this.orderForm.controls.due_date.setValidators([se.k.required]),this.orderForm.controls.due_date.setValue(null))},t.prototype.calculateRemaining=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t;return o.__generator(this,(function(e){return(t=Number(this.orderForm.controls.total_price.value)-Number(this.orderForm.controls.payment.value))<0&&(t=0),this.orderForm.controls.balance.setValue(t),[2]}))}))},t.prototype.submit=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e;return o.__generator(this,(function(n){return(t=this.orderForm.controls.due_date.value)&&this.orderForm.controls.due_date.setValue(this.datePipe.transform(new Date(t),"yyyy-MM-dd")),e={customer:{user_id:this.item.user_id,customer_name:this.item.customer_name,number:this.item.number,location:this.item.location,request:this.item.request},payment:this.orderForm.value,cart:this.item.cart},this.closeModal(e),[2]}))}))},t.prototype.closeModal=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dialogRef.close(t)];case 1:return e.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:se.b},{type:ae.a},{type:g.b},{type:c.d}]},t=o.__decorate([Object(i.n)({selector:"app-transaction-create-modal",template:o.__importDefault(n("Vmg8")).default,styles:[o.__importDefault(n("LyMw")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),Mo=[{label:"Egg Size",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Unit Price",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Order Qty",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Total Qty",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Amount",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"",key:"",canSort:!1,isVisible:!0,canToggle:!0}],Fo=function(){function t(t,e,n,o,i,s,a){this.customerService=t,this.eggTypeService=e,this.dialog=n,this._snackBar=o,this.formBuilder=i,this.location=s,this.router=a,this.customer_options=[],this.ths=Mo,this.egg_type_options=[],this.mode_of_payment_options=Re,this.mode_of_payment_label="",this.total_pieces=0,this.cart=[{id:null,label:null,price:0,total_qty:0,total_price:0,items:[{type_id:1,type:"Case",qty:0},{type_id:2,type:"Tray",qty:0},{type_id:3,type:"Piece",qty:0}]}],this.canProceed=!1,this.my_order=[],this.orderForm=this.formBuilder.group({user_id:[null],customer_name:["",se.k.compose([se.k.required,se.k.maxLength(50)])],number:["",se.k.compose([se.k.required,se.k.pattern("^[0-9]*$"),se.k.maxLength(10),se.k.minLength(10)])],location:["",se.k.compose([se.k.required,se.k.maxLength(250)])],request:["",se.k.compose([se.k.maxLength(250)])],payment:[null],cart:[null]})}return t.prototype.ngOnInit=function(){var t=this;console.log("init this");var e=JSON.parse(localStorage.getItem("my_order"));e&&(console.log(e),this.orderForm.controls.user_id.setValue(e.customer.user_id),this.orderForm.controls.customer_name.setValue(e.customer.customer_name),this.orderForm.controls.number.setValue(e.customer.number),this.orderForm.controls.location.setValue(e.customer.location),this.orderForm.controls.request.setValue(e.customer.request),this.cart=[],e.cart.forEach((function(e,n){t.cart.push(e)})),this.validateProceed()),this.getEggTypeList()},t.prototype.getEggTypeList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.eggTypeService.getList().then((function(e){0==e.error&&e.datas.forEach((function(e){(e.id<12||e.id>13)&&(e.isUsed=!1,t.egg_type_options.push(e))}))})).catch((function(t){console.log(t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.getCustomerList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.orderForm.controls.user_id.setValue(null),[4,this.customerService.getList(1,10,null,this.orderForm.controls.customer_name.value).then((function(e){0==e.error?t.customer_options=e.datas:t.customer_options=[]})).catch((function(t){console.log(t)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.customerSelected=function(t){var e=this,n=this.customer_options.find((function(t){return t.id==e.orderForm.controls.customer_name.value}));n&&(this.orderForm.controls.user_id.setValue(n.id),this.orderForm.controls.customer_name.setValue(n.profile_first_name+" "+n.profile_last_name),this.orderForm.controls.number.setValue(n.contact_number),this.orderForm.controls.location.setValue(n.address_address))},t.prototype.eggTypeSelected=function(t,e){console.log("eggTypeSelected",t.value);var n=this.egg_type_options.find((function(e){return e.id==t.value}));this.cart.find((function(e){return e.id==t.value}))?(this._snackBar.open("Egg type already exists in your basket","Okay",{verticalPosition:"top",announcementMessage:"Egg type already exists in your basket",duration:3e3}),this.cart[e]={id:null,label:null,price:0,total_qty:0,total_price:0,items:[{type_id:1,type:"Case",qty:null},{type_id:2,type:"Tray",qty:null},{type_id:3,type:"Piece",qty:null}]}):this.cart[e]={id:t.value,label:n.type,price:n.price.price,total_qty:0,total_price:0,items:[{type_id:1,type:"Case",qty:null},{type_id:2,type:"Tray",qty:null},{type_id:3,type:"Piece",qty:null}]},console.log("cart",this.cart),this.validateProceed()},t.prototype.addItemToCart=function(){this.cart.push({id:null,label:null,price:0,total_qty:0,total_price:0,items:[{type_id:1,qty:0},{type_id:2,qty:0},{type_id:3,qty:0}]}),this.validateProceed()},t.prototype.changeQty=function(t,e,n){this.cart[e].items[n].qty=t.target.value,console.log("cart",this.cart);var o,i=0;this.cart[e].items.forEach((function(t){1==t.type_id?i+=360*Number(t.qty):2==t.type_id?i+=30*Number(t.qty):3==t.type_id&&(i+=Number(t.qty))})),o=Number(i)*Number(this.cart[e].price),this.cart[e].total_qty=i,this.cart[e].total_price=o,this.validateProceed()},t.prototype.submit=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e,n=this;return o.__generator(this,(function(o){switch(o.label){case 0:return t=this.cart.filter((function(t){return t.total_qty>0})),this.cart=[],e=0,[4,t.forEach((function(t){e+=Number(t.total_price),n.cart.push(t)}))];case 1:return o.sent(),this.orderForm.controls.cart.setValue(this.cart),this.dialog.open(Po,{width:"400px",data:{item:this.orderForm.value,total_price:e}}).afterClosed().subscribe((function(t){t&&(localStorage.setItem("my_order",JSON.stringify(t)),n.router.navigate(["transactions/create/preview"]))})),[2]}}))}))},t.prototype.goBack=function(t,e){var n=this;this.dialog.open(he,{width:"400px",data:{item:null,action:t,page:e}}).afterClosed().subscribe((function(t){t&&n.location.back()}))},t.prototype.removeItemInCart=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){return this.cart.splice(t,1),this.validateProceed(),0==this.cart.length&&this.addItemToCart(),[2]}))}))},t.prototype.validateProceed=function(){return o.__awaiter(this,void 0,void 0,(function(){var t,e;return o.__generator(this,(function(n){switch(n.label){case 0:return t=!1,e=0,[4,this.cart.forEach((function(n){e+=Number(n.total_qty),t=n.total_qty>0}))];case 1:return n.sent(),this.canProceed=!!(t&&e>=30),[2]}}))}))},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){return this.orderForm.controls.user_id.setValue(""),this.orderForm.controls.customer_name.setValue(""),this.orderForm.controls.number.setValue(""),this.orderForm.controls.location.setValue(""),this.cart=[],[2]}))}))},t.ctorParameters=function(){return[{type:le},{type:On},{type:g.b},{type:ae.a},{type:se.b},{type:c.g},{type:u.b}]},t=o.__decorate([Object(i.n)({selector:"app-transactions-create",template:o.__importDefault(n("3ycq")).default,styles:[o.__importDefault(n("PcXm")).default]})],t)}(),Lo=function(){function t(t,e,n,o){this.location=t,this.dialog=e,this._snackBar=n,this.router=o,this.my_order=null,this.mode_of_payment_options=Re,this.mode_of_payment_label=null,this.total_pieces=0}return t.prototype.ngOnInit=function(){if(this.my_order=JSON.parse(localStorage.getItem("my_order")),this.my_order){var t=this.my_order.payment.mode_of_payment;this.mode_of_payment_label=this.mode_of_payment_options.find((function(e){return e.value==t})).label;var e=0;this.my_order.cart.forEach((function(t){e+=Number(t.total_qty)})),this.total_pieces=e}else this.router.navigate(["transactions/create"]),this._snackBar.open("Please fill up the form to create a new order","Okay",{verticalPosition:"top",announcementMessage:"Please fill up the form to create a new order",duration:3e3})},t.prototype.goBack=function(t,e){var n=this;e&&"transaction_preview"==e?this.location.back():(localStorage.removeItem("my_order"),this.dialog.open(he,{width:"400px",data:{item:null,action:t,page:e}}).afterClosed().subscribe((function(t){t&&n.router.navigate(["transactions"])})))},t.prototype.openModal=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){return this.dialog.open(me,{width:"400px",data:{item:this.my_order,action:"transaction_create"}}).afterClosed().subscribe((function(e){e&&(localStorage.removeItem("my_order"),t.router.navigate(["transactions"]),t._snackBar.open(e,"Okay",{verticalPosition:"top",announcementMessage:e,duration:3e3}))})),[2]}))}))},t.ctorParameters=function(){return[{type:c.g},{type:g.b},{type:ae.a},{type:u.b}]},t=o.__decorate([Object(i.n)({selector:"app-transactions-create-preview",template:o.__importDefault(n("jzVg")).default,styles:[o.__importDefault(n("8gT+")).default]})],t)}(),So=[{label:"Order no.",key:"transaction_id",canSort:!0,isVisible:!0,canToggle:!0},{label:"Date & Time Ordered",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Customer Name",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Order Status",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Egg Sizes",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Quantity",key:"total_pieces",canSort:!0,isVisible:!0,canToggle:!0},{label:"Total Bill",key:"total_price",canSort:!0,isVisible:!0,canToggle:!0},{label:"Mode of Payment",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Payment Status",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],Do=function(){function t(t,e,n){var o=this;this.datePipe=t,this.generalService=e,this.transactions=n,this.isLoaded=!1,this.ths=So,this.limits=Me,this.visible_columns=[],this.order_status_options=Ae,this.payment_status_options=Ee,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"transaction_id",order_by:"asc"},this.search="",this.order_status=0,this.payment_status=0,this.mode_of_payment=0,this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.activity=[],this.showtimeago=!0,this.ths.forEach((function(t,e){o.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){this.getList(),this.getActivity("transactions_listing")},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.transactions.getList(this.page,this.limit,this.order,null,this.order_status,this.payment_status,this.mode_of_payment,this.from,this.to,this.search).then((function(e){console.log("getTransactions",e),t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.changePaymentStatus=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeOrderStatus=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=null,this.to=null,this.created_at=[],this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,this.payment_status=null,this.order_status=null,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){return this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),1==this.visible_columns.length?(t=this.ths.length-1,this.ths[t].isVisible=!1):(t=this.ths.length-1,this.ths[t].isVisible=!0),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t){return o.__awaiter(this,void 0,void 0,(function(){var e=this;return o.__generator(this,(function(n){switch(n.label){case 0:return[4,this.generalService.getActivity(t).then((function(t){0==t.error?(e.showtimeago=!0,e.activity=t.data):e.showtimeago=!1})).catch((function(t){console.log(t),e.showtimeago=!1}))];case 1:return n.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:c.d},{type:Fe},{type:Oe}]},t=o.__decorate([Object(i.n)({selector:"app-transactions-listing",template:o.__importDefault(n("HS27")).default,styles:[o.__importDefault(n("SZC3")).default]})],t)}(),Vo=[{label:"Order no.",key:"transaction_id",canSort:!0,isVisible:!0,canToggle:!0},{label:"Date & Time Ordered",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Customer Name",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Order Status",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Egg Sizes",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Quantity",key:"total_pieces",canSort:!0,isVisible:!0,canToggle:!0},{label:"Total Bill",key:"total_price",canSort:!0,isVisible:!0,canToggle:!0},{label:"Mode of Payment",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Payment Status",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],Ao=function(){function t(t,e,n,o){var i=this;this.datePipe=t,this._route=e,this.generalService=n,this.transactions=o,this.isLoaded=!1,this.ths=Vo,this.limits=Me,this.visible_columns=[],this.payment_status_options=Ee,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.search="",this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.order_status=1,this.order_status_label="Pending Transactions",this.activity=[],this.showtimeago=!0,this.ths.forEach((function(t,e){i.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=this;this._route.params.subscribe((function(e){console.log(e),t.order_status=e.status,4==t.order_status?t.order_status_label="Completed Transactions":t.order_status_label="Pending Transactions",t.clearFilters(),t.getActivity("transactions_listing",t.order_status)}))},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.transactions.getList(this.page,this.limit,this.order,null,this.order_status,this.payment_status,this.mode_of_payment,this.from,this.to).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.changePaymentStatus=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=null,this.to=null,this.created_at=[],this.payment_status=null,this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){return this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),1==this.visible_columns.length?(t=this.ths.length-1,this.ths[t].isVisible=!1):(t=this.ths.length-1,this.ths[t].isVisible=!0),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n=this;return o.__generator(this,(function(o){switch(o.label){case 0:return[4,this.generalService.getActivity(t,null,e).then((function(t){0==t.error?(n.showtimeago=!0,n.activity=t.data):n.showtimeago=!1})).catch((function(t){console.log(t),n.showtimeago=!1}))];case 1:return o.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:c.d},{type:u.a},{type:Fe},{type:Oe}]},t=o.__decorate([Object(i.n)({selector:"app-transactions-listing-by-order-status",template:o.__importDefault(n("49wH")).default,styles:[o.__importDefault(n("VcuE")).default]})],t)}(),Eo=[{label:"Order no.",key:"transaction_id",canSort:!0,isVisible:!0,canToggle:!0},{label:"Date & Time Ordered",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0},{label:"Customer Name",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Order Status",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Due Date",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Egg Sizes",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Quantity",key:"total_pieces",canSort:!0,isVisible:!0,canToggle:!0},{label:"Total Bill",key:"total_price",canSort:!0,isVisible:!0,canToggle:!0},{label:"Mode of Payment",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Payment Status",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Action",key:"",canSort:!1,isVisible:!0,canToggle:!1}],To=function(){function t(t,e,n,o){var i=this;this.datePipe=t,this._route=e,this.generalService=n,this.transactions=o,this.isLoaded=!1,this.ths=Eo,this.limits=Me,this.visible_columns=[],this.payment_status_options=Ee,this.items=[],this.totalItems=0,this.prev_page=0,this.next_page=0,this.totalPages=0,this.page=1,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.search="",this.from=null,this.to=null,this.created_at=[],this.show_filter=!1,this.mode_of_payment=2,this.mode_of_payment_label="With Credit Transactions",this.activity=[],this.showtimeago=!0,this.ths.forEach((function(t,e){i.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){var t=this;this._route.params.subscribe((function(e){console.log(e),t.mode_of_payment=e.status,3==t.mode_of_payment?t.mode_of_payment_label="With Balance Transactions":t.mode_of_payment_label="With Credit Transactions",t.clearFilters(),t.getActivity("transactions_listing",t.mode_of_payment)}))},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.transactions.getList(this.page,this.limit,this.order,null,this.order_status,this.payment_status,this.mode_of_payment,this.from,this.to).then((function(e){t.isLoaded=!0,0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.page==t?[3,2]:(this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]);case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.changePaymentStatus=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.chooseCreatedAt=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=this.datePipe.transform(new Date(this.created_at.begin),"yyyy-MM-dd"),this.to=this.datePipe.transform(new Date(this.created_at.end),"yyyy-MM-dd"),this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.showFilter=function(){this.show_filter=!this.show_filter},t.prototype.clearFilters=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.from=null,this.to=null,this.created_at=[],this.payment_status=null,this.isLoaded=!1,this.page=1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getList()];case 1:return t.sent(),[2]}}))}))},t.prototype.changeColumnVisibility=function(t){return o.__awaiter(this,void 0,void 0,(function(){var t,e=this;return o.__generator(this,(function(n){return this.ths.forEach((function(t,n){t.isVisible=e.visible_columns.some((function(t){return t==n}))})),1==this.visible_columns.length?(t=this.ths.length-1,this.ths[t].isVisible=!1):(t=this.ths.length-1,this.ths[t].isVisible=!0),[2]}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.getActivity=function(t,e){return o.__awaiter(this,void 0,void 0,(function(){var n=this;return o.__generator(this,(function(o){switch(o.label){case 0:return[4,this.generalService.getActivity(t,null,null,e).then((function(t){0==t.error?(n.showtimeago=!0,n.activity=t.data):n.showtimeago=!1})).catch((function(t){console.log(t),n.showtimeago=!1}))];case 1:return o.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:c.d},{type:u.a},{type:Fe},{type:Oe}]},t=o.__decorate([Object(i.n)({selector:"app-transactions-listing-by-payment-status",template:o.__importDefault(n("hGRL")).default,styles:[o.__importDefault(n("wvAK")).default]})],t)}(),Ro=[{label:"Item Details",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Unit Price",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Order Qty",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Total Qty",key:"",canSort:!1,isVisible:!0,canToggle:!0},{label:"Amount",key:"",canSort:!1,isVisible:!0,canToggle:!0}],Oo=function(){function t(t,e){this.dialogRef=t,this.inventoryStocksService=e,this.items=[],this.modal_title="Current Stocks",this.modal_primary_button="Okay",this.modal_primary_button_class="btn-primary",this.modal_message="Latest inventory of fresh eggs",this.isLoaded=!1}return t.prototype.ngOnInit=function(){this.getList()},t.prototype.getList=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.inventoryStocksService.search().then((function(e){t.isLoaded=!0,0==e.error&&(t.items=e.data)})).catch((function(e){t.isLoaded=!0,console.log(e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.closeModal=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dialogRef.close(t)];case 1:return e.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.d},{type:an}]},t=o.__decorate([Object(i.n)({selector:"app-fresh-egg-inventory-modal",template:o.__importDefault(n("R8wO")).default,styles:[o.__importDefault(n("Z+OA")).default]})],t)}(),Bo=function(){function t(t,e,n,o,i,s,a){this.dialogRef=t,this.data=e,this.feedsMedicineManagementService=n,this.formBuilder=o,this._snackBar=i,this.dialog=s,this.ordersService=a,this.item=[],this.modal_title="Add Discount",this.modal_primary_button="Save",this.modal_primary_button_class="btn-primary",this.modal_message="Please enter discount amount below.",this.discountForm=this.formBuilder.group({id:[null],total_price:[0],discount:[0]})}return t.prototype.ngOnInit=function(){this.item=this.data.item,this.action=this.data.action,console.log("iumte",this.item),console.log("action",this.action),this.item&&(1==this.item.mode_of_payment?(this.discountForm.controls.id.setValue(this.item.id),this.discountForm.controls.total_price.setValue(this.item.total_price),this.discountForm.controls.discount.setValue(this.item.discount),this.discountForm.controls.discount.setValidators([se.k.required,se.k.min(0),se.k.max(Number(this.item.total_price)-1)])):2==this.item.mode_of_payment?(this.discountForm.controls.id.setValue(this.item.id),this.discountForm.controls.total_price.setValue(this.item.payment.balance),this.discountForm.controls.discount.setValue(this.item.discount),this.discountForm.controls.discount.setValidators([se.k.required,se.k.min(0),se.k.max(Number(this.item.payment.balance)-1)])):3==this.item.mode_of_payment&&(this.discountForm.controls.id.setValue(this.item.id),this.discountForm.controls.total_price.setValue(this.item.payment.payment),this.discountForm.controls.discount.setValue(this.item.discount),this.discountForm.controls.discount.setValidators([se.k.required,se.k.min(0),se.k.max(Number(this.item.payment.payment)-1)])))},t.prototype.calculateFinalPrice=function(t){var e=0;1==this.item.mode_of_payment?e=Number(this.item.total_price)-Number(this.discountForm.controls.discount.value):2==this.item.mode_of_payment?e=Number(this.item.payment.balance)-Number(this.discountForm.controls.discount.value):3==this.item.mode_of_payment&&(e=Number(this.item.payment.payment)-Number(this.discountForm.controls.discount.value)),e>=0&&this.discountForm.controls.total_price.setValue(e)},t.prototype.submit=function(){var t=this;this.closeModal(),this.dialog.open(me,{width:"400px",data:{item:this.discountForm.value,action:this.action}}).afterClosed().subscribe((function(e){e&&t._snackBar.open(e,"Okay",{verticalPosition:"top",announcementMessage:e,duration:3e3})}))},t.prototype.closeModal=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.dialogRef.close(t)];case 1:return e.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:g.d},{type:void 0,decorators:[{type:i.B,args:[g.a]}]},{type:pe},{type:se.b},{type:ae.a},{type:g.b},{type:ie}]},t=o.__decorate([Object(i.n)({selector:"app-add-discount-modal",template:o.__importDefault(n("dwFI")).default,styles:[o.__importDefault(n("VHkw")).default]}),o.__param(1,Object(i.B)(g.a))],t)}(),No=function(){function t(t,e,n,o,i,s,a,r){var l=this;this.events=t,this.dialog=e,this._snackBar=n,this.location=o,this.route=i,this._route=s,this.session=a,this.transactionsService=r,this.item=[],this.ths=Ro,this.visible_columns=[],this.order_items=[],this.isLoaded=!1,this.primary_button="Approve Order",this.primary_button_action="order_approve",this.userProfile=[],this.timerLabels={Hours:"HRS",Minutes:"MIN",Seconds:"SEC"},this.date_today=new Date,this.date_to_pickup=null,this.display_timer=!1,this.showAction=!1,this.ths.forEach((function(t,e){l.visible_columns.push(e)})),this.events.subscribe("order_refresh",(function(t){t&&l.ngOnInit()}))}return t.prototype.ngOnInit=function(){var t=this;this.userProfile=JSON.parse(localStorage.getItem("user")),this._route.params.subscribe((function(e){t.order_id=e.id,t.getRecord()}))},t.prototype.getRecord=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return[4,this.transactionsService.getRecord(this.order_id).then((function(e){if(t.isLoaded=!0,console.log("getRecord",e),0==e.error)if(t.item=e.data,t.item.total_price=Number(t.item.total_price)+Number(t.item.discount),2==t.item.mode_of_payment?t.item.payment.balance=Number(t.item.payment.balance)+Number(t.item.discount):3==t.item.mode_of_payment&&(t.item.payment.payment=Number(t.item.payment.payment)+Number(t.item.discount)),t.display_timer=t.date_today<=new Date(t.item.date_to_pickup),t.order_items=e.data.order_items,t.showAction=!1,5==t.userProfile.user_role_id)1==t.item.order_status&&1==t.item.mode_of_payment&&(t.primary_button="Approve Order",t.primary_button_action="order_approve",t.showAction=!0),3==t.item.order_status&&t.item.prepared_by,1==t.item.order_status&&t.item.mode_of_payment>1&&1==t.item.balance_credit_approved&&(t.primary_button="Approve Order",t.primary_button_action="order_approve",t.showAction=!0);else if(4==t.userProfile.user_role_id){if(1==t.item.order_status&&1==t.item.mode_of_payment&&(t.primary_button="Approve Order",t.primary_button_action="order_approve",t.showAction=!0),1==t.item.order_status&&t.item.mode_of_payment>1&&0==t.item.balance_credit_approved){var n=2==t.item.mode_of_payment?"Credit":"Balance";t.primary_button="Approve "+n+" Request",t.primary_button_action="payment_approve",t.showAction=!0}1==t.item.order_status&&t.item.mode_of_payment>1&&1==t.item.balance_credit_approved&&(t.primary_button="Approve Order",t.primary_button_action="order_approve",t.showAction=!0),3==t.item.order_status&&t.item.prepared_by}})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.openModal=function(t,e){var n=this;if("update_payment"==e)this.route.navigate(["/transactions/update-payment",t.id]);else if("order_approve"==e||"payment_approve"==e){this.dialog.open(me,{width:"400px",data:{item:t,action:e}}).afterClosed().subscribe((function(t){t&&(n.isLoaded=!1,n.getRecord(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))}else if("order_decline"==e){this.dialog.open(he,{width:"400px",data:{item:t,action:e}}).afterClosed().subscribe((function(t){t&&(n.getRecord(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))}else if("show_stocks"==e)this.dialog.open(Oo,{width:"600px"});else if("add_discount"==e){this.dialog.open(Bo,{width:"400px",data:{item:t,action:e}}).afterClosed().subscribe((function(t){t&&(n.getRecord(),n._snackBar.open(t,"Okay",{verticalPosition:"top",announcementMessage:t,duration:3e3}))}))}},t.prototype.goBack=function(){this.location.back()},t.prototype.removeTimer=function(t){console.log("e",t),this.display_timer=!1},t.ctorParameters=function(){return[{type:d.b},{type:g.b},{type:ae.a},{type:c.g},{type:u.b},{type:u.a},{type:f.b},{type:Oe}]},t=o.__decorate([Object(i.n)({selector:"app-transactions-view",template:o.__importDefault(n("veS5")).default,styles:[o.__importDefault(n("3nx+")).default]})],t)}(),jo=[{label:"Name",key:"name",canSort:!0,isVisible:!0,canToggle:!0},{label:"Activity",key:"action",canSort:!0,isVisible:!0,canToggle:!0},{label:"Date",key:"created_at",canSort:!0,isVisible:!0,canToggle:!0}],qo=function(){function t(t,e){var n=this;this.auth=t,this.dashboardService=e,this.isLoaded=!1,this.ths=jo,this.limits=Me,this.visible_columns=[],this.items=[],this.totalItems=0,this.page=1,this.prev_page=0,this.next_page=0,this.totalPages=0,this.limit=10,this.limit_disabled=0,this.order={order_by_column:"id",order_by:"asc"},this.search="",this.ths.forEach((function(t,e){n.visible_columns.push(e)}))}return t.prototype.ngOnInit=function(){this.auth.validateUserRole(),this.getListing()},t.prototype.changeLimit=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.prototype.gotoPage=function(t){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(e){switch(e.label){case 0:return this.isLoaded=!1,this.page=t,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return e.sent(),[2]}}))}))},t.prototype.getListing=function(){return o.__awaiter(this,void 0,void 0,(function(){var t=this;return o.__generator(this,(function(e){switch(e.label){case 0:return this.limit_disabled=this.limit,[4,this.dashboardService.getStaffActivities(this.page,this.limit,null,null,null,null,this.order,this.search).then((function(e){t.isLoaded=!0,console.log("staffActivities",e),0==e.error?(t.totalItems=e.total_count,t.totalPages=e.total_page,t.prev_page=e.previous_page,t.next_page=e.next_page,t.totalItems<10&&(t.limit_disabled=t.totalItems),e.datas.forEach((function(e){t.items.push(e)}))):(t.items=[],t.totalItems=0,t.totalPages=0)})).catch((function(e){t.isLoaded=!0,console.log("e",e)}))];case 1:return e.sent(),[2]}}))}))},t.prototype.counter=function(t){return new Array(t)},t.prototype.orderList=function(t,e,n){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(o){switch(o.label){case 0:return t?(this.order={order_by_column:e,order_by:n},this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()]):[3,2];case 1:o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.searchItem=function(){return o.__awaiter(this,void 0,void 0,(function(){return o.__generator(this,(function(t){switch(t.label){case 0:return this.isLoaded=!1,this.items=[],this.totalItems=0,this.totalPages=0,[4,this.getListing()];case 1:return t.sent(),[2]}}))}))},t.ctorParameters=function(){return[{type:ge},{type:Ke}]},t=o.__decorate([Object(i.n)({selector:"app-activity-listing",template:o.__importDefault(n("hBoo")).default,styles:[o.__importDefault(n("0nEt")).default]})],t)}(),Ho=[{path:"",component:ye,canActivate:[xe],children:[{path:"dashboard",component:Xe},{path:"house",component:yn},{path:"staffs/create",component:_o},{path:"staffs",component:xo},{path:"staffs/update/:id",component:wo},{path:"staffs/view/:id",component:Io},{path:"my-profile",component:Co},{path:"customers/create",component:Ce},{path:"customers",component:Le},{path:"customers/update/:id",component:De},{path:"customers/view/:id",component:Be},{path:"feeds-medicine-management/feeds/create",component:cn},{path:"feeds-medicine-management/feeds",component:un},{path:"feeds-medicine-management/feeds/update/:id",component:mn},{path:"feeds-medicine-management/medicine/create",component:hn},{path:"feeds-medicine-management/medicine",component:fn},{path:"feeds-medicine-management/medicine/update/:id",component:bn},{path:"feeds-medicine-consumption/create",component:tn},{path:"feeds-medicine-consumption/update/:id",component:tn},{path:"feeds-medicine-consumption",component:en},{path:"feeds-medicine-consumption/view/:house_id",component:ln},{path:"daily-reports-house/:id",component:$e},{path:"daily-reports",component:Ye},{path:"daily-reports/view/:id",component:Je},{path:"transactions/update-payment/:id",component:ro},{path:"transactions/payments/:id",component:ao},{path:"transactions/payments/print/:id/:from",component:co},{path:"transactions/create",component:Fo},{path:"transactions/create/preview",component:Lo},{path:"transactions",component:Do},{path:"transactions-status/:status",component:Ao},{path:"transactions-payment/:status",component:To},{path:"transactions/view/:id",component:No},{path:"price-management",component:ho},{path:"price-management/view/:id",component:bo},{path:"performance-report/harvested/production-by-egg-size",component:zn},{path:"performance-report/harvested/production-per-house",component:Gn},{path:"performance-report/sales/overall-sales",component:Qn},{path:"performance-report/sales/sales-by-egg-size",component:Kn},{path:"performance-report/consumption/feeds",component:jn},{path:"performance-report/consumption/medicine",component:Hn},{path:"performance-report/stocks",component:to},{path:"performance-report/stocks/view/:id",component:eo},{path:"inventory-stocks/fresh-eggs",component:kn},{path:"inventory-stocks/fresh-eggs/view/:date",component:Pn},{path:"inventory-stocks/trays",component:En},{path:"inventory-stocks/trays/view/:id",component:Rn},{path:"inventory-stocks/sacks",component:Ln},{path:"inventory-stocks/sacks/view/:id",component:Dn},{path:"activity-log/activity",component:qo},{path:"",redirectTo:"dashboard",pathMatch:"full"}]},{path:"login",component:we},{path:"**",redirectTo:"login"}],Uo=function(){function t(){}return t=o.__decorate([Object(i.K)({imports:[u.c.forRoot(Ho)],exports:[u.c]})],t)}(),zo=function(){function t(){}return t.prototype.ngOnInit=function(){},t=o.__decorate([Object(i.n)({selector:"app-root",template:o.__importDefault(n("VzVu")).default,styles:[o.__importDefault(n("ynWL")).default]})],t)}(),$o=n("sU9O"),Go=n("ARl4"),Wo=n("dXze"),Yo=n("kWGw"),Qo=n("0/Q6"),Jo=n("jlZm"),Ko=n("SMsm"),Zo=n("mVsa"),Xo=n("Wf4p"),ti=n("UodH"),ei=n("jQLj"),ni=n("de3e"),oi=n("uGex"),ii=n("/dO6"),si=n("8mMr"),ai=n("/1js"),ri=n("4tE/"),li=n("/6xy"),ci=n("La40"),di=n("FVSy"),ui=n("Nsh5"),mi=n("6Wmm"),pi=n("Blfk"),hi=[si.a,Qo.a,Jo.a,Ko.a,Zo.a,ti.b,Yo.a,Xo.k,ui.a,ei.a,g.c,ae.b,ni.a,oi.a,ii.a,ai.a,ai.b,li.a,ri.a,ci.a,mi.a,di.a,pi.a],gi=function(){function t(){}return t=o.__decorate([Object(i.K)({declarations:[],imports:[hi],exports:[hi]})],t)}(),fi=n("wFw1"),bi=n("LWQm"),vi=n("54OS"),_i=function(){function t(){}return t.prototype.ngOnInit=function(){},t=o.__decorate([Object(i.n)({selector:"app-reports-buttons",template:o.__importDefault(n("ODH/")).default,styles:[o.__importDefault(n("W8G2")).default]})],t)}(),yi=n("PWQT"),xi=n("9Ul1"),wi=n("Zseb"),ki=n("hDTV"),Ii=n("X8TH"),Ci=n("aEbr"),Pi=!1,Mi={apiKey:"AIzaSyCEFbL7oEPDpdr37EfOM9Wrjbz7Xe3yx3k",authDomain:"gapan-internal-app.firebaseapp.com",databaseURL:"https://gapan-internal-app.firebaseio.com",projectId:"gapan-internal-app",storageBucket:"gapan-internal-app.appspot.com",messagingSenderId:"520078777587",appId:"1:520078777587:web:eee20e4aae163df997ab86",measurementId:"G-1PH10PZTD0"},Fi=function(){function t(){}return t.prototype.ngOnInit=function(){},t=o.__decorate([Object(i.n)({selector:"app-report-footer",template:o.__importDefault(n("1EFy")).default,styles:[o.__importDefault(n("5kkn")).default]})],t)}(),Li=function(){function t(){}return t=o.__decorate([Object(i.K)({declarations:[zo,ye,we,Ce,Le,De,Be,$e,Ye,Je,Xe,tn,en,ln,cn,un,mn,hn,fn,bn,yn,_n,kn,Pn,Ln,Dn,En,Rn,jn,Hn,zn,Gn,Qn,Kn,to,eo,ho,bo,_o,xo,wo,Io,Fo,Do,Ao,To,No,me,he,_i,pn,mo,Po,qo,Oo,Co,Lo,so,ao,ro,co,Bo,Un,Yn,Ue,We,po,fo,Jn,Xn,$n,Nn,on,wn,An,Fn,Qe,rn,Cn,sn,qn,Fi],entryComponents:[_n,pn,me,he,mo,Po,Oo,so,Bo,Un,Yn,We,Ue,po,fo,Jn,Xn,$n,Nn,on,wn,An,Fn,Qe,rn,Cn,sn,qn],imports:[a.a,l.a,Uo,r.b,se.e,$o.a,f.a.forRoot(),Go.a.forRoot(),Wo.a.forRoot(),d.a.forRoot(),gi,fi.b,se.j,ke.b,bi.a,vi.a,li.a.forRoot(),yi.a,m.c,xi.a,wi.a,He.a,ki.a.initializeApp(Mi),Ci.a,Ii.a],providers:[Xo.k,c.d,fe.a],bootstrap:[zo]})],t)}();Pi&&Object(i.sb)(),Object(s.a)().bootstrapModule(Li).catch((function(t){return console.error(t)}))},zn8P:function(t,e){function n(t){return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}))}n.keys=function(){return[]},n.resolve=n,t.exports=n,n.id="zn8P"}},[[1,0,5]]]);
//# sourceMappingURL=main.js.map